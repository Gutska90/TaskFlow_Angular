var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.065,1,0.634]],["body/components/AdminComponent.html",[0,0.076,1,0.837,2,0.607,3,0.266,4,0.172,5,0.46,6,0.85,7,0.46,8,0.46,9,0.149,10,1.702,11,1.001,12,1.859,13,1.379,14,2.838,15,1.324,16,3.181,17,2.639,18,3.641,19,3.145,20,1.682,21,3.641,22,3.145,23,4.966,24,1.129,25,1.383,26,0.46,27,1.104,28,0.758,29,2.467,30,0.834,31,0.557,32,0.557,33,1.102,34,1.188,35,1.129,36,3.851,37,0.714,38,3.145,39,0.272,40,0.465,41,5.181,42,1.383,43,2.276,44,4.694,45,3.443,46,5.181,47,1.129,48,0.983,49,4.338,50,4.338,51,4.338,52,1.558,53,0.772,54,1.327,55,0.958,56,1.176,57,1.607,58,3.145,59,0.728,60,0.03,61,0.682,62,0.694,63,0.626,64,2.028,65,1.318,66,1.065,67,1.558,68,1.122,69,2.028,70,3.641,71,1.219,72,3.165,73,2.178,74,2.028,75,2.252,76,2.028,77,2.675,78,1.152,79,1.245,80,1.958,81,0.418,82,1.15,83,2.028,84,1.219,85,2.058,86,2.028,87,2.028,88,2.028,89,0.368,90,0.149,91,0.538,92,0.359,93,0.85,94,0.675,95,0.172,96,0.172,97,1.552,98,0.85,99,1.327,100,0.921,101,0.391,102,2.028,103,0.58,104,0.921,105,2.52,106,1.488,107,1.702,108,1.749,109,2.028,110,0.626,111,1.702,112,2.028,113,2.028,114,2.028,115,2.028,116,2.028,117,1.488,118,2.028,119,2.028,120,3.145,121,3.145,122,3.145,123,4.338,124,3.145,125,3.063,126,2.028,127,3.145,128,3.145,129,2.639,130,4.338,131,2.643,132,1.552,133,2.306,134,3.145,135,3.145,136,3.145,137,2.058,138,2.639,139,1.318,140,3.145,141,3.145,142,3.145,143,1.702,144,3.145,145,1.859,146,3.145,147,3.145,148,3.145,149,3.145,150,3.181,151,1.694,152,0.97,153,0.57,154,2.058,155,3.39,156,2.52,157,3.25,158,3.433,159,1.702,160,2.028,161,3.94,162,2.028,163,2.639,164,3.381,165,3.063,166,2.028,167,3.232,168,4.938,169,4.168,170,2.028,171,2.276,172,6.155,173,4.494,174,3.072,175,3.433,176,3.165,177,4.694,178,4.494,179,2.775,180,2.775,181,3.641,182,4.338,183,3.851,184,2.824,185,2.824,186,2.838,187,3.232,188,3.25,189,2.824,190,4.338,191,3.232,192,2.824,193,2.276,194,3.851,195,3.145,196,4.348,197,2.565,198,4.338,199,2.306,200,2.306,201,3.927,202,2.028,203,2.775,204,4.348,205,4.966,206,2.028,207,2.028,208,1.001,209,3.145,210,1.702,211,2.639,212,0.921,213,4.694,214,4.694,215,4.338,216,3.145,217,1.001,218,3.145,219,2.028,220,1.488,221,2.028,222,3.145,223,3.145,224,2.028,225,3.851,226,1.327,227,1.488,228,1.488,229,2.639,230,2.306,231,2.028,232,2.52,233,2.028,234,3.145,235,1.327,236,2.028,237,3.145,238,1.327,239,1.488,240,1.488,241,2.028,242,2.028,243,0.85,244,2.028,245,1.199,246,2.639,247,1.327,248,1.702,249,1.702,250,2.028,251,1.488,252,1.327,253,2.028,254,3.145,255,2.028,256,0.46,257,0.714,258,0.714,259,0.46,260,0.985,261,0.46,262,2.028,263,1.702,264,0.46,265,0.714,266,0.391,267,0.391,268,0.46,269,0.46,270,0.714,271,0.391,272,0.329,273,0.714,274,0.391,275,0.3,276,0.714,277,0.359,278,0.359,279,0.714,280,0.391,281,0.329,282,0.714,283,0.391,284,0.391,285,0.381,286,0.46,287,0.391,288,0.46,289,0.359,290,0.46,291,0.391,292,0.46,293,0.46,294,0.46,295,0.014,296,0.014]],["title/components/App.html",[0,0.065,28,0.398]],["body/components/App.html",[0,0.113,1,0.813,2,1.014,3,0.357,4,0.357,5,0.956,7,0.956,8,0.956,9,0.31,26,0.956,27,1.199,28,0.824,30,1.394,31,0.932,32,0.932,37,1.193,39,0.565,40,0.778,57,1.205,60,0.03,61,0.932,62,0.623,78,1.034,79,1.117,81,0.406,89,0.446,90,0.31,92,0.746,95,0.357,96,0.357,139,2.204,153,0.623,243,2.589,256,0.956,257,1.193,258,1.193,259,0.956,260,1.362,261,0.956,264,0.956,265,1.193,266,0.813,267,0.813,268,0.956,269,0.956,270,1.193,271,0.813,272,0.683,273,1.193,274,0.813,275,0.623,276,1.193,277,0.746,278,0.746,279,1.193,280,0.813,281,0.683,282,1.193,283,0.813,284,0.813,285,0.637,286,0.956,287,0.813,288,0.956,289,0.746,290,0.956,291,0.813,292,0.956,293,0.956,294,0.956,295,0.023,296,0.023,297,3.535,298,2.204,299,4.81,300,5.257,301,2.832,302,5.257,303,0.882,304,3.108,305,4.212,306,5.257]],["title/components/AppComponent.html",[0,0.065,266,0.634]],["body/components/AppComponent.html",[0,0.113,1,0.811,2,1.013,3,0.356,4,0.356,5,1.191,7,0.954,8,0.954,9,0.309,26,0.954,27,1.199,28,0.821,30,1.392,31,0.93,32,0.93,33,1.638,39,0.564,40,0.776,57,1.202,60,0.03,61,0.93,62,0.621,78,1.032,79,1.114,81,0.405,89,0.508,90,0.309,91,1.114,92,0.745,95,0.356,96,0.356,139,2.201,153,0.621,243,2.4,256,0.954,257,1.191,258,1.191,259,0.954,260,1.361,261,0.954,264,0.954,265,1.191,266,1.157,267,0.811,268,0.954,269,0.954,270,1.191,271,0.811,272,0.682,273,1.191,274,0.811,275,0.621,276,1.191,277,0.745,278,0.745,279,1.191,280,0.811,281,0.682,282,1.191,283,0.811,284,0.811,285,0.636,286,0.954,287,0.811,288,0.954,289,0.745,290,0.954,291,0.811,292,0.954,293,0.954,294,0.954,295,0.023,296,0.023,298,2.201,299,4.805,303,0.88,307,3.527,308,2.826,309,2.4,310,4.202,311,1.762]],["title/injectables/Auth.html",[312,1.179,313,2.409]],["body/injectables/Auth.html",[3,0.434,4,0.434,9,0.376,53,1.53,57,1.465,60,0.03,89,0.434,90,0.376,95,0.434,96,0.434,295,0.026,296,0.026,298,2.146,312,2.123,313,4.335,314,3.35,315,4.297,316,5.12,317,2.527]],["title/injectables/AuthService.html",[55,0.634,312,1.179]],["body/injectables/AuthService.html",[3,0.164,4,0.164,9,0.142,13,1.25,15,1.22,29,1.568,31,0.663,39,0.26,40,0.449,42,1.75,43,2.211,47,1.09,48,1.303,53,0.476,55,0.585,56,1.106,57,1.77,59,1.829,60,0.03,61,0.903,62,0.881,63,1.572,65,1.272,66,0.745,67,2.139,68,1.162,71,1.039,75,2.044,78,1.039,79,1.122,80,0.937,81,0.523,82,0.805,84,1.177,89,0.317,90,0.142,92,0.343,93,2.043,95,0.389,96,0.164,101,1.16,103,1.07,108,0.88,110,1.572,131,0.956,132,1.498,152,0.598,217,2.835,272,0.492,281,0.492,295,0.013,296,0.013,298,0.812,303,1.379,312,1.09,314,1.268,317,0.956,318,1.044,319,3.189,320,2.447,321,2.447,322,2.447,323,2.769,324,2.769,325,2.769,326,3.035,327,2.769,328,2.502,329,2.769,330,2.502,331,2.769,332,2.28,333,3.035,334,3.035,335,3.035,336,1.938,337,3.035,338,1.938,339,1.986,340,1.986,341,1.292,342,1.622,343,2.447,344,1.634,345,1.774,346,1.938,347,1.52,348,1.315,349,2.152,350,3.238,351,1.938,352,1.378,353,2.514,354,2.089,355,4.873,356,1.794,357,1.938,358,2.21,359,2.325,360,1.272,361,1.846,362,1.272,363,3.205,364,1.838,365,1.938,366,1.986,367,2.015,368,1.938,369,1.529,370,2.015,371,1.938,372,1.568,373,1.846,374,1.938,375,2.089,376,1.938,377,1.634,378,1.986,379,2.408,380,2.211,381,1.938,382,1.634,383,2.603,384,2.369,385,1.938,386,1.986,387,1.986,388,2.285,389,2.987,390,2.987,391,1.938,392,1.986,393,2.769,394,3.035,395,1.986,396,1.938,397,1.986,398,2.716,399,1.986,400,2.015,401,1.938,402,1.794,403,2.015,404,1.634,405,1.986,406,1.938,407,1.794,408,1.782,409,1.498,410,1.986,411,1.986,412,2.015,413,1.986,414,1.986,415,1.938,416,1.986,417,1.938,418,1.986,419,1.938,420,1.044,421,1.044,422,0.956,423,0.722,424,3.044,425,1.268,426,1.846,427,1.986,428,2.447,429,1.268,430,1.268,431,1.268,432,1.897,433,3.007,434,1.268,435,1.986,436,1.146,437,1.146,438,1.044,439,1.146,440,1.146,441,1.634,442,1.146,443,1.268,444,1.268,445,2.447,446,1.986,447,1.268,448,1.498,449,1.986,450,1.268,451,1.268,452,1.268,453,1.268,454,1.986,455,1.268,456,1.268,457,1.986,458,1.268,459,1.268,460,1.268,461,0.956,462,1.268,463,1.044,464,1.268,465,1.268,466,1.268,467,3.758,468,1.986,469,1.268,470,1.794,471,2.28,472,2.447,473,2.447,474,1.75,475,0.956,476,1.986,477,1.268,478,1.794,479,2.447,480,1.146,481,1.146,482,1.268,483,1.146,484,1.268,485,0.812,486,0.956,487,1.498,488,1.986,489,1.986,490,1.634,491,1.268,492,2.015,493,1.044,494,1.268,495,0.956,496,1.268,497,1.146,498,1.146,499,1.986,500,1.268,501,1.986,502,1.634,503,1.044,504,1.268,505,0.88,506,1.268,507,1.268,508,1.268,509,0.812,510,1.268,511,1.268,512,1.986,513,1.986,514,1.268,515,1.268,516,1.268,517,1.146,518,1.986,519,1.268,520,1.699,521,1.986,522,1.268,523,1.268,524,1.268,525,1.268,526,1.268,527,1.268,528,1.268,529,1.268,530,1.268]],["title/components/CreateTaskComponent.html",[0,0.065,267,0.634]],["body/components/CreateTaskComponent.html",[0,0.087,1,0.49,2,0.719,3,0.215,4,0.215,5,0.846,7,0.576,8,0.576,9,0.187,11,1.253,13,1.193,15,1.246,20,1.445,24,1.338,25,1.585,26,0.576,27,1.139,28,0.781,30,0.988,31,0.782,32,0.66,33,1.263,34,1.362,39,0.341,40,0.551,42,1.585,47,1.338,48,1.133,52,1.746,53,0.915,55,1.079,56,1.269,57,1.702,59,1.585,60,0.03,61,0.917,62,0.827,63,1.362,67,1.859,68,1.133,71,1.083,78,1.083,79,1.17,81,0.469,82,1.289,89,0.439,90,0.187,91,0.673,92,0.45,94,0.845,95,0.215,96,0.215,97,1.839,98,1.065,100,1.153,101,0.999,110,1.5,153,0.376,243,1.065,251,3.236,256,0.576,257,0.846,258,0.846,259,0.576,260,1.103,261,0.576,264,0.576,265,0.846,266,0.49,267,0.938,268,1.002,269,0.576,270,0.846,271,0.49,272,0.412,273,0.846,274,0.49,275,0.376,276,0.846,277,0.45,278,0.45,279,0.846,280,0.49,281,0.412,282,0.846,283,0.49,284,0.49,285,0.589,286,0.576,287,0.49,288,0.576,289,0.45,290,0.576,291,0.49,292,0.576,293,0.576,294,0.576,295,0.016,296,0.016,303,1.246,309,1.85,311,1.065,341,1.289,342,1.24,347,1.338,348,1.018,352,1.692,358,1.562,359,1.562,360,1.562,362,1.562,364,1.5,369,0.845,432,1.5,474,1.585,485,2.268,492,1.368,531,5.061,532,5.061,533,2.131,534,2.609,535,3.565,536,4.413,537,3.726,538,4.413,539,3.726,540,4.541,541,5.411,542,3.236,543,2.609,544,4.413,545,4.413,546,3.704,547,3.726,548,3.968,549,3.704,550,3.704,551,3.726,552,4.413,553,4.413,554,3.726,555,3.199,556,3.968,557,3.704,558,3.704,559,3.704,560,2.732,561,2.732,562,3.565,563,3.181,564,1.501,565,2.399,566,3.726,567,1.839,568,2.732,569,2.54,570,2.732,571,2.732,572,3.06,573,2.732,574,2.732,575,2.54,576,3.565,577,2.438,578,2.732,579,2.732,580,2.54,581,2.732,582,2.732,583,3.181,584,2.438,585,2.732,586,2.732,587,2.54,588,2.54,589,2.438,590,2.203,591,2.54,592,2.54,593,2.178,594,2.54,595,1.253,596,2.131,597,1.253,598,2.555,599,1.501,600,2.54,601,1.368,602,1.368,603,1.368,604,1.662,605,2.131,606,2.732,607,2.54,608,2.54,609,2.203,610,1.501,611,2.54,612,1.662,613,2.54,614,1.501,615,2.54,616,2.54,617,1.862,618,2.54,619,1.862,620,2.54,621,1.862,622,2.54,623,1.862,624,2.732,625,3.726,626,1.862,627,1.862,628,1.862,629,1.662,630,1.368,631,1.862,632,2.732,633,1.862,634,1.501,635,1.501,636,2.54,637,2.54,638,2.54,639,2.54,640,2.54]],["title/components/Dashboard.html",[0,0.065,153,0.486]],["body/components/Dashboard.html",[0,0.116,1,0.847,2,1.041,3,0.372,4,0.372,5,0.997,7,0.997,8,0.997,9,0.323,26,0.997,27,1.203,28,0.823,32,0.778,37,1.224,60,0.029,61,0.956,81,0.423,89,0.372,90,0.323,95,0.372,96,0.372,153,0.963,256,0.997,257,1.224,258,1.224,259,0.997,260,1.382,261,0.997,264,0.997,265,1.224,266,0.847,267,0.847,268,0.997,269,0.997,270,1.224,271,0.847,272,0.712,273,1.224,274,0.847,275,0.649,276,1.224,277,0.778,278,0.778,279,1.224,280,0.847,281,0.712,282,1.224,283,0.847,284,0.847,285,0.653,286,0.997,287,0.847,288,0.997,289,0.778,290,0.997,291,0.847,292,0.997,293,0.997,294,0.997,295,0.024,296,0.024,301,2.905,641,3.685,642,5.394,643,5.394,644,3.189]],["title/components/Login.html",[0,0.065,272,0.533]],["body/components/Login.html",[0,0.116,1,0.847,2,1.041,3,0.372,4,0.372,5,0.997,7,0.997,8,0.997,9,0.323,26,0.997,27,1.203,28,0.823,32,0.778,37,1.224,60,0.029,61,0.956,81,0.423,89,0.372,90,0.323,95,0.372,96,0.372,153,0.649,256,0.997,257,1.224,258,1.224,259,0.997,260,1.382,261,0.997,264,0.997,265,1.224,266,0.847,267,0.847,268,0.997,269,0.997,270,1.224,271,0.847,272,1.056,273,1.224,274,0.847,275,0.649,276,1.224,277,0.778,278,0.778,279,1.224,280,0.847,281,0.712,282,1.224,283,0.847,284,0.847,285,0.653,286,0.997,287,0.847,288,0.997,289,0.778,290,0.997,291,0.847,292,0.997,293,0.997,294,0.997,295,0.024,296,0.024,301,2.905,644,3.189,645,3.685,646,5.394,647,5.394]],["title/components/LoginComponent.html",[0,0.065,274,0.634]],["body/components/LoginComponent.html",[0,0.087,1,0.489,2,0.717,3,0.215,4,0.215,5,0.575,6,1.061,7,0.575,8,0.575,9,0.186,11,1.25,12,2.198,13,1.192,15,1.277,20,1.441,24,1.335,25,1.582,26,0.575,27,1.139,28,0.781,29,2.035,30,0.986,31,0.781,32,0.659,33,1.261,34,1.36,35,1.335,37,0.844,39,0.34,40,0.55,47,1.335,48,1.132,52,1.743,53,0.913,55,1.078,56,1.268,57,1.673,59,1.582,60,0.03,61,0.916,62,0.799,63,1.36,67,1.857,68,1.132,71,0.913,75,1.882,78,0.913,79,0.986,80,1.596,81,0.244,89,0.438,90,0.186,91,0.671,92,0.449,94,0.843,95,0.215,96,0.215,100,1.689,101,0.937,103,1.064,110,1.498,125,1.497,139,1.559,152,0.782,153,0.55,154,1.657,155,1.657,156,2.883,157,1.497,158,2.198,164,3.195,165,2.198,171,1.497,174,1.657,175,1.497,176,1.497,179,1.497,180,1.497,186,2.433,188,2.433,193,1.497,197,2.198,203,2.604,212,1.15,226,3.176,232,1.657,235,1.657,238,1.657,245,1.497,252,1.657,256,0.575,257,0.844,258,0.844,259,0.575,260,1.102,261,0.575,264,0.575,265,0.844,266,0.489,267,0.489,268,0.575,269,0.575,270,0.844,271,0.489,272,0.877,273,0.844,274,0.937,275,0.374,276,0.844,277,0.449,278,0.449,279,0.844,280,0.489,281,0.411,282,0.844,283,0.489,284,0.489,285,0.45,286,0.575,287,0.489,288,0.575,289,0.449,290,0.575,291,0.489,292,0.575,293,0.575,294,0.575,295,0.016,296,0.016,303,1.245,308,2.174,309,1.847,311,1.061,341,1.287,342,1.237,347,1.335,348,1.017,349,1.799,352,1.689,358,1.559,359,1.847,360,1.559,362,1.559,364,1.498,367,2.002,369,0.843,372,1.061,373,1.25,375,1.835,379,1.847,380,2.604,382,2.002,383,2.828,384,1.559,408,2.222,426,1.835,432,1.668,437,2.198,440,2.198,471,1.364,474,1.743,485,1.559,486,1.835,493,2.002,503,2.002,556,3.792,560,2.727,561,2.727,562,3.56,563,3.176,564,1.497,565,2.396,567,1.835,568,2.727,570,2.727,571,2.727,572,3.057,573,2.727,574,2.727,576,3.56,577,2.433,578,2.727,579,2.727,581,2.727,582,2.727,583,3.176,584,2.433,585,2.727,586,2.727,589,3.176,590,2.198,593,2.174,595,1.25,597,1.25,598,1.835,599,1.497,606,2.727,612,1.657,619,1.857,621,1.857,623,1.857,624,2.727,626,1.857,627,1.857,628,1.857,629,1.657,630,1.364,631,1.857,632,2.727,633,1.857,634,1.497,635,1.497,648,2.125,649,3.12,650,3.12,651,4.406,652,3.718,653,3.057,654,4.406,655,3.718,656,2.532,657,2.532,658,2.532,659,2.532,660,2.532,661,2.532,662,2.532,663,2.532,664,2.532,665,2.125,666,2.532,667,2.727,668,2.532,669,2.125,670,2.532,671,2.125,672,2.125,673,2.532,674,2.532,675,3.718,676,3.176,677,3.56,678,2.125,679,2.125,680,3.718,681,3.718,682,3.718,683,2.125,684,2.125,685,1.657,686,1.857,687,1.857,688,1.657,689,1.657,690,2.727,691,2.532,692,1.857,693,2.727,694,1.857,695,2.125,696,2.125]],["title/interfaces/MenuItem.html",[423,0.634,697,2.409]],["body/interfaces/MenuItem.html",[0,0.073,3,0.214,4,0.214,9,0.185,12,1.492,13,1.325,14,1.651,15,1.224,17,2.118,18,3.69,20,0.978,24,0.906,25,1.332,27,0.447,28,0.306,29,1.554,30,0.669,31,0.447,32,0.447,33,1.061,34,1.144,35,0.906,37,0.573,39,0.339,40,0.548,42,0.906,48,1.015,52,0.906,53,0.619,55,0.848,56,0.998,60,0.031,61,0.447,62,0.717,65,1.058,66,1.405,68,1.289,70,2.118,71,0.91,72,2.192,73,2.303,75,0.978,77,2.781,80,1.357,81,0.357,82,0.983,84,1.704,85,2.426,89,0.457,90,0.185,91,0.669,92,0.447,93,2.164,94,0.84,95,0.214,96,0.214,97,1.83,98,1.058,99,1.651,101,1.076,103,0.722,104,2.201,110,0.779,145,1.492,153,0.717,196,5.054,208,1.245,243,1.058,271,0.487,275,0.373,285,0.654,295,0.016,296,0.016,303,1.34,308,1.83,309,1.554,311,1.058,328,1.492,330,1.492,342,1.463,347,0.906,348,1.262,349,1.797,350,2.61,356,1.492,358,2.031,359,2.031,360,1.058,361,2.392,362,1.058,364,1.593,369,1.234,370,1.359,372,1.058,375,1.245,402,2.192,403,1.359,409,2.392,423,0.487,432,1.144,438,2.781,441,2.781,448,1.245,474,0.906,485,1.058,487,1.245,509,1.058,534,1.492,535,3.191,540,2.118,559,2.118,563,1.651,565,1.83,567,1.245,583,1.651,589,2.426,590,1.492,593,1.83,595,1.245,596,2.118,597,1.245,598,2.392,601,2.368,602,1.997,603,1.359,604,1.651,605,2.118,614,1.492,697,3.554,698,1.146,699,2.118,700,5.054,701,6.022,702,5.054,703,3.708,704,2.599,705,2.523,706,2.523,707,4.396,708,3.708,709,2.523,710,2.523,711,2.192,712,1.85,713,1.85,714,2.523,715,2.523,716,1.85,717,2.523,718,1.85,719,1.85,720,2.523,721,2.523,722,2.523,723,6.207,724,2.523,725,1.85,726,2.118,727,2.523,728,2.523,729,2.523,730,2.523,731,2.523,732,2.523,733,2.523,734,2.523,735,2.118,736,2.523,737,2.192,738,2.523,739,1.651,740,2.523,741,2.523,742,2.523,743,2.523,744,2.523,745,2.523,746,2.523,747,1.492,748,1.492,749,2.523,750,4.846,751,2.523,752,2.523,753,2.523,754,2.523,755,2.523,756,2.523,757,2.523,758,4.846,759,2.523,760,3.708,761,2.523,762,3.708,763,2.523,764,1.85,765,3.708,766,2.523,767,2.523,768,2.523,769,2.523,770,1.359,771,3.708,772,2.599,773,4.396,774,3.69,775,2.523,776,2.523,777,4.396,778,2.523,779,1.492,780,1.492,781,1.492,782,1.492,783,2.523,784,2.523,785,2.523,786,2.523,787,2.523,788,2.523,789,2.523,790,2.523,791,2.523,792,2.523,793,2.523,794,2.523,795,2.523,796,2.523,797,1.85,798,2.523,799,2.523,800,2.523,801,1.85,802,1.492,803,1.85,804,1.85,805,1.359,806,1.85,807,1.651,808,1.85,809,2.523,810,4.396,811,3.708,812,2.523,813,1.85,814,1.492,815,2.523,816,2.523,817,2.523,818,2.523,819,2.118,820,2.523,821,2.118,822,2.523,823,2.523,824,1.85,825,1.85,826,2.523,827,3.708,828,2.523,829,2.523,830,2.523,831,2.523,832,2.523,833,2.523]],["title/interfaces/PasswordValidationResult.html",[412,1.769,423,0.634]],["body/interfaces/PasswordValidationResult.html",[3,0.205,4,0.205,9,0.178,13,1.166,15,1.21,29,1.798,31,0.76,39,0.325,40,0.532,42,1.705,43,1.43,48,1.153,55,0.467,56,0.973,60,0.031,62,0.532,65,1.014,66,0.594,68,1.063,71,0.882,75,1.841,80,1.109,81,0.545,82,0.641,84,0.938,89,0.363,90,0.178,92,0.429,93,1.99,95,0.43,96,0.205,101,1.206,103,1.029,108,1.099,110,1.465,131,1.194,132,1.194,152,0.747,217,2.981,295,0.016,296,0.016,298,1.014,303,1.365,312,1.291,317,1.194,318,1.303,319,2.352,320,1.583,321,1.583,322,1.583,323,1.583,324,1.583,325,1.583,327,1.583,328,1.43,329,1.583,330,1.43,331,1.583,332,1.303,339,1.583,340,1.583,341,1.137,342,1.428,343,2.352,344,1.303,345,1.507,347,1.291,348,1.29,349,2.143,350,3.112,352,1.099,353,2.343,354,1.774,356,1.43,358,1.99,359,2.229,360,1.014,361,1.774,362,1.014,363,3.343,364,1.841,366,1.583,367,1.936,369,1.428,370,1.936,372,1.507,373,1.774,375,2.117,377,1.303,378,1.583,379,2.308,380,1.43,382,1.303,383,2.624,384,2.422,386,1.583,387,1.583,388,2.342,389,3.046,390,3.046,392,1.583,393,2.806,395,1.583,397,1.583,398,2.807,399,1.583,400,1.303,402,1.43,403,1.936,404,1.303,405,1.583,407,1.43,408,1.841,409,1.194,410,1.583,411,1.583,412,2.31,413,1.583,414,1.583,416,1.583,418,1.583,420,1.303,421,1.303,422,1.194,423,0.827,424,3.214,425,1.583,426,2.117,427,3.32,428,3.479,429,1.583,430,1.583,431,1.583,432,1.963,433,3.32,434,1.583,435,2.352,436,1.43,437,1.43,438,1.303,439,1.43,440,1.43,441,1.936,442,1.43,443,1.583,444,1.583,445,2.806,446,2.352,447,1.583,448,1.774,449,2.352,450,1.583,451,1.583,452,1.583,453,1.583,454,2.352,455,1.583,456,1.583,457,2.352,458,1.583,459,1.583,460,1.583,461,1.194,462,1.583,463,1.303,464,1.583,465,1.583,466,1.583,467,3.952,468,2.352,469,1.583,470,2.125,471,2.557,472,2.806,473,2.806,474,1.909,475,1.194,476,2.352,477,1.583,478,2.125,479,2.806,480,1.43,481,1.43,482,1.583,483,1.43,484,1.583,485,1.014,486,1.194,487,1.774,488,2.352,489,2.352,490,1.936,491,1.583,492,2.31,493,1.303,494,1.583,495,1.194,496,1.583,497,1.43,498,1.43,499,2.352,500,1.583,501,2.352,502,1.936,503,1.303,504,1.583,505,1.099,506,1.583,507,1.583,508,1.583,509,1.014,510,1.583,511,1.583,512,2.352,513,2.352,514,1.583,515,1.583,516,1.583,517,1.43,518,2.352,519,1.583,520,1.948,521,2.352,522,1.583,523,1.583,524,1.583,525,1.583,526,1.583,527,1.583,528,1.583,529,1.583,530,1.583,698,1.099]],["title/components/Profile.html",[0,0.065,275,0.486]],["body/components/Profile.html",[0,0.116,1,0.847,2,1.041,3,0.372,4,0.372,5,0.997,7,0.997,8,0.997,9,0.323,26,0.997,27,1.203,28,0.823,32,0.778,37,1.224,60,0.029,61,0.956,81,0.423,89,0.372,90,0.323,95,0.372,96,0.372,153,0.649,256,0.997,257,1.224,258,1.224,259,0.997,260,1.382,261,0.997,264,0.997,265,1.224,266,0.847,267,0.847,268,0.997,269,0.997,270,1.224,271,0.847,272,0.712,273,1.224,274,0.847,275,0.963,276,1.224,277,0.778,278,0.778,279,1.224,280,0.847,281,0.712,282,1.224,283,0.847,284,0.847,285,0.653,286,0.997,287,0.847,288,0.997,289,0.778,290,0.997,291,0.847,292,0.997,293,0.997,294,0.997,295,0.024,296,0.024,301,2.905,644,3.189,834,3.685,835,5.394,836,5.394]],["title/components/ProfileComponent.html",[0,0.065,277,0.582]],["body/components/ProfileComponent.html",[0,0.08,1,0.423,2,0.644,3,0.186,4,0.186,5,0.498,6,0.919,7,0.498,8,0.498,9,0.161,13,0.538,15,1.073,20,1.752,24,1.199,25,1.452,26,0.498,27,1.117,28,0.767,30,0.885,31,0.944,32,0.592,33,1.157,34,1.248,35,1.199,37,0.758,39,0.294,40,0.494,47,1.199,48,0.847,52,1.623,53,0.82,55,1.028,56,1.209,57,1.73,59,1.452,60,0.03,61,0.862,62,0.832,63,1.248,66,0.992,67,1.913,68,1.239,71,1.498,73,1.752,78,0.992,79,1.072,80,1.248,81,0.39,82,0.581,89,0.412,90,0.161,91,0.581,92,0.389,94,0.73,95,0.186,96,0.186,98,0.919,101,0.644,103,0.627,105,2.957,108,0.996,137,3.352,139,1.4,152,1.03,153,0.598,157,2.672,158,3.029,159,2.802,163,1.84,164,1.296,165,1.974,171,1.974,173,2.802,175,2.875,176,1.974,179,1.296,180,1.296,189,1.608,191,1.84,192,1.608,193,1.296,197,1.296,203,1.296,212,0.996,227,2.448,228,1.608,230,1.608,239,1.608,240,1.608,245,1.296,256,0.498,257,0.758,258,0.758,259,0.498,260,1.026,261,0.498,264,0.498,265,0.758,266,0.423,267,0.423,268,0.498,269,0.498,270,0.758,271,0.423,272,0.356,273,0.758,274,0.423,275,0.598,276,0.758,277,0.801,278,0.389,279,0.758,280,0.423,281,0.356,282,0.758,283,0.423,284,0.423,285,0.404,286,0.498,287,0.423,288,0.498,289,0.389,290,0.498,291,0.423,292,0.498,293,0.498,294,0.498,295,0.015,296,0.015,303,0.947,308,1.995,309,1.695,311,0.919,332,2.434,341,1.072,344,2.434,348,1.116,349,1.705,350,2.434,364,1.248,369,1.941,379,2.039,383,1.648,384,1.4,388,1.567,403,1.798,408,2.443,423,0.423,432,1.03,461,1.648,463,1.798,475,2.231,490,2.619,495,1.648,509,0.919,520,0.996,534,3.029,543,3.538,555,2.875,564,1.296,565,2.231,567,1.648,572,1.296,593,2.831,595,1.082,597,1.995,598,2.529,599,1.296,609,2.39,610,3.029,630,2.434,634,1.974,635,2.672,653,2.875,685,1.435,688,2.645,689,1.435,726,1.84,735,2.802,739,2.184,770,1.181,837,1.608,838,3.393,839,2.802,840,3.393,841,3.393,842,3.393,843,3.393,844,3.314,845,3.793,846,3.793,847,2.448,848,3.339,849,3.339,850,2.193,851,2.193,852,2.193,853,2.193,854,2.193,855,2.184,856,2.193,857,1.608,858,2.184,859,2.802,860,4.3,861,2.193,862,2.802,863,2.193,864,2.193,865,2.193,866,2.193,867,2.193,868,2.184,869,3.393,870,3.393,871,1.84,872,3.393,873,3.393,874,3.393,875,1.84,876,2.802,877,2.448,878,2.448,879,1.84,880,1.84,881,1.435,882,1.84,883,1.608,884,1.608,885,1.84,886,1.84,887,1.84,888,1.608,889,1.84,890,1.608,891,1.435,892,1.84,893,2.802,894,1.84,895,1.84,896,3.393,897,1.435,898,1.84,899,1.84,900,4.72,901,1.84,902,1.84,903,1.84,904,1.84,905,2.39,906,2.965,907,2.965,908,2.448,909,2.645,910,3.393,911,1.84,912,3.906,913,1.84,914,1.84,915,1.84,916,1.84,917,1.84,918,3.339,919,2.802,920,3.757,921,3.793,922,3.793,923,3.339,924,3.314,925,3.314,926,3.339,927,3.339,928,2.802,929,2.802,930,2.802,931,3.793,932,3.793,933,2.802,934,2.448,935,2.448,936,2.448,937,3.339,938,3.339,939,3.339,940,3.339,941,4.519,942,2.802,943,3.339,944,3.339,945,3.339,946,2.802,947,3.339,948,2.193,949,1.84,950,4.519,951,3.339,952,2.193,953,2.193,954,2.193,955,2.193,956,1.84,957,2.193,958,1.84,959,1.84,960,2.193]],["title/components/Recover.html",[0,0.065,278,0.582]],["body/components/Recover.html",[0,0.116,1,0.847,2,1.041,3,0.372,4,0.372,5,0.997,7,0.997,8,0.997,9,0.323,26,0.997,27,1.203,28,0.823,32,0.778,37,1.224,60,0.029,61,0.956,81,0.423,89,0.372,90,0.323,95,0.372,96,0.372,153,0.649,256,0.997,257,1.224,258,1.224,259,0.997,260,1.382,261,0.997,264,0.997,265,1.224,266,0.847,267,0.847,268,0.997,269,0.997,270,1.224,271,0.847,272,0.712,273,1.224,274,0.847,275,0.649,276,1.224,277,0.778,278,1.153,279,1.224,280,0.847,281,0.712,282,1.224,283,0.847,284,0.847,285,0.653,286,0.997,287,0.847,288,0.997,289,0.778,290,0.997,291,0.847,292,0.997,293,0.997,294,0.997,295,0.024,296,0.024,301,2.905,644,3.189,961,3.685,962,5.394,963,5.394]],["title/components/RecoverComponent.html",[0,0.065,280,0.634]],["body/components/RecoverComponent.html",[0,0.083,1,0.454,2,0.679,3,0.199,4,0.199,5,0.534,6,0.986,7,0.534,8,0.534,9,0.173,15,1.142,26,0.534,27,1.128,28,0.774,30,0.933,31,0.747,32,0.623,33,1.207,34,1.302,35,1.264,37,0.799,39,0.316,40,0.52,47,1.264,48,0.737,53,0.864,55,0.454,56,1.238,57,1.718,59,1.264,60,0.03,61,0.829,62,0.829,63,1.086,66,0.864,67,1.8,68,1.175,71,1.433,78,1.035,79,1.118,80,1.547,81,0.227,82,0.623,89,0.425,90,0.173,91,0.623,92,0.417,94,0.783,95,0.199,96,0.199,101,0.454,110,1.302,125,1.39,151,1.895,152,1.445,153,0.348,154,1.538,155,1.538,156,3.063,157,2.768,158,3.224,161,1.973,164,3.224,165,2.493,171,1.39,174,2.759,175,2.08,176,2.08,179,1.39,180,1.39,184,3.093,185,2.581,186,2.759,187,1.973,188,3.28,193,1.39,197,2.493,199,1.724,200,2.581,201,2.581,203,2.493,212,1.068,226,3.063,232,1.538,235,1.538,238,1.538,240,1.724,245,1.39,252,1.538,256,0.534,257,0.799,258,0.799,259,0.534,260,1.063,261,0.534,264,0.534,265,0.799,266,0.454,267,0.454,268,0.534,269,0.534,270,0.799,271,0.454,272,0.759,273,0.799,274,0.454,275,0.348,276,0.799,277,0.417,278,0.829,279,0.799,280,0.903,281,0.381,282,0.799,283,0.454,284,0.454,285,0.426,286,0.534,287,0.454,288,0.534,289,0.417,290,0.534,291,0.454,292,0.534,293,0.534,294,0.534,295,0.015,296,0.015,303,0.981,308,2.081,309,1.768,311,0.986,341,1.395,348,1.304,364,0.726,369,1.751,379,1.963,388,1.944,408,2.413,461,2.311,463,1.895,470,2.493,487,2.081,492,1.266,502,1.895,509,0.986,534,3.11,555,2.963,564,1.39,565,2.311,567,1.737,577,2.302,590,1.39,593,2.882,595,1.16,597,2.081,598,2.311,609,1.39,610,2.768,617,1.724,630,2.522,634,2.08,635,2.768,653,2.963,667,3.093,676,3.752,677,2.581,683,1.973,684,1.973,685,1.538,686,1.724,687,1.724,688,1.538,689,1.538,690,2.581,692,2.581,693,2.581,694,1.724,805,1.895,844,3.433,847,2.581,855,2.302,857,1.724,858,2.302,881,1.538,888,1.724,890,1.724,891,1.538,905,2.768,906,3.433,907,3.433,909,1.538,912,3.093,920,2.581,924,4.452,925,4.348,931,2.953,932,3.929,933,2.953,934,2.581,935,2.581,936,2.581,949,1.973,964,1.973,965,4.217,966,3.519,967,4.217,968,4.217,969,4.217,970,4.217,971,4.682,972,4.682,973,4.682,974,3.519,975,2.351,976,2.351,977,2.351,978,2.351,979,2.351,980,4.217,981,2.351,982,2.351,983,2.351,984,2.351,985,2.351,986,2.351,987,2.351,988,2.351,989,2.351,990,2.351,991,2.351,992,1.973,993,1.973,994,1.973,995,2.351,996,4.217,997,6.301,998,5.261,999,4.217,1000,4.217,1001,3.519,1002,2.351,1003,2.351,1004,2.351,1005,2.351,1006,2.351,1007,2.351,1008,2.351,1009,4.217,1010,2.351,1011,3.519,1012,5.608,1013,3.519,1014,4.682,1015,3.519,1016,2.953,1017,3.519,1018,3.519,1019,3.519,1020,3.519,1021,3.519,1022,3.519,1023,2.351,1024,3.519,1025,1.39,1026,2.351,1027,1.973,1028,1.973]],["title/components/Register.html",[0,0.065,281,0.533]],["body/components/Register.html",[0,0.116,1,0.847,2,1.041,3,0.372,4,0.372,5,0.997,7,0.997,8,0.997,9,0.323,26,0.997,27,1.203,28,0.823,32,0.778,37,1.224,60,0.029,61,0.956,81,0.423,89,0.372,90,0.323,95,0.372,96,0.372,153,0.649,256,0.997,257,1.224,258,1.224,259,0.997,260,1.382,261,0.997,264,0.997,265,1.224,266,0.847,267,0.847,268,0.997,269,0.997,270,1.224,271,0.847,272,0.712,273,1.224,274,0.847,275,0.649,276,1.224,277,0.778,278,0.778,279,1.224,280,0.847,281,1.056,282,1.224,283,0.847,284,0.847,285,0.653,286,0.997,287,0.847,288,0.997,289,0.778,290,0.997,291,0.847,292,0.997,293,0.997,294,0.997,295,0.024,296,0.024,301,2.905,644,3.189,1029,3.685,1030,5.394,1031,5.394]],["title/components/RegisterComponent.html",[0,0.065,283,0.634]],["body/components/RegisterComponent.html",[0,0.068,1,0.331,2,0.532,3,0.145,4,0.145,5,0.389,6,0.719,7,0.389,8,0.389,9,0.126,11,0.847,12,1.629,13,0.97,15,1.292,20,2.192,21,2.312,24,0.989,25,1.24,26,0.389,27,1.074,28,0.739,30,0.731,31,0.767,32,0.488,33,0.988,34,1.066,35,0.989,37,0.625,39,0.23,40,0.407,47,0.989,48,1.092,52,1.419,53,0.676,55,0.937,56,1.103,57,1.64,59,1.419,60,0.03,61,0.819,62,0.771,63,1.22,66,1.192,67,1.813,68,1.12,71,1.279,75,1.792,78,0.97,79,1.048,80,1.65,81,0.165,82,0.455,89,0.367,90,0.126,91,0.455,92,0.304,94,0.571,95,0.145,96,0.145,100,0.779,101,1.032,103,1.239,106,2.021,107,2.312,110,1.336,125,1.014,137,1.803,139,1.938,152,1.22,153,0.407,154,1.123,155,2.259,156,2.586,157,2.872,158,3.467,164,2.872,165,2.041,167,1.44,168,2.898,169,2.312,171,1.014,174,1.803,175,2.986,176,2.041,178,2.312,179,1.629,180,1.629,181,2.898,184,2.899,185,1.258,186,1.803,188,2.259,189,2.021,192,2.021,193,2.041,197,1.629,200,1.258,201,1.258,203,1.629,204,1.44,210,1.44,211,1.44,212,0.779,226,2.586,227,2.021,228,1.258,229,2.312,230,1.258,232,1.123,235,1.123,238,2.259,239,1.258,245,1.629,246,2.312,248,2.312,252,1.123,256,0.389,257,0.625,258,0.625,259,0.389,260,0.897,261,0.389,264,0.389,265,0.625,266,0.331,267,0.331,268,0.389,269,0.389,270,0.625,271,0.331,272,0.56,273,0.625,274,0.331,275,0.254,276,0.625,277,0.304,278,0.304,279,0.625,280,0.331,281,0.641,282,0.625,283,0.763,284,0.331,285,0.334,286,0.389,287,0.331,288,0.389,289,0.304,290,0.389,291,0.331,292,0.389,293,0.389,294,0.389,295,0.012,296,0.012,303,1.166,309,1.447,311,0.719,341,1.382,342,1.735,344,1.86,347,0.989,348,1.12,349,0.917,352,1.568,358,1.155,359,1.447,360,1.155,362,1.155,364,1.336,369,0.571,372,0.719,373,0.847,379,2.333,384,1.155,388,1.533,389,1.86,390,1.86,407,1.629,408,2.02,432,1.686,461,1.36,471,1.86,474,1.419,475,1.951,480,1.014,481,2.041,483,1.629,485,1.155,486,1.36,487,0.847,502,0.924,505,1.251,509,0.719,546,2.312,555,2.559,556,3.175,557,2.312,558,2.312,560,2.021,561,2.021,562,2.899,563,2.586,564,1.014,565,1.951,567,1.36,568,2.021,570,2.021,571,2.899,572,2.559,573,2.021,574,2.021,576,2.899,577,1.803,578,2.021,579,2.021,581,2.021,582,2.532,583,3.305,584,1.803,585,2.021,586,2.021,589,2.586,590,1.629,593,2.282,595,1.36,597,0.847,598,2.282,599,1.014,606,2.021,609,1.014,610,2.041,612,1.123,614,1.629,617,1.258,619,1.258,621,2.021,623,1.258,624,2.021,626,1.258,627,1.258,628,1.258,629,1.123,630,0.924,631,1.258,632,2.899,633,1.258,634,1.014,635,2.337,650,2.312,653,2.559,665,1.44,667,2.899,669,1.44,671,1.44,672,1.44,676,2.586,677,3.922,678,1.44,679,1.44,685,1.803,686,1.258,687,1.258,688,2.259,689,1.123,690,2.532,692,2.532,693,2.021,694,1.258,695,1.44,696,1.44,700,1.44,739,1.123,780,1.629,805,2.49,847,2.021,855,1.803,857,1.258,858,2.259,877,1.258,878,1.258,881,1.123,883,1.258,884,1.258,891,1.123,908,2.021,909,1.123,920,2.532,921,1.44,922,2.898,924,2.021,925,2.021,928,2.898,929,2.898,930,2.898,934,2.899,935,3.39,936,2.532,956,1.44,958,1.44,959,1.44,992,4.077,993,1.44,994,1.44,1016,1.44,1027,1.44,1028,2.898,1032,1.44,1033,4.077,1034,2.755,1035,2.755,1036,3.453,1037,2.755,1038,3.453,1039,3.953,1040,3.953,1041,2.755,1042,1.716,1043,1.716,1044,1.716,1045,1.716,1046,1.716,1047,2.755,1048,1.716,1049,1.716,1050,2.755,1051,1.716,1052,2.755,1053,1.716,1054,1.716,1055,1.716,1056,1.716,1057,1.716,1058,1.716,1059,2.755,1060,2.755,1061,1.716,1062,1.716,1063,1.716,1064,1.716,1065,1.716,1066,2.755,1067,1.716,1068,2.755,1069,1.716,1070,1.716,1071,1.716,1072,1.716,1073,1.716,1074,1.716,1075,1.716,1076,1.716,1077,1.716,1078,1.716,1079,1.716,1080,1.716,1081,1.716,1082,1.716,1083,1.716,1084,1.716,1085,1.716,1086,2.755,1087,1.716,1088,1.716,1089,1.716,1090,1.716,1091,1.716,1092,1.716,1093,1.716,1094,1.716,1095,2.755,1096,1.716,1097,2.755,1098,1.716,1099,2.755,1100,1.716,1101,2.755,1102,1.716,1103,2.755,1104,2.755,1105,2.755,1106,2.755,1107,2.755,1108,2.755,1109,2.755,1110,1.716,1111,2.755,1112,5.05,1113,4.623,1114,2.755,1115,2.755,1116,2.755,1117,2.755,1118,2.755,1119,2.755,1120,2.755,1121,2.755,1122,2.755,1123,2.755,1124,2.755,1125,2.021,1126,2.312,1127,3.318,1128,3.953,1129,2.755,1130,2.755,1131,2.755,1132,2.755,1133,2.755,1134,2.755,1135,2.755,1136,2.755,1137,2.755,1138,2.755,1139,2.755,1140,2.755,1141,2.755,1142,1.716,1143,1.716,1144,1.716,1145,1.716,1146,2.755,1147,2.755,1148,1.716,1149,1.716,1150,1.716,1151,1.716,1152,1.716,1153,2.755,1154,2.755,1155,1.716,1156,1.716,1157,1.716,1158,1.716,1159,1.716,1160,1.716,1161,1.258,1162,1.716,1163,1.716,1164,1.716,1165,1.716,1166,1.716,1167,1.716]],["title/interfaces/Task.html",[285,0.398,423,0.634]],["body/interfaces/Task.html",[3,0.294,4,0.294,9,0.255,39,0.701,40,0.686,48,1.168,53,0.852,60,0.03,62,0.903,66,0.852,68,1.253,73,1.345,77,3.289,78,0.852,80,1.071,84,2.162,85,2.27,89,0.393,90,0.255,95,0.393,96,0.294,101,1.212,104,1.575,208,2.289,243,2.337,285,0.785,295,0.02,296,0.02,298,1.454,303,1.377,312,1.665,317,1.712,348,0.727,353,1.712,354,1.712,364,1.612,377,1.868,400,1.868,404,2.497,420,2.497,421,1.868,422,1.712,423,0.669,432,1.884,448,1.712,474,1.246,505,1.575,601,3.221,602,3.003,603,3.221,698,1.575,704,2.051,711,2.741,716,2.544,737,2.051,747,2.051,748,3.435,770,1.868,772,2.741,779,3.088,781,3.088,782,3.088,802,2.051,814,2.051,824,4.262,825,2.544,905,2.051,1025,3.61,1168,2.544,1169,3.802,1170,3.802,1171,2.911,1172,2.911,1173,2.911,1174,2.911,1175,3.892,1176,2.911,1177,2.911,1178,3.892,1179,2.911,1180,2.911,1181,2.911,1182,2.911,1183,2.911,1184,2.911,1185,2.911,1186,2.911,1187,2.911,1188,2.911,1189,4.68,1190,2.911,1191,2.911,1192,3.418,1193,3.418,1194,3.892,1195,3.995,1196,2.911,1197,2.911,1198,2.911,1199,2.27,1200,2.911,1201,2.544,1202,2.911,1203,2.911,1204,2.911,1205,2.911,1206,2.911,1207,3.892,1208,2.911,1209,2.911,1210,2.911,1211,2.911,1212,3.892,1213,2.911]],["title/interfaces/Task-1.html",[208,1.357,285,0.333,423,0.53]],["body/interfaces/Task-1.html",[0,0.085,3,0.262,4,0.262,9,0.227,11,2.924,13,1.053,15,1.21,20,1.199,24,1.111,25,1.54,27,0.548,28,0.375,30,0.82,31,0.548,32,0.548,33,1.227,34,1.324,35,1.111,37,0.702,39,0.415,40,0.634,42,1.111,45,2.269,48,1.031,52,1.111,53,0.759,55,0.95,56,1.117,60,0.03,62,0.893,65,1.297,66,1.053,68,1.17,71,1.209,73,1.663,77,3.191,78,0.759,81,0.413,82,1.137,89,0.451,90,0.227,91,0.82,92,0.548,94,1.03,95,0.262,96,0.262,97,2.117,98,1.297,100,1.405,101,1.183,104,1.948,139,1.297,145,2.911,208,1.527,212,1.405,217,2.117,220,2.269,243,2.484,247,2.806,285,0.676,289,0.548,295,0.019,296,0.019,303,1.382,304,1.829,341,1.306,342,1.03,345,1.297,347,1.54,348,1.17,409,1.527,423,0.597,520,1.405,535,2.911,542,3.146,543,1.829,548,2.269,601,3.191,602,3.253,603,3.191,604,2.024,614,1.829,698,1.405,711,2.536,712,2.269,713,2.269,718,2.269,719,2.269,737,1.829,747,1.829,748,3.143,764,3.611,770,1.666,772,2.911,779,3.301,780,1.829,781,3.301,782,3.301,797,2.269,801,2.269,802,1.829,803,2.269,804,2.269,805,1.666,806,2.269,807,2.024,808,2.269,813,2.269,814,2.911,897,2.024,1025,3.416,1161,2.269,1169,3.877,1170,3.877,1192,2.024,1193,2.024,1195,3.479,1199,3.877,1214,2.269,1215,5.069,1216,2.596,1217,2.596,1218,2.596,1219,2.596,1220,2.596,1221,2.596,1222,4.687,1223,2.596,1224,2.596,1225,2.596,1226,3.611,1227,2.596,1228,4.849,1229,4.849,1230,2.596,1231,2.596,1232,3.6,1233,3.6,1234,2.596,1235,2.596,1236,2.596,1237,2.596,1238,2.596,1239,2.596,1240,2.596,1241,2.596,1242,2.596,1243,2.596,1244,2.596,1245,2.596,1246,2.596,1247,2.596,1248,3.146,1249,3.146,1250,2.596,1251,4.238,1252,2.269,1253,2.596]],["title/components/TaskDetailComponent.html",[0,0.065,284,0.634]],["body/components/TaskDetailComponent.html",[0,0.113,1,0.806,2,1.009,3,0.354,4,0.354,5,1.187,7,0.948,8,0.948,9,0.307,15,1.196,26,0.948,27,1.198,28,0.82,30,1.387,31,0.927,32,0.927,33,1.634,34,1.762,60,0.03,61,0.927,73,2.214,81,0.403,89,0.484,90,0.307,91,1.108,92,0.74,95,0.354,96,0.354,103,1.634,151,3.075,153,0.618,256,0.948,257,1.187,258,1.187,259,0.948,260,1.358,261,0.948,264,0.948,265,1.187,266,0.806,267,0.806,268,0.948,269,0.948,270,1.187,271,0.806,272,0.678,273,1.187,274,0.806,275,0.618,276,1.187,277,0.74,278,0.74,279,1.187,280,0.806,281,0.678,282,1.187,283,0.806,284,1.154,285,0.725,286,0.948,287,0.806,288,0.948,289,0.74,290,0.948,291,0.806,292,0.948,293,0.948,294,0.948,295,0.023,296,0.023,345,2.393,535,3.375,725,4.187,1254,3.506,1255,3.506,1256,3.506,1257,5.23,1258,5.71,1259,4.792]],["title/components/TaskManagementComponent.html",[0,0.065,287,0.634]],["body/components/TaskManagementComponent.html",[0,0.106,1,0.709,2,0.929,3,0.311,4,0.311,5,0.834,6,1.541,7,0.834,8,0.834,9,0.27,13,1.183,14,3.152,15,1.195,16,3.533,24,1.73,25,1.93,26,0.834,27,1.185,28,0.812,30,1.278,31,0.854,32,0.854,33,1.538,34,1.659,35,1.73,37,1.094,39,0.493,40,0.713,42,1.93,47,1.73,48,1.009,52,2.048,53,1.183,54,2.405,55,1.172,56,1.406,57,1.538,59,1.32,60,0.03,61,0.952,62,0.713,63,1.134,66,1.4,67,1.32,68,1.009,72,2.848,73,2.356,78,0.902,79,0.975,81,0.55,82,1.513,89,0.483,90,0.27,91,0.975,92,0.651,94,1.223,95,0.311,96,0.311,97,2.378,98,1.541,99,2.405,100,1.669,101,0.709,103,1.379,131,2.378,133,4.184,151,2.595,152,1.487,153,0.544,256,0.834,257,1.094,258,1.094,259,0.834,260,1.295,261,0.834,264,0.834,265,1.094,266,0.709,267,0.709,268,0.834,269,0.834,270,1.094,271,0.709,272,0.596,273,1.094,274,0.709,275,0.544,276,1.094,277,0.651,278,0.651,279,1.094,280,0.709,281,0.596,282,1.094,283,0.709,284,0.709,285,0.77,286,0.834,287,1.101,288,0.834,289,0.651,290,0.834,291,0.709,292,1.22,293,0.834,294,0.834,295,0.021,296,0.021,345,2.02,1259,4.044,1260,4.788,1261,4.788,1262,2.695,1263,4.511,1264,4.044,1265,4.818,1266,3.675,1267,4.044]],["title/injectables/TaskService.html",[312,1.179,704,1.941]],["body/injectables/TaskService.html",[3,0.257,4,0.257,9,0.223,39,0.654,40,0.626,47,1.519,48,1.321,53,1.196,57,1.85,59,2.116,60,0.03,61,1.044,62,0.889,63,1.819,66,0.744,67,2.264,68,1.321,73,1.176,77,3.366,78,1.294,79,1.292,80,0.936,84,2.149,85,1.984,89,0.358,90,0.223,95,0.358,96,0.257,101,1.178,104,1.377,208,2.088,243,1.271,285,0.792,295,0.019,296,0.019,298,1.271,303,1.34,312,1.519,314,1.984,317,1.497,348,0.635,353,1.497,354,1.497,364,0.936,377,1.633,400,2.624,404,2.839,420,2.624,421,1.633,422,1.497,423,0.585,432,1.819,448,1.497,474,1.089,505,1.377,601,2.839,602,1.633,603,2.624,704,2.501,711,3.395,716,2.224,737,1.793,747,3.116,748,3.277,770,1.633,772,2.501,779,1.793,781,1.793,782,1.793,802,2.501,814,2.501,821,2.545,824,4.066,825,2.224,905,1.793,1025,3.277,1168,2.224,1169,2.768,1170,2.768,1171,4.088,1172,3.55,1173,2.545,1174,2.545,1175,3.55,1176,2.545,1177,2.545,1178,3.55,1179,4.424,1180,2.545,1181,2.545,1182,4.424,1183,3.55,1184,4.088,1185,2.545,1186,2.545,1187,2.545,1188,2.545,1189,4.424,1190,3.55,1191,2.545,1192,3.187,1193,3.757,1194,3.55,1195,3.856,1196,3.55,1197,2.545,1198,3.55,1199,2.768,1200,3.55,1201,2.224,1202,3.55,1203,2.545,1204,2.545,1205,4.424,1206,2.545,1207,3.55,1208,3.55,1209,2.545,1210,3.55,1211,2.545,1212,3.55,1213,2.545,1268,4.23,1269,3.55,1270,4.23,1271,4.23,1272,4.871,1273,4.23,1274,4.23,1275,4.23,1276,4.23,1277,3.032,1278,3.032,1279,3.032,1280,3.032,1281,3.032,1282,3.032,1283,3.032,1284,3.032,1285,3.032,1286,3.032,1287,3.032,1288,3.032,1289,3.032,1290,3.032]],["title/components/TasksComponent.html",[0,0.065,289,0.582]],["body/components/TasksComponent.html",[0,0.081,1,0.431,2,0.653,3,0.189,4,0.189,5,0.507,6,0.936,7,0.507,8,0.507,9,0.164,11,2.251,13,0.831,15,1.244,20,0.865,24,1.215,25,1.467,26,0.507,27,1.119,28,0.769,30,0.897,31,0.599,32,0.599,33,1.169,34,1.261,35,1.215,37,0.768,39,0.3,40,0.5,42,1.467,45,3.594,47,1.215,48,1.027,52,1.637,53,0.831,54,1.46,55,0.995,56,1.216,57,1.752,59,1.852,60,0.03,61,0.978,62,0.852,63,1.592,65,1.418,66,1.119,67,1.924,68,1.207,71,1.203,73,2.392,77,2.886,78,1.203,79,1.209,81,0.44,82,1.209,89,0.386,90,0.164,91,0.592,92,0.395,94,0.743,95,0.189,96,0.189,97,1.67,98,0.936,100,1.014,101,1.09,104,2.071,133,2.481,139,0.936,143,1.873,145,3.049,151,1.822,152,1.044,153,0.604,208,1.102,212,1.014,217,1.67,220,1.637,243,1.912,247,2.984,251,2.481,256,0.507,257,0.768,258,0.768,259,0.507,260,1.035,261,0.507,263,1.873,264,0.507,265,0.768,266,0.431,267,0.431,268,0.507,269,0.507,270,0.768,271,0.431,272,0.362,273,0.768,274,0.431,275,0.33,276,0.768,277,0.395,278,0.395,279,0.768,280,0.431,281,0.362,282,0.768,283,0.431,284,0.431,285,0.709,286,0.507,287,0.431,288,0.507,289,0.808,290,0.507,291,0.431,292,0.507,293,0.507,294,0.507,295,0.015,296,0.015,303,1.324,304,1.319,341,1.3,342,0.743,345,0.936,347,1.637,348,1.184,409,1.67,423,0.431,517,3.049,520,1.014,534,2,535,3.168,542,2.481,543,1.319,548,2.481,549,2.84,550,2.84,601,2.456,602,2.778,603,2.456,604,1.46,614,1.319,711,2.897,712,2.997,713,3.93,718,3.594,719,3.594,725,2.481,737,1.319,747,2.696,748,2.696,764,2.997,770,1.202,772,2.416,779,2.897,780,1.319,781,2.897,782,2.416,797,2.481,801,2.481,802,2,803,1.637,804,1.637,805,1.202,806,1.637,807,1.46,808,1.637,813,1.637,814,2.696,897,2.214,942,3.827,1025,3.049,1125,2.481,1161,1.637,1169,2.984,1170,2.984,1192,1.46,1193,2.214,1195,2.984,1199,3.506,1201,2.481,1214,1.637,1215,4.329,1216,2.84,1217,3.43,1218,1.873,1219,1.873,1220,1.873,1221,1.873,1222,4.498,1223,1.873,1224,1.873,1225,1.873,1226,2.997,1227,1.873,1228,4.329,1229,4.329,1230,1.873,1231,1.873,1232,2.84,1233,2.84,1234,1.873,1235,1.873,1236,1.873,1237,1.873,1238,1.873,1239,1.873,1240,1.873,1241,1.873,1242,1.873,1243,1.873,1244,2.84,1245,2.84,1246,2.84,1247,1.873,1248,3.344,1249,3.344,1250,2.84,1251,3.783,1252,1.637,1253,2.84,1269,2.84,1291,3.384,1292,3.384,1293,3.384,1294,3.384,1295,3.384,1296,2.232,1297,2.232,1298,2.232,1299,2.232,1300,2.232,1301,2.232,1302,2.232,1303,2.232,1304,2.232,1305,2.232,1306,2.232,1307,2.232,1308,2.232,1309,2.232,1310,2.232,1311,2.232,1312,2.232,1313,2.232,1314,3.384,1315,3.384,1316,2.84,1317,3.827,1318,3.384,1319,3.384,1320,4.56,1321,3.384,1322,3.384,1323,3.384,1324,3.384,1325,3.384]],["title/interfaces/User.html",[81,0.317,423,0.634]],["body/interfaces/User.html",[3,0.202,4,0.202,9,0.175,13,1.156,15,1.205,29,1.78,31,0.752,39,0.319,40,0.525,42,1.691,43,1.406,48,1.147,55,0.459,56,0.964,60,0.03,62,0.745,63,1.453,65,0.997,66,0.584,68,1.055,71,0.871,75,1.825,80,1.095,81,0.554,82,0.631,84,0.922,89,0.36,90,0.175,92,0.421,93,2.215,95,0.427,96,0.202,101,1.203,103,1.016,108,1.08,110,1.453,131,1.174,132,1.174,152,0.734,217,2.971,295,0.016,296,0.016,298,0.997,303,1.381,312,1.274,317,1.174,318,1.281,319,2.322,320,1.556,321,1.556,322,1.556,323,1.556,324,1.556,325,1.556,327,1.556,328,1.406,329,1.556,330,1.406,331,1.556,332,1.281,339,1.556,340,1.556,341,1.126,342,1.413,343,2.322,344,1.281,345,1.488,347,1.274,348,1.286,349,2.139,350,3.098,352,1.08,353,2.324,354,1.752,356,1.406,358,1.974,359,2.215,360,0.997,361,1.752,362,0.997,363,3.514,364,1.775,366,1.556,367,1.912,369,1.413,370,1.912,372,1.488,373,1.752,375,2.096,377,1.281,378,1.556,379,2.295,380,1.406,382,1.281,383,2.608,384,2.523,386,1.556,387,1.556,388,2.4,389,3.201,390,3.201,392,1.556,393,2.778,395,1.556,397,1.556,398,2.783,399,1.556,400,1.281,402,1.406,403,1.912,404,1.281,405,1.556,407,1.406,408,1.825,409,1.174,410,1.556,411,1.556,412,1.912,413,1.556,414,1.556,416,1.556,418,1.556,420,1.281,421,1.281,422,1.174,423,0.819,424,3.201,425,1.556,426,2.096,427,2.322,428,2.778,429,1.556,430,1.556,431,1.556,432,1.958,433,3.296,434,1.556,435,2.322,436,1.406,437,1.406,438,1.281,439,1.406,440,1.406,441,1.912,442,1.406,443,1.556,444,1.556,445,2.778,446,2.322,447,1.556,448,1.752,449,2.322,450,1.556,451,1.556,452,1.556,453,1.556,454,2.322,455,1.556,456,1.556,457,2.322,458,1.556,459,1.556,460,1.556,461,1.174,462,1.556,463,1.281,464,1.556,465,1.556,466,1.556,467,3.938,468,2.322,469,1.556,470,2.098,471,2.536,472,2.778,473,2.778,474,1.897,475,1.174,476,2.322,477,1.556,478,2.098,479,2.778,480,1.406,481,1.406,482,1.556,483,1.406,484,1.556,485,0.997,486,1.174,487,1.752,488,2.322,489,2.322,490,1.912,491,1.556,492,2.287,493,1.281,494,1.556,495,1.174,496,1.556,497,1.406,498,1.406,499,2.322,500,1.556,501,2.322,502,1.912,503,1.281,504,1.556,505,1.08,506,1.556,507,1.556,508,1.556,509,0.997,510,1.556,511,1.556,512,2.322,513,2.322,514,1.556,515,1.556,516,1.556,517,1.406,518,2.322,519,1.556,520,1.928,521,2.322,522,1.556,523,1.556,524,1.556,525,1.556,526,1.556,527,1.556,528,1.556,529,1.556,530,1.556,698,1.08]],["title/interfaces/UserData.html",[423,0.634,424,1.769]],["body/interfaces/UserData.html",[3,0.201,4,0.201,9,0.174,13,1.153,15,1.203,29,1.775,31,0.75,39,0.318,40,0.523,42,1.687,43,1.399,48,1.145,55,0.457,56,0.961,60,0.03,62,0.78,63,1.45,65,0.992,66,0.581,68,1.053,71,0.868,75,1.821,80,1.091,81,0.542,82,0.628,84,0.918,89,0.359,90,0.174,92,0.419,93,2.211,95,0.426,96,0.201,101,1.202,103,1.012,108,1.075,110,1.45,131,1.168,132,1.168,152,0.73,217,2.968,295,0.016,296,0.016,298,0.992,303,1.385,312,1.27,317,1.168,318,1.275,319,2.314,320,1.549,321,1.549,322,1.549,323,1.549,324,1.549,325,1.549,327,1.549,328,1.399,329,1.549,330,1.399,331,1.549,332,1.275,339,1.549,340,1.549,341,1.123,342,1.409,343,2.314,344,1.275,345,1.483,347,1.27,348,1.285,349,2.137,350,3.094,352,1.075,353,2.318,354,1.746,356,1.399,358,1.969,359,2.211,360,0.992,361,1.746,362,0.992,363,3.51,364,1.773,366,1.549,367,1.905,369,1.409,370,1.905,372,1.483,373,1.746,375,2.09,377,1.275,378,1.549,379,2.452,380,1.399,382,1.275,383,2.603,384,2.52,386,1.549,387,1.549,388,2.398,389,3.198,390,3.198,392,1.549,393,2.77,395,1.549,397,1.549,398,2.777,399,1.549,400,1.275,402,1.399,403,1.905,404,1.275,405,1.549,407,1.399,408,1.821,409,1.168,410,1.549,411,1.549,412,1.905,413,1.549,414,1.549,416,1.549,418,1.549,420,1.275,421,1.275,422,1.168,423,0.817,424,3.238,425,1.549,426,2.09,427,2.314,428,2.77,429,1.549,430,1.549,431,1.549,432,1.957,433,3.289,434,1.549,435,2.314,436,1.399,437,1.399,438,1.275,439,1.399,440,1.399,441,1.905,442,1.399,443,1.549,444,1.549,445,2.77,446,2.314,447,1.549,448,1.746,449,2.314,450,1.549,451,1.549,452,1.549,453,1.549,454,2.314,455,1.549,456,1.549,457,2.314,458,1.549,459,1.549,460,1.549,461,1.168,462,1.549,463,1.275,464,1.549,465,1.549,466,1.549,467,3.934,468,2.314,469,1.549,470,2.091,471,2.53,472,2.77,473,2.77,474,1.894,475,1.168,476,2.314,477,1.549,478,2.091,479,2.77,480,1.399,481,1.399,482,1.549,483,1.399,484,1.549,485,0.992,486,1.168,487,1.746,488,2.314,489,2.314,490,1.905,491,1.549,492,2.28,493,1.275,494,1.549,495,1.168,496,1.549,497,1.399,498,1.399,499,2.314,500,1.549,501,2.314,502,1.905,503,1.275,504,1.549,505,1.075,506,1.549,507,1.549,508,1.549,509,0.992,510,1.549,511,1.549,512,2.314,513,2.314,514,1.549,515,1.549,516,1.549,517,1.399,518,2.314,519,1.549,520,1.923,521,2.314,522,1.549,523,1.549,524,1.549,525,1.549,526,1.549,527,1.549,528,1.549,529,1.549,530,1.549,698,1.075]],["title/components/UserManagementComponent.html",[0,0.065,291,0.634]],["body/components/UserManagementComponent.html",[0,0.094,1,0.554,2,0.785,3,0.243,4,0.243,5,0.652,6,1.204,7,0.652,8,0.652,9,0.211,11,1.417,12,2.407,13,1.455,14,2.664,15,1.319,16,2.985,20,1.578,24,1.462,25,1.698,26,0.652,27,1.156,28,0.793,29,1.204,30,1.079,31,0.721,32,0.721,33,1.353,34,1.46,35,1.462,37,0.924,39,0.385,40,0.602,42,1.698,47,1.462,48,1.138,52,1.848,53,0.999,54,1.879,55,1.088,56,1.317,57,1.66,59,1.698,60,0.03,61,0.963,62,0.803,63,1.46,65,1.706,67,1.848,68,1.078,71,1.263,72,3.042,75,2.421,78,0.999,79,1.079,81,0.607,82,1.364,89,0.436,90,0.211,91,0.761,92,0.509,93,2.432,94,0.956,95,0.243,96,0.243,97,2.009,98,1.204,99,1.879,100,1.304,101,0.912,103,1.353,104,1.304,105,1.879,106,2.106,110,0.886,111,2.41,129,3.416,131,2.681,132,2.009,145,2.407,150,2.985,151,2.193,152,1.588,153,0.425,212,1.304,247,2.664,256,0.652,257,0.924,258,0.924,259,0.652,260,1.168,261,0.652,264,0.652,265,0.924,266,0.554,267,0.554,268,0.652,269,0.652,270,0.924,271,0.554,272,0.466,273,0.924,274,0.554,275,0.425,276,0.924,277,0.509,278,0.509,279,0.924,280,0.554,281,0.466,282,0.924,283,0.554,284,0.554,285,0.493,286,0.652,287,0.554,288,0.652,289,0.509,290,0.652,291,0.993,292,1.073,293,0.652,294,0.652,295,0.018,296,0.018,303,1.078,341,1.079,342,1.713,347,1.848,348,1.078,349,1.713,352,1.849,361,2.785,363,3.336,370,2.771,375,2.009,384,1.706,388,1.995,389,2.193,390,2.193,398,2.796,426,1.417,436,1.697,438,2.547,439,1.697,441,1.546,442,1.697,475,2.54,478,2.407,495,2.009,497,2.407,498,2.407,919,3.416,946,3.416,1248,2.985,1249,2.985,1251,2.985,1252,2.106,1262,2.106,1263,3.969,1264,3.416,1267,3.416,1316,4.319,1326,4.975,1327,4.975,1328,3.416,1329,4.071,1330,4.071,1331,5.146,1332,4.071,1333,4.071,1334,2.871,1335,4.071,1336,2.871,1337,2.871,1338,2.871,1339,2.871,1340,2.871,1341,2.871,1342,2.871,1343,2.871,1344,4.071,1345,4.071,1346,4.071]],["title/interfaces/UserPreferences.html",[423,0.634,868,2.149]],["body/interfaces/UserPreferences.html",[0,0.09,3,0.287,4,0.287,9,0.249,13,0.83,15,0.955,24,1.214,25,1.637,27,0.599,28,0.41,30,0.897,31,1.052,32,0.599,33,1.304,34,1.407,35,1.214,37,0.768,39,0.454,40,0.674,48,1.08,52,1.214,53,0.83,55,0.995,56,1.17,60,0.03,62,0.816,66,0.83,68,1.243,71,1.414,81,0.439,82,0.897,89,0.488,90,0.249,91,0.897,92,0.599,94,1.126,95,0.287,96,0.287,98,1.418,101,0.879,103,1.476,108,1.536,137,2.983,275,0.5,277,0.599,295,0.02,296,0.02,303,0.955,308,2.25,309,1.911,311,1.418,332,1.822,341,1.367,348,0.708,349,1.517,364,1.832,369,1.918,379,1.911,384,1.911,388,1.999,408,1.767,423,0.652,432,1.407,490,1.822,495,2.25,509,1.418,520,1.536,543,3.406,555,1.999,565,2.25,567,1.669,572,1.999,593,2.844,595,1.669,597,2.545,598,2.93,599,1.999,609,3.049,610,3.509,653,1.999,698,1.536,837,2.48,838,2.838,839,2.838,840,2.838,841,2.838,842,2.838,843,2.838,844,2.48,845,2.838,846,2.838,855,2.213,858,2.213,859,2.838,860,4.328,862,2.838,868,3.374,869,4.982,870,4.836,871,4.328,872,4.982,873,4.982,874,4.982,875,2.838,876,3.826,877,3.343,878,3.343,879,2.838,880,2.838,881,2.213,882,2.838,883,2.48,884,2.48,885,2.838,886,2.838,887,2.838,888,2.48,889,2.838,890,2.48,891,2.213,892,2.838,893,3.826,894,2.838,895,2.838,896,4.328,897,2.213,898,2.838,899,2.838,900,4.328,901,2.838,902,2.838,903,2.838,904,2.838,905,3.049,906,3.782,907,3.782,908,3.343,909,3.374,910,4.328,911,2.838,912,2.48,913,2.838,914,2.838,915,2.838,916,2.838,917,2.838]],["title/coverage.html",[1347,3.751]],["body/coverage.html",[0,0.132,1,0.735,9,0.28,10,3.198,28,0.597,55,0.735,60,0.03,62,0.564,80,2.097,81,0.367,84,1.477,125,3.42,153,0.564,199,3.618,266,0.735,267,0.735,271,0.735,272,0.618,274,0.735,275,0.564,277,0.675,278,0.675,280,0.735,281,0.618,283,0.735,284,0.735,285,0.597,287,0.735,289,0.675,291,0.735,295,0.022,296,0.022,297,3.198,307,3.198,312,1.964,313,2.795,315,3.198,318,3.116,412,2.052,423,1.205,424,2.052,531,3.198,532,3.198,533,3.198,641,3.198,645,3.198,648,3.198,697,2.795,699,4.14,704,2.253,834,3.198,837,3.618,868,2.493,961,3.198,964,3.198,1029,3.198,1032,3.198,1168,3.618,1214,3.618,1254,3.198,1255,3.198,1256,3.198,1260,3.198,1261,3.198,1262,3.618,1326,3.198,1327,3.198,1347,3.198,1348,3.811,1349,3.811,1350,3.811,1351,5.47,1352,4.14,1353,6.57,1354,3.198,1355,6.623,1356,3.198,1357,3.198,1358,3.198,1359,3.198,1360,3.198,1361,4.933,1362,4.933,1363,3.811,1364,3.811,1365,3.811,1366,3.811,1367,4.933,1368,3.811,1369,3.811,1370,3.811,1371,3.811,1372,3.811,1373,3.811,1374,3.811,1375,3.811,1376,3.198,1377,3.198,1378,4.591,1379,3.198,1380,5.785,1381,3.198,1382,3.198,1383,3.811,1384,3.811,1385,3.811,1386,3.811,1387,3.811,1388,3.811,1389,3.811,1390,3.198,1391,2.493,1392,4.855,1393,3.198,1394,3.198,1395,3.198,1396,3.811,1397,3.811]],["title/dependencies.html",[1398,2.307,1399,3.312]],["body/dependencies.html",[60,0.03,90,0.363,91,1.31,92,0.875,295,0.025,296,0.025,311,2.071,422,2.438,1391,3.232,1399,4.146,1400,4.94,1401,4.94,1402,6.6,1403,4.94,1404,5.79,1405,4.146,1406,4.146,1407,4.94,1408,4.94,1409,4.94,1410,4.94,1411,4.94,1412,4.146,1413,4.94,1414,4.94,1415,4.94,1416,4.94,1417,4.94,1418,4.94,1419,4.94,1420,4.94,1421,4.94]],["title/miscellaneous/enumerations.html",[1422,1.799,1423,3.312]],["body/miscellaneous/enumerations.html",[29,2.503,39,0.699,60,0.028,79,1.583,93,2.503,295,0.026,296,0.026,318,2.807,426,2.947,1422,3.41,1423,4.373,1424,5.211]],["title/index.html",[39,0.369,1425,2.749,1426,2.749]],["body/index.html",[2,0.73,6,1.587,13,1.206,15,1.375,20,1.904,28,0.458,60,0.03,66,0.929,71,1.339,72,2.904,73,2.237,75,1.904,103,1.083,104,2.231,105,3.214,108,1.72,110,1.168,117,2.777,132,1.869,138,4.576,139,2.419,150,2.777,153,0.56,249,3.178,272,0.614,275,0.56,278,0.671,281,0.614,295,0.022,296,0.022,304,3.411,341,1.446,342,1.815,345,2.059,348,1.284,349,1.635,353,1.869,354,1.869,367,2.039,369,1.26,372,1.587,382,2.039,383,1.869,388,1.468,408,1.904,485,2.059,486,2.425,493,2.039,503,2.039,505,2.231,584,2.477,629,2.477,649,3.178,676,2.477,739,2.477,774,3.178,807,2.477,819,3.178,1033,3.178,1125,2.777,1126,3.178,1127,3.178,1226,3.999,1317,3.178,1328,3.178,1391,2.477,1427,3.786,1428,3.786,1429,4.912,1430,3.786,1431,3.786,1432,3.786,1433,3.786,1434,3.786,1435,3.786,1436,3.786,1437,3.786,1438,3.786,1439,3.786,1440,3.786,1441,3.786,1442,3.786,1443,3.786,1444,4.912,1445,4.912,1446,3.786,1447,3.178,1448,3.786,1449,3.786,1450,4.912,1451,5.77,1452,5.77,1453,3.786,1454,3.786,1455,3.786,1456,3.786,1457,3.786,1458,3.786,1459,4.912,1460,5.979,1461,4.912,1462,4.912,1463,3.786,1464,3.786,1465,3.786,1466,3.786,1467,3.786,1468,4.912,1469,3.786,1470,3.786,1471,3.786,1472,3.786,1473,3.786,1474,3.786,1475,3.786,1476,3.786,1477,3.786,1478,3.786,1479,3.786,1480,3.786,1481,3.178,1482,3.786,1483,4.912,1484,4.912,1485,3.786,1486,3.786,1487,4.912,1488,3.786,1489,4.912,1490,3.786,1491,4.912,1492,3.786,1493,3.786,1494,4.912,1495,4.912,1496,3.786,1497,3.786,1498,3.786,1499,4.912,1500,3.786,1501,3.786,1502,3.178,1503,4.912,1504,3.786,1505,3.786,1506,3.786,1507,3.786,1508,3.786,1509,3.786]],["title/modules.html",[1510,3.751]],["body/modules.html",[60,0.027,295,0.027,296,0.027,1510,4.466]],["title/overview.html",[1511,3.751]],["body/overview.html",[2,1.017,60,0.026,117,3.867,295,0.026,296,0.026,314,3.45,698,2.395,780,3.117,1511,4.426,1512,5.273]],["title/properties.html",[40,0.584,1398,2.307]],["body/properties.html",[40,0.783,60,0.028,295,0.027,296,0.027,1513,5.297,1514,5.297]],["title/miscellaneous/variables.html",[1422,1.799,1515,3.312]],["body/miscellaneous/variables.html",[28,0.605,31,0.886,39,0.522,55,0.964,56,1.135,60,0.03,62,0.913,78,1.617,79,1.747,84,1.508,93,1.631,101,1.163,110,1.201,152,1.201,153,0.575,295,0.022,296,0.022,304,2.3,308,1.92,309,1.631,341,1.326,348,1.047,349,1.295,358,1.631,359,2.096,360,2.096,361,2.468,362,2.316,372,1.631,373,1.92,432,1.799,474,1.795,612,2.546,630,2.096,702,4.196,805,2.096,1352,3.265,1354,4.636,1356,4.636,1357,3.265,1358,4.196,1359,3.265,1360,4.196,1376,3.265,1377,4.196,1378,3.265,1379,4.196,1381,4.196,1382,4.196,1390,3.265,1391,3.271,1392,3.265,1393,4.196,1394,4.196,1395,4.196,1405,3.265,1406,3.265,1412,3.265,1422,2.546,1447,3.265,1481,3.265,1502,3.265,1515,3.265,1516,5.524,1517,5.83,1518,3.891,1519,3.891,1520,3.891,1521,4.999,1522,3.891,1523,5.83,1524,3.891,1525,5.524,1526,3.891,1527,3.891,1528,3.891,1529,3.891,1530,4.999,1531,4.999,1532,4.999,1533,5.524,1534,3.891,1535,3.891,1536,3.891,1537,4.999,1538,3.891,1539,3.891,1540,3.891,1541,3.891,1542,3.891,1543,3.891,1544,3.891,1545,3.891,1546,3.891,1547,3.891,1548,4.999,1549,4.999,1550,3.891,1551,3.891,1552,3.891,1553,3.891,1554,3.891,1555,3.891,1556,3.891,1557,3.891,1558,3.891,1559,3.891,1560,3.891]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1514,"title":{},"body":{"properties.html":{}}}],["0.075",{"_index":957,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.1",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["0.125rem",{"_index":955,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.15.1",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.25rem",{"_index":956,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["0.2s",{"_index":1146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.3s",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["0.5rem",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["0.75rem",{"_index":248,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["0.875rem",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["0/1",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0056b3",{"_index":1159,"title":{},"body":{"components/RegisterComponent.html":{}}}],["007bff",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["00f2fe",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{}}}],["01",{"_index":1229,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["08",{"_index":1235,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["0d6efd",{"_index":950,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1",{"_index":208,"title":{"interfaces/Task-1.html":{}},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["1.25rem",{"_index":242,"title":{},"body":{"components/AdminComponent.html":{}}}],["1.2rem",{"_index":255,"title":{},"body":{"components/AdminComponent.html":{}}}],["1.5rem",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["1/1",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1231,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["100",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":618,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["100vh",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{}}}],["10px",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{}}}],["11",{"_index":1243,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["11998e",{"_index":218,"title":{},"body":{"components/AdminComponent.html":{}}}],["12",{"_index":1234,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["123",{"_index":1150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["12px",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["14",{"_index":1242,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["15",{"_index":1230,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["15/21",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{}}}],["15px",{"_index":233,"title":{},"body":{"components/AdminComponent.html":{}}}],["17",{"_index":1429,"title":{},"body":{"index.html":{}}}],["18",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{},"overview.html":{}}}],["1px",{"_index":239,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["1rem",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["2",{"_index":614,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["2.11.8",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":954,"title":{},"body":{"components/ProfileComponent.html":{}}}],["20",{"_index":1099,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20.0.0",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["20.0.2",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":617,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["2024",{"_index":1228,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["21/37",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{}}}],["255",{"_index":1151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["28a745",{"_index":1026,"title":{},"body":{"components/RecoverComponent.html":{}}}],["2px",{"_index":229,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["2rem",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":780,"title":{},"body":{"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["3.3.2",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":910,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["30px",{"_index":1024,"title":{},"body":{"components/RecoverComponent.html":{}}}],["333",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["36",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["38ef7d",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{}}}],["4/11",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{}}}],["46",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["4facfe",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{}}}],["4px",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["5.1.0",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["5.3.6",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":199,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"coverage.html":{}}}],["500",{"_index":246,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["50px",{"_index":254,"title":{},"body":{"components/AdminComponent.html":{}}}],["53",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["545b62",{"_index":1162,"title":{},"body":{"components/RegisterComponent.html":{}}}],["555",{"_index":1144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["56",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{}}}],["6",{"_index":1019,"title":{},"body":{"components/RecoverComponent.html":{}}}],["6/13",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":237,"title":{},"body":{"components/AdminComponent.html":{}}}],["600px",{"_index":1142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["60px",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{}}}],["667eea",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{}}}],["6c757d",{"_index":210,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["6px",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{}}}],["7",{"_index":1512,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["71",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["764ba2",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{}}}],["767.98px",{"_index":253,"title":{},"body":{"components/AdminComponent.html":{}}}],["8",{"_index":932,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{}}}],["8/15",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":232,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1446,"title":{},"body":{"index.html":{}}}],["9]{6",{"_index":990,"title":{},"body":{"components/RecoverComponent.html":{}}}],["9_",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["a.category.localecompare(b.category",{"_index":785,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["abrir",{"_index":1462,"title":{},"body":{"index.html":{}}}],["abstractcontrol",{"_index":1057,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acc",{"_index":1213,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["acc[task.category",{"_index":1212,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["acceso",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":1295,"title":{},"body":{"components/TasksComponent.html":{}}}],["acciones",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/UserManagementComponent.html":{}}}],["aceptar",{"_index":1115,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aceptas",{"_index":1119,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acepto",{"_index":1111,"title":{},"body":{"components/RegisterComponent.html":{}}}],["action",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{}}}],["active",{"_index":949,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{}}}],["activeusers",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{}}}],["actividad",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{}}}],["actividades",{"_index":1134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activo",{"_index":1346,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["activos",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["actual",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["actual_component",{"_index":294,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["actuales",{"_index":756,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["actualiza",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["actualización",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{}}}],["actualizada",{"_index":908,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["actualizado",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["actualizar",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["acuerdo",{"_index":1129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["add",{"_index":1497,"title":{},"body":{"index.html":{}}}],["addtask",{"_index":1268,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtask(task",{"_index":1183,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["admin",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":264,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["admin.component.html",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/tasks",{"_index":734,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["admin/users",{"_index":732,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["admin123",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["admin@taskflow.com",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["adminguard",{"_index":1379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["administra",{"_index":1267,"title":{},"body":{"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["administración",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["administrador",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["administradores",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administrar",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["administrativas",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{}}}],["agregar",{"_index":1344,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["ahora",{"_index":999,"title":{},"body":{"components/RecoverComponent.html":{}}}],["al",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":960,"title":{},"body":{"components/ProfileComponent.html":{}}}],["align",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["allowed",{"_index":959,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["almacenamiento",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["alta",{"_index":549,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["amazingfeature",{"_index":1498,"title":{},"body":{"index.html":{}}}],["angular",{"_index":304,"title":{},"body":{"components/App.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apellido",{"_index":1097,"title":{},"body":{"components/RegisterComponent.html":{}}}],["api",{"_index":1174,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["aplicación",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["app",{"_index":28,"title":{"components/App.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.ts",{"_index":1476,"title":{},"body":{"index.html":{}}}],["app.html",{"_index":300,"title":{},"body":{"components/App.html":{}}}],["app.routes.ts",{"_index":1477,"title":{},"body":{"index.html":{}}}],["app.scss",{"_index":302,"title":{},"body":{"components/App.html":{}}}],["appcomponent",{"_index":266,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":905,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/UserPreferences.html":{}}}],["archivo",{"_index":1506,"title":{},"body":{"index.html":{}}}],["asociado",{"_index":1015,"title":{},"body":{"components/RecoverComponent.html":{}}}],["assets",{"_index":1478,"title":{},"body":{"index.html":{}}}],["autenticación",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["autenticado",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":313,"title":{"injectables/Auth.html":{}},"body":{"injectables/Auth.html":{},"coverage.html":{}}}],["auth.service.ts",{"_index":1474,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":1377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":55,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.hasrole(requiredrole",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.isauthenticated",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":235,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["autocomplete=\"new",{"_index":1105,"title":{},"body":{"components/RegisterComponent.html":{}}}],["b",{"_index":774,"title":{},"body":{"interfaces/MenuItem.html":{},"index.html":{}}}],["background",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["badge",{"_index":247,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["baja",{"_index":550,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["bajo",{"_index":1504,"title":{},"body":{"index.html":{}}}],["bajos",{"_index":930,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["base",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{}}}],["behaviorsubject",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["behaviorsubject(null",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["bg",{"_index":1251,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["bi",{"_index":723,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["bienvenido",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{}}}],["block",{"_index":1028,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":244,"title":{},"body":{"components/AdminComponent.html":{}}}],["bold",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{}}}],["boolean",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["bootstrap",{"_index":1391,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["break",{"_index":777,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["browser",{"_index":1405,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["btn",{"_index":245,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["build",{"_index":1481,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":1158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["buttons",{"_index":1156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["búsqueda",{"_index":819,"title":{},"body":{"interfaces/MenuItem.html":{},"index.html":{}}}],["cambia",{"_index":797,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["cambiada",{"_index":1008,"title":{},"body":{"components/RecoverComponent.html":{}}}],["cambiar",{"_index":912,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["cambio",{"_index":1007,"title":{},"body":{"components/RecoverComponent.html":{}}}],["cambios",{"_index":739,"title":{},"body":{"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["campo",{"_index":572,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["campos",{"_index":582,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["canactivatefn",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelar",{"_index":558,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RegisterComponent.html":{}}}],["caracteres",{"_index":635,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["características",{"_index":1435,"title":{},"body":{"index.html":{}}}],["card",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["carga",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["cargar",{"_index":893,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["cargaríamos",{"_index":1173,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["carácter",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["case",{"_index":772,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["categories",{"_index":1210,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["category",{"_index":601,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["categorystats",{"_index":721,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["categoría",{"_index":540,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{}}}],["ccc",{"_index":1160,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cd",{"_index":1457,"title":{},"body":{"index.html":{}}}],["center",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["cerrada",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["cerrar",{"_index":918,"title":{},"body":{"components/ProfileComponent.html":{}}}],["check",{"_index":951,"title":{},"body":{"components/ProfileComponent.html":{}}}],["checkout",{"_index":1493,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["circle",{"_index":728,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["claro",{"_index":938,"title":{},"body":{"components/ProfileComponent.html":{}}}],["clase",{"_index":1248,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["class",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["class.is",{"_index":1101,"title":{},"body":{"components/RegisterComponent.html":{}}}],["class=\"mt",{"_index":1108,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cli",{"_index":1447,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["client123",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["client@taskflow.com",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["cliente",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["clientes",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientguard",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonar",{"_index":1449,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1453,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":988,"title":{},"body":{"components/RecoverComponent.html":{}}}],["coincidan",{"_index":1052,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coinciden",{"_index":936,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["coincidencia",{"_index":1070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["commit",{"_index":1495,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["como",{"_index":584,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["compartir",{"_index":1124,"title":{},"body":{"components/RegisterComponent.html":{}}}],["compila",{"_index":1482,"title":{},"body":{"index.html":{}}}],["completada",{"_index":1321,"title":{},"body":{"components/TasksComponent.html":{}}}],["completadas",{"_index":1317,"title":{},"body":{"components/TasksComponent.html":{},"index.html":{}}}],["completado",{"_index":798,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["completar",{"_index":1225,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["complete",{"_index":1083,"title":{},"body":{"components/RegisterComponent.html":{}}}],["completed",{"_index":1025,"title":{},"body":{"components/RecoverComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["completed').length",{"_index":1224,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["completedtasks",{"_index":719,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["completo",{"_index":919,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserManagementComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["component_template",{"_index":261,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{},"overview.html":{}}}],["computadas",{"_index":1219,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["con",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["condiciones",{"_index":1113,"title":{},"body":{"components/RegisterComponent.html":{}}}],["conectado",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{}}}],["confidencialidad",{"_index":1123,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{}}}],["configurar",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["confirm('¿estás",{"_index":803,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["confirmar",{"_index":934,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmnewpassword",{"_index":889,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["confirmpassword",{"_index":992,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log('inicio",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["console.log('intentando",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["console.log('sesión",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["console.log('usuario",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["console.log('usuarios",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["const",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["constructor(authservice",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(fb",{"_index":564,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(private",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["constructor(router",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["contadores",{"_index":1220,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["container",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["contener",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["content",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["contraseña",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["contraseñas",{"_index":935,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["contribuir",{"_index":1488,"title":{},"body":{"index.html":{}}}],["control",{"_index":621,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["control?.markastouched",{"_index":623,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["correctamente",{"_index":909,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["correo",{"_index":924,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["count",{"_index":827,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["coverage",{"_index":1347,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1095,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creación",{"_index":608,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creada",{"_index":611,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creadas",{"_index":1325,"title":{},"body":{"components/TasksComponent.html":{}}}],["creados",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["creando",{"_index":557,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RegisterComponent.html":{}}}],["crear",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["create",{"_index":268,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["createdat",{"_index":1169,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["createnoderequesthandler(app",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtaskcomponent",{"_index":267,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["credenciales",{"_index":1126,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["criterio",{"_index":767,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["criterios",{"_index":755,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["css",{"_index":1249,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["cuenta",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["cuentas",{"_index":1139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cumplir",{"_index":1109,"title":{},"body":{"components/RegisterComponent.html":{}}}],["current_user_key",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["currentcategory",{"_index":714,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["currentfilter",{"_index":713,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["currentpassword",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["currentsort",{"_index":715,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["currentstep",{"_index":967,"title":{},"body":{"components/RecoverComponent.html":{}}}],["currenttab",{"_index":840,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["currentuser",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["currentuser?.firstname",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["currentuser?.lastname",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["currentuser?.role",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["currentusersubject",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["cursor",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["código",{"_index":997,"title":{},"body":{"components/RecoverComponent.html":{}}}],["danger",{"_index":1252,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["dark",{"_index":871,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["dashboard",{"_index":153,"title":{"components/Dashboard.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dashboard'},{'name",{"_index":270,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["dashboard.component.html",{"_index":709,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["dashboard.component.scss",{"_index":710,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["dashboard.html",{"_index":642,"title":{},"body":{"components/Dashboard.html":{}}}],["dashboard.scss",{"_index":643,"title":{},"body":{"components/Dashboard.html":{}}}],["dashboardcomponent",{"_index":271,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["date",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["date().toisostring().split('t')[0",{"_index":1187,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["date(a.createdat).gettime",{"_index":776,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["date(b.createdat).gettime",{"_index":775,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["date(task.duedate",{"_index":825,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["date.now",{"_index":1186,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["date:'dd/mm/yyyy",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/TasksComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":263,"title":{},"body":{"components/AdminComponent.html":{},"components/TasksComponent.html":{}}}],["datepipe",{"_index":703,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["datos",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["dc3545",{"_index":1154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ddd",{"_index":1145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["de",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["debe",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["debes",{"_index":1114,"title":{},"body":{"components/RegisterComponent.html":{}}}],["debugusers",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["decoration",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["default",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["del",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["deletetask",{"_index":1269,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["deletetask(taskid",{"_index":802,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["demo",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["dependencias",{"_index":1456,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1399,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derecho",{"_index":1137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["derechos",{"_index":1133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["desarrollada",{"_index":1428,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["descripción",{"_index":538,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["desde",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["deshabilitar",{"_index":898,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["design",{"_index":250,"title":{},"body":{"components/AdminComponent.html":{}}}],["después",{"_index":613,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["detail",{"_index":1257,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail'},{'name",{"_index":286,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component.ts",{"_index":1256,"title":{},"body":{"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["detail/task",{"_index":1255,"title":{},"body":{"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1258,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detalles",{"_index":1509,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diaria",{"_index":1241,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["diarias",{"_index":1431,"title":{},"body":{"index.html":{}}}],["dinámico",{"_index":708,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["directive",{"_index":259,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":293,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["disabled",{"_index":958,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["display",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["disponibles",{"_index":1480,"title":{},"body":{"index.html":{}}}],["documentación",{"_index":1233,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["documentation",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["duedate",{"_index":603,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["during",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dígitos",{"_index":1020,"title":{},"body":{"components/RecoverComponent.html":{}}}],["e2e",{"_index":1486,"title":{},"body":{"index.html":{}}}],["e9ecef",{"_index":240,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{}}}],["ease",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["editar",{"_index":1437,"title":{},"body":{"index.html":{}}}],["eficiente",{"_index":1433,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":1483,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":897,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/UserPreferences.html":{}}}],["ejercicio",{"_index":1236,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["ejercicios",{"_index":1240,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["el",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":925,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":258,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["elementos",{"_index":741,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["elimina",{"_index":801,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["eliminar",{"_index":807,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["email",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["en",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["encontrado",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["end",{"_index":1487,"title":{},"body":{"index.html":{}}}],["english",{"_index":947,"title":{},"body":{"components/ProfileComponent.html":{}}}],["entendido",{"_index":1141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enum",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["enumerations",{"_index":1423,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1002,"title":{},"body":{"components/RecoverComponent.html":{}}}],["enviamos",{"_index":1017,"title":{},"body":{"components/RecoverComponent.html":{}}}],["enviar",{"_index":996,"title":{},"body":{"components/RecoverComponent.html":{}}}],["envío",{"_index":590,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":571,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errores",{"_index":576,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormessage",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["errors",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["errors.length",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["errors.push('la",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["es",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["escuchar",{"_index":1064,"title":{},"body":{"components/RegisterComponent.html":{}}}],["espacios",{"_index":923,"title":{},"body":{"components/ProfileComponent.html":{}}}],["español",{"_index":946,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserManagementComponent.html":{}}}],["especial",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["específica",{"_index":831,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["específico",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["est",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["esta",{"_index":808,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["establece",{"_index":810,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["establecidas",{"_index":1131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["estado",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["estadísticas",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{}}}],["este",{"_index":629,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["esto",{"_index":1341,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["estos",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["estructura",{"_index":1471,"title":{},"body":{"index.html":{}}}],["estudio",{"_index":544,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["example",{"_index":1451,"title":{},"body":{"index.html":{}}}],["example.com",{"_index":895,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["existe",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["existinguser",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["exitosa",{"_index":1004,"title":{},"body":{"components/RecoverComponent.html":{}}}],["exitosamente",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/RecoverComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["exitoso",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["express",{"_index":1412,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["f093fb",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{}}}],["f5576c",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{}}}],["f8f9fa",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["fallido",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":1082,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fb",{"_index":567,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["feature",{"_index":1492,"title":{},"body":{"index.html":{}}}],["feature/amazingfeature",{"_index":1494,"title":{},"body":{"index.html":{}}}],["fecha",{"_index":552,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["feedback",{"_index":1155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fetch",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["ffffff",{"_index":1143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field",{"_index":624,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field.geterror('maxlength').requiredlength",{"_index":1090,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field.geterror('minlength').requiredlength",{"_index":633,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field?.haserror('email",{"_index":1087,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field?.haserror('maxlength",{"_index":1089,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field?.haserror('minlength",{"_index":631,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field?.haserror('mismatch",{"_index":1093,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field?.haserror('pattern",{"_index":1092,"title":{},"body":{"components/RegisterComponent.html":{}}}],["field?.haserror('required",{"_index":628,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field?.invalid",{"_index":626,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field?.touched",{"_index":627,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fieldname",{"_index":573,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["filter",{"_index":814,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["filtered",{"_index":758,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["filteredtasks",{"_index":712,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["filtertasks",{"_index":1291,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtertasks(filter",{"_index":1245,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["filtra",{"_index":1244,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["filtradas",{"_index":754,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["filtrado",{"_index":1439,"title":{},"body":{"index.html":{}}}],["filtrados",{"_index":742,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["filtro",{"_index":811,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["finalizar",{"_index":1227,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["firebase",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["flex",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["focus",{"_index":1148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["font",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["fork",{"_index":1490,"title":{},"body":{"index.html":{}}}],["form",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":565,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["formcontrolname=\"password",{"_index":1104,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup",{"_index":593,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["formsmodule",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["formulario",{"_index":583,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{}}}],["fullname",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["funcionalidad",{"_index":1259,"title":{},"body":{"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{}}}],["funciones",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{}}}],["functions",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["físico",{"_index":1237,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["g",{"_index":857,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["g.get('confirmnewpassword')?.value",{"_index":903,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["g.get('confirmpassword')?.value",{"_index":994,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["g.get('newpassword')?.value",{"_index":902,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["g.get('password')?.value",{"_index":993,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["gap",{"_index":1157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gear",{"_index":730,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["generales",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{}}}],["gestiona",{"_index":1314,"title":{},"body":{"components/TasksComponent.html":{}}}],["gestionar",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["gestión",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["getcompletedtasks",{"_index":1312,"title":{},"body":{"components/TasksComponent.html":{}}}],["getcurrentuser",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["geterrormessage",{"_index":560,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrormessage('category",{"_index":547,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage('confirmpassword",{"_index":1110,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage('description",{"_index":539,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage('duedate",{"_index":554,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage('email",{"_index":1100,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage('firstname",{"_index":1096,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage('lastname",{"_index":1098,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage('password",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrormessage('priority",{"_index":551,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage('title",{"_index":537,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage('username",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrormessage(\\'category",{"_index":638,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage(\\'confirmpassword",{"_index":1167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage(\\'description",{"_index":637,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage(\\'duedate",{"_index":640,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage(\\'email",{"_index":1165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage(\\'firstname",{"_index":1163,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage(\\'lastname",{"_index":1164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["geterrormessage(\\'password",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrormessage(\\'priority",{"_index":639,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage(\\'title",{"_index":636,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["geterrormessage(\\'username",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrormessage(fieldname",{"_index":568,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getmenuitems",{"_index":743,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["getoverduetasks",{"_index":1205,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["getpendingtasks",{"_index":1310,"title":{},"body":{"components/TasksComponent.html":{}}}],["getprioritybadgeclass",{"_index":1292,"title":{},"body":{"components/TasksComponent.html":{}}}],["getprioritybadgeclass(priority",{"_index":1250,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["getrolebadgeclass",{"_index":1329,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["getrolebadgeclass(role",{"_index":1333,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["getrolename",{"_index":1330,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["getrolename(role",{"_index":1335,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["getrolename(user.role",{"_index":1345,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["getstatusbadgeclass",{"_index":1293,"title":{},"body":{"components/TasksComponent.html":{}}}],["getstatusbadgeclass(status",{"_index":1253,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["gettasks",{"_index":1182,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gettasksbycategory",{"_index":1270,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasksbycategory(category",{"_index":1200,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gettasksbyfilter",{"_index":1271,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasksbyfilter(filter",{"_index":1198,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gettaskstats",{"_index":1272,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":1425,"title":{"index.html":{}},"body":{}}],["gettotaltasks",{"_index":1308,"title":{},"body":{"components/TasksComponent.html":{}}}],["getusers",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["git",{"_index":1452,"title":{},"body":{"index.html":{}}}],["gradient(135deg",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{}}}],["group",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["guard",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guarda",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["guardadas",{"_index":915,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["guardar",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["guiones",{"_index":929,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["h1",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{}}}],["h2",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["h3",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{}}}],["h6",{"_index":236,"title":{},"body":{"components/AdminComponent.html":{}}}],["ha",{"_index":577,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["hacer",{"_index":1489,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haserror",{"_index":561,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["haserror(fieldname",{"_index":574,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hasrole",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasrole(role",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["hay",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["header",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["height",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{}}}],["hello",{"_index":306,"title":{},"body":{"components/App.html":{}}}],["hh:mm",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{}}}],["high",{"_index":779,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["hover",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["html",{"_index":257,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1464,"title":{},"body":{"index.html":{}}}],["icon",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{}}}],["id",{"_index":1170,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["id=\"password",{"_index":1103,"title":{},"body":{"components/RegisterComponent.html":{}}}],["identifier",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":945,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ilegales",{"_index":1135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["implements",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["important",{"_index":241,"title":{},"body":{"components/AdminComponent.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["incorrectos",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1023,"title":{},"body":{"components/RecoverComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["información",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["ingresa",{"_index":1012,"title":{},"body":{"components/RecoverComponent.html":{}}}],["ingrese",{"_index":1088,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inicia",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["inicializa",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["iniciando",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["iniciar",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["inicio",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["initializetestusers",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["inject(authservice",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":312,"title":{"injectables/Auth.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/Auth.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["injectables",{"_index":314,"title":{},"body":{"injectables/Auth.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["input",{"_index":953,"title":{},"body":{"components/ProfileComponent.html":{}}}],["input:checked",{"_index":952,"title":{},"body":{"components/ProfileComponent.html":{}}}],["instalación",{"_index":1448,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":1455,"title":{},"body":{"index.html":{}}}],["install",{"_index":1458,"title":{},"body":{"index.html":{}}}],["instrucciones",{"_index":1014,"title":{},"body":{"components/RecoverComponent.html":{}}}],["interface",{"_index":423,"title":{"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["interfaces",{"_index":698,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"overview.html":{}}}],["interfaz",{"_index":1440,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1153,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iría",{"_index":906,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["isadmin",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["isauthenticated",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["isclient",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["isloading",{"_index":556,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ismenucollapsed",{"_index":717,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["isoverdue(task",{"_index":823,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["isvalid",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["item",{"_index":948,"title":{},"body":{"components/ProfileComponent.html":{}}}],["item.roles.includes(this.currentuser?.role",{"_index":745,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["items",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{}}}],["join(import.meta.dirname",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(storedtasks",{"_index":1177,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["json.parse(userjson",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["json.parse(usersjson",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["json.stringify(this.tasks",{"_index":1181,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["json.stringify(updateduser",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["json.stringify(userdata",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["json.stringify(users",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["kanban",{"_index":733,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["key",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["la",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["label",{"_index":700,"title":{},"body":{"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{}}}],["language",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["las",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{},"index.html":{}}}],["lastname",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["legend",{"_index":256,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["letras",{"_index":922,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["licencia",{"_index":1503,"title":{},"body":{"index.html":{}}}],["license",{"_index":1507,"title":{},"body":{"index.html":{}}}],["light",{"_index":870,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["limpiar",{"_index":1116,"title":{},"body":{"components/RegisterComponent.html":{}}}],["line",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{}}}],["linear",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{}}}],["link",{"_index":1027,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["links",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["list",{"_index":726,"title":{},"body":{"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{}}}],["lista",{"_index":1316,"title":{},"body":{"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["literal",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadadminstats",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{}}}],["loadtasks",{"_index":747,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["loaduserfromstorage",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["loadusers",{"_index":1331,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["local",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["localstorage.getitem('tasks",{"_index":1176,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["localstorage.getitem(this.current_user_key",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["localstorage.getitem(this.users_key",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["localstorage.removeitem(this.current_user_key",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["localstorage.setitem('tasks",{"_index":1180,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["localstorage.setitem(this.current_user_key",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["localstorage.setitem(this.users_key",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["login",{"_index":272,"title":{"components/Login.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["login'},{'name",{"_index":273,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["login.component.html",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.html",{"_index":646,"title":{},"body":{"components/Login.html":{}}}],["login.scss",{"_index":647,"title":{},"body":{"components/Login.html":{}}}],["logincomponent",{"_index":274,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["los",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["low",{"_index":782,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["ltima",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["lógica",{"_index":907,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["m",{"_index":1496,"title":{},"body":{"index.html":{}}}],["management",{"_index":292,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":288,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":1264,"title":{},"body":{"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.scss",{"_index":1263,"title":{},"body":{"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":1262,"title":{},"body":{"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:14",{"_index":1265,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:18",{"_index":1339,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:19",{"_index":1332,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:21",{"_index":1266,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:26",{"_index":1338,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:40",{"_index":1337,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:63",{"_index":1336,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:70",{"_index":1334,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/task",{"_index":1261,"title":{},"body":{"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":1327,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["maneja",{"_index":589,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{}}}],["manera",{"_index":1432,"title":{},"body":{"index.html":{}}}],["mantener",{"_index":1122,"title":{},"body":{"components/RegisterComponent.html":{}}}],["marca",{"_index":581,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["marcar",{"_index":1438,"title":{},"body":{"index.html":{}}}],["margin",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["markformgrouptouched",{"_index":562,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["matching",{"_index":296,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":252,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["media",{"_index":251,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["medium",{"_index":781,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["men",{"_index":707,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["menos",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["mensaje",{"_index":570,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["menuitem",{"_index":697,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitems",{"_index":722,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["mi",{"_index":735,"title":{},"body":{"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{}}}],["min",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["mis",{"_index":725,"title":{},"body":{"interfaces/MenuItem.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["miscellaneous",{"_index":1422,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":858,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["mit",{"_index":1505,"title":{},"body":{"index.html":{}}}],["modificar",{"_index":927,"title":{},"body":{"components/ProfileComponent.html":{}}}],["modules",{"_index":1510,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostrar",{"_index":586,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["muestra",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{}}}],["más",{"_index":1508,"title":{},"body":{"index.html":{}}}],["máximo",{"_index":1091,"title":{},"body":{"components/RegisterComponent.html":{}}}],["método",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["mínimo",{"_index":634,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["name.charat(0).touppercase",{"_index":828,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["name.slice(1",{"_index":829,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["navega",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{}}}],["navegador",{"_index":1463,"title":{},"body":{"index.html":{}}}],["navigateto(route",{"_index":832,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["navigatetotasks",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{}}}],["navigatetousers",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{}}}],["new",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["newpasswordform",{"_index":968,"title":{},"body":{"components/RecoverComponent.html":{}}}],["newtask",{"_index":1185,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["newuser",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["ng",{"_index":1460,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["node",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1443,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["none",{"_index":238,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["notificaciones",{"_index":940,"title":{},"body":{"components/ProfileComponent.html":{}}}],["notificar",{"_index":941,"title":{},"body":{"components/ProfileComponent.html":{}}}],["notifydue",{"_index":873,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["notifytasks",{"_index":872,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["now",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["npm",{"_index":1445,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":534,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/TasksComponent.html":{}}}],["nuevo",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["nuevos",{"_index":1034,"title":{},"body":{"components/RegisterComponent.html":{}}}],["null",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["number",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["number:'1.0",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["number:\\'1.0",{"_index":262,"title":{},"body":{"components/AdminComponent.html":{}}}],["números",{"_index":928,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["o",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["object.entries(this.categorystats).map(([name",{"_index":826,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["object.keys(this.loginform.controls).foreach(key",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.keys(this.registerform.controls).foreach(key",{"_index":1084,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.taskform.controls).foreach(key",{"_index":620,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["object.keys(users).length",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["object.values(users).find(user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["obtiene",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["olvidaste",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["omit",{"_index":1184,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["onemailsubmit",{"_index":971,"title":{},"body":{"components/RecoverComponent.html":{}}}],["oninit",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["onpasswordsubmit",{"_index":844,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["onpersonalsubmit",{"_index":845,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["onpreferencessubmit",{"_index":846,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["onreset",{"_index":1039,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsearch(term",{"_index":820,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["onsubmit",{"_index":563,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/RegisterComponent.html":{}}}],["onverificationsubmit",{"_index":972,"title":{},"body":{"components/RecoverComponent.html":{}}}],["operativo",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["orden",{"_index":816,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["ordena",{"_index":766,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["organizada",{"_index":1434,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1500,"title":{},"body":{"index.html":{}}}],["oscuro",{"_index":939,"title":{},"body":{"components/ProfileComponent.html":{}}}],["otros",{"_index":546,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RegisterComponent.html":{}}}],["out",{"_index":1147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["outline",{"_index":1149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["overdue",{"_index":1208,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["overduetasks",{"_index":720,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["overview",{"_index":1511,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{}}}],["package",{"_index":1398,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.jsonscripts",{"_index":1479,"title":{},"body":{"index.html":{}}}],["padding",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["para",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["partial",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["parámetros",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{}}}],["password",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["password.length",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["passwordform",{"_index":841,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["passwordmatchvalidator",{"_index":847,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(g",{"_index":855,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["passwordvalidation",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["passwordvalidation.errors.join",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["passwordvalidation.isvalid",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["passwordvalidationresult",{"_index":412,"title":{"interfaces/PasswordValidationResult.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["path",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pendiente",{"_index":1322,"title":{},"body":{"components/TasksComponent.html":{}}}],["pendientes",{"_index":942,"title":{},"body":{"components/ProfileComponent.html":{},"components/TasksComponent.html":{}}}],["pending",{"_index":1199,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["pending').length",{"_index":1223,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["pendingtasks",{"_index":718,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["people",{"_index":731,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["perfil",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["permite",{"_index":1328,"title":{},"body":{"components/UserManagementComponent.html":{},"index.html":{}}}],["permiten",{"_index":921,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["pero",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":736,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["personal",{"_index":543,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/UserPreferences.html":{}}}],["personales",{"_index":1315,"title":{},"body":{"components/TasksComponent.html":{}}}],["personalform",{"_index":842,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["placeholder=\"tu",{"_index":1106,"title":{},"body":{"components/RegisterComponent.html":{}}}],["plataforma",{"_index":1128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["plus",{"_index":727,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["pointer",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["políticas",{"_index":1130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["popperjs/core",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["preferences",{"_index":860,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["preferencesform",{"_index":843,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["preferencias",{"_index":900,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["previos",{"_index":1442,"title":{},"body":{"index.html":{}}}],["primary",{"_index":212,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["principal",{"_index":706,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["prioridad",{"_index":548,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["priority",{"_index":602,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["priorityorder",{"_index":778,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["priorityorder[a.priority",{"_index":784,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["priorityorder[b.priority",{"_index":783,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["private",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["probar",{"_index":1465,"title":{},"body":{"index.html":{}}}],["profile",{"_index":275,"title":{"components/Profile.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"index.html":{}}}],["profile'},{'name",{"_index":276,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["profile.component.html",{"_index":839,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["profile.component.scss",{"_index":838,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["profile.html",{"_index":835,"title":{},"body":{"components/Profile.html":{}}}],["profile.scss",{"_index":836,"title":{},"body":{"components/Profile.html":{}}}],["profilecomponent",{"_index":277,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["properties",{"_index":40,"title":{"properties.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"properties.html":{}}}],["propiedades",{"_index":1218,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["proporcionar",{"_index":1120,"title":{},"body":{"components/RegisterComponent.html":{}}}],["provideanimations",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":317,"title":{},"body":{"injectables/Auth.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["providehttpclient",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyecto",{"_index":1226,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["prueba",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["próximas",{"_index":943,"title":{},"body":{"components/ProfileComponent.html":{}}}],["public",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["puede",{"_index":926,"title":{},"body":{"components/ProfileComponent.html":{}}}],["puedes",{"_index":1466,"title":{},"body":{"index.html":{}}}],["pull",{"_index":1501,"title":{},"body":{"index.html":{}}}],["push",{"_index":1499,"title":{},"body":{"index.html":{}}}],["que",{"_index":805,"title":{},"body":{"interfaces/MenuItem.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["quieres",{"_index":806,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["radius",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["rama",{"_index":1491,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["real",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizar",{"_index":1238,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["recibir",{"_index":1013,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recordarme",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["recover",{"_index":278,"title":{"components/Recover.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["recover'},{'name",{"_index":279,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["recover.component.html",{"_index":966,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recover.component.scss",{"_index":965,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recover.html",{"_index":962,"title":{},"body":{"components/Recover.html":{}}}],["recover.scss",{"_index":963,"title":{},"body":{"components/Recover.html":{}}}],["recovercomponent",{"_index":280,"title":{"components/RecoverComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["recoveryform",{"_index":969,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recuperación",{"_index":1436,"title":{},"body":{"index.html":{}}}],["recuperar",{"_index":1011,"title":{},"body":{"components/RecoverComponent.html":{}}}],["redirigiendo",{"_index":1081,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirigir",{"_index":612,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["reenviado",{"_index":1010,"title":{},"body":{"components/RecoverComponent.html":{}}}],["reenviar",{"_index":1009,"title":{},"body":{"components/RecoverComponent.html":{}}}],["register",{"_index":281,"title":{"components/Register.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["register'},{'name",{"_index":282,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["register(username",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["register.component.html",{"_index":1037,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1036,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.html",{"_index":1030,"title":{},"body":{"components/Register.html":{}}}],["register.scss",{"_index":1031,"title":{},"body":{"components/Register.html":{}}}],["registercomponent",{"_index":283,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1038,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registra",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["registrado",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["registrados",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["registrar",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["registrarte",{"_index":1118,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registro",{"_index":1033,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["reglas",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["rememberme",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["rendermode",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repite",{"_index":1021,"title":{},"body":{"components/RecoverComponent.html":{}}}],["repositorio",{"_index":1450,"title":{},"body":{"index.html":{}}}],["reqhandler",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requerida",{"_index":931,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{}}}],["requerido",{"_index":630,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":1502,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":1107,"title":{},"body":{"components/RegisterComponent.html":{}}}],["requiredlength",{"_index":632,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requiredrole",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisitos",{"_index":1441,"title":{},"body":{"index.html":{}}}],["resendcode",{"_index":973,"title":{},"body":{"components/RecoverComponent.html":{}}}],["reserva",{"_index":1136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetea",{"_index":1047,"title":{},"body":{"components/RegisterComponent.html":{}}}],["respetar",{"_index":1132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["responsive",{"_index":249,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["result",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result.message",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result.success",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["results",{"_index":295,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["revisar",{"_index":1232,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["rgba(0",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":234,"title":{},"body":{"components/AdminComponent.html":{}}}],["right",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{}}}],["robustas",{"_index":1035,"title":{},"body":{"components/RegisterComponent.html":{}}}],["rol",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["roleguard",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleguard(userrole.admin",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleguard(userrole.client",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":701,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["root",{"_index":298,"title":{},"body":{"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["root'},{'name",{"_index":265,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["route",{"_index":702,"title":{},"body":{"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/dashboard",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["routeroutlet",{"_index":299,"title":{},"body":{"components/App.html":{},"components/AppComponent.html":{}}}],["ruta",{"_index":830,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["rutina",{"_index":1239,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["rxjs",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["rápido",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{}}}],["s",{"_index":880,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["salud",{"_index":545,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["savetasks",{"_index":1179,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["saveusers",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveusers(users",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["se",{"_index":920,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["searchtasks",{"_index":1273,"title":{},"body":{"injectables/TaskService.html":{}}}],["searchtasks(term",{"_index":1202,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["searchterm",{"_index":716,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["secondary",{"_index":1161,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["segundos",{"_index":615,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["seguridad",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["seguro",{"_index":804,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["según",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["seleccionado",{"_index":768,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["seleccionar",{"_index":541,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["ser",{"_index":1018,"title":{},"body":{"components/RecoverComponent.html":{}}}],["serve",{"_index":1461,"title":{},"body":{"index.html":{}}}],["server",{"_index":1406,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1473,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["services/task.service",{"_index":705,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["servicio",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/UserManagementComponent.html":{}}}],["servidor",{"_index":1459,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["setcategory(category",{"_index":815,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["setfilter(filter",{"_index":812,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["setsort(sort",{"_index":817,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["settab",{"_index":848,"title":{},"body":{"components/ProfileComponent.html":{}}}],["settab(tab",{"_index":859,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["settimeout",{"_index":609,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["shadow",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["si",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["sido",{"_index":578,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["siguientes",{"_index":1467,"title":{},"body":{"index.html":{}}}],["simulado",{"_index":896,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["simulamos",{"_index":1000,"title":{},"body":{"components/RecoverComponent.html":{}}}],["simular",{"_index":607,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["sistema",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/TaskManagementComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["size",{"_index":204,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["solid",{"_index":230,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["solo",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["sort",{"_index":818,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["sorttasks",{"_index":769,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/Auth.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["speedometer2",{"_index":724,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["src",{"_index":1472,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":1424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.server.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.guard.ts",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":297,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:12",{"_index":305,"title":{},"body":{"components/App.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:18",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:20",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:22",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:29",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:43",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:53",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:60",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/task",{"_index":1260,"title":{},"body":{"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/user",{"_index":1326,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":699,"title":{},"body":{"interfaces/MenuItem.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.ts",{"_index":641,"title":{},"body":{"components/Dashboard.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:19",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:35",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:45",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:69",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:79",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:87",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.ts",{"_index":645,"title":{},"body":{"components/Login.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":837,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:103",{"_index":854,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:111",{"_index":861,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:115",{"_index":850,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:22",{"_index":865,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:23",{"_index":864,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:24",{"_index":866,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:25",{"_index":863,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:26",{"_index":867,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:27",{"_index":849,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:54",{"_index":851,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:81",{"_index":856,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:86",{"_index":853,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:94",{"_index":852,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.ts",{"_index":834,"title":{},"body":{"components/Profile.html":{},"coverage.html":{}}}],["src/app/components/recover/recover.component.ts",{"_index":964,"title":{},"body":{"components/RecoverComponent.html":{},"coverage.html":{}}}],["src/app/components/recover/recover.component.ts:15",{"_index":984,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:16",{"_index":985,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:17",{"_index":983,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:18",{"_index":981,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:19",{"_index":982,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:20",{"_index":974,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:40",{"_index":978,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:45",{"_index":975,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:55",{"_index":977,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:65",{"_index":976,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:76",{"_index":979,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.ts",{"_index":961,"title":{},"body":{"components/Recover.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1032,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:127",{"_index":1044,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:137",{"_index":1043,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:145",{"_index":1042,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:180",{"_index":1046,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:19",{"_index":1055,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:20",{"_index":1053,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:21",{"_index":1056,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:22",{"_index":1054,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:23",{"_index":1041,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:60",{"_index":1045,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:70",{"_index":1051,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:84",{"_index":1049,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:97",{"_index":1048,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.ts",{"_index":1029,"title":{},"body":{"components/Register.html":{},"coverage.html":{}}}],["src/app/components/tasks/create",{"_index":531,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/task",{"_index":1254,"title":{},"body":{"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts",{"_index":1214,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts:101",{"_index":1298,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:113",{"_index":1303,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:120",{"_index":1297,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:130",{"_index":1299,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:142",{"_index":1300,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:25",{"_index":1305,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:26",{"_index":1307,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:27",{"_index":1306,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:28",{"_index":1304,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:31",{"_index":1309,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:35",{"_index":1311,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:39",{"_index":1313,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:41",{"_index":1296,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:48",{"_index":1302,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:62",{"_index":1301,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/role.guard.ts",{"_index":1378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/auth.service.ts:109",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:141",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:183",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:211",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:221",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:228",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:235",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:243",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:250",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:257",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:298",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:36",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:38",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:39",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:83",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:91",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:98",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.ts",{"_index":315,"title":{},"body":{"injectables/Auth.html":{},"coverage.html":{}}}],["src/app/services/auth.ts:6",{"_index":316,"title":{},"body":{"injectables/Auth.html":{}}}],["src/app/services/task.service.ts",{"_index":1168,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:100",{"_index":1279,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:108",{"_index":1283,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:18",{"_index":1289,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:19",{"_index":1290,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:20",{"_index":1276,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:26",{"_index":1284,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:35",{"_index":1285,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:40",{"_index":1280,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:44",{"_index":1277,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:55",{"_index":1288,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:63",{"_index":1278,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:68",{"_index":1287,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:76",{"_index":1282,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:87",{"_index":1281,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:93",{"_index":1286,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/main.server.ts",{"_index":1390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["started",{"_index":1426,"title":{"index.html":{}},"body":{}}],["stat",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{}}}],["state",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":787,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["stats.categories",{"_index":796,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["stats.completed",{"_index":792,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["stats.overdue",{"_index":794,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["stats.pending",{"_index":790,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["status",{"_index":1215,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["step",{"_index":1022,"title":{},"body":{"components/RecoverComponent.html":{}}}],["storedtasks",{"_index":1175,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["string",{"_index":303,"title":{},"body":{"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["styleurl",{"_index":301,"title":{},"body":{"components/App.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/Profile.html":{},"components/Recover.html":{},"components/Register.html":{}}}],["styleurls",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["success",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["successmessage",{"_index":555,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["superior",{"_index":1444,"title":{},"body":{"index.html":{}}}],["sus",{"_index":1430,"title":{},"body":{"index.html":{}}}],["suscribirse",{"_index":738,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["suspender",{"_index":1138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["switch",{"_index":770,"title":{},"body":{"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["tab",{"_index":862,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["table",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["tarea",{"_index":535,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tareas",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["tasa",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{}}}],["task",{"_index":285,"title":{"interfaces/Task.html":{},"interfaces/Task-1.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":269,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["task.category",{"_index":1201,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.completed",{"_index":824,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.completed).length",{"_index":1207,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.component.ts",{"_index":533,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:133",{"_index":594,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:134",{"_index":591,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:135",{"_index":592,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:136",{"_index":566,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:152",{"_index":587,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:164",{"_index":588,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:186",{"_index":580,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:196",{"_index":575,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:204",{"_index":569,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.description",{"_index":1319,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.duedate",{"_index":1324,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.id",{"_index":1192,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.priority",{"_index":1320,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.service.ts",{"_index":1475,"title":{},"body":{"index.html":{}}}],["task.status",{"_index":1222,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["task.title",{"_index":1318,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.title.tolowercase().includes(searchterm",{"_index":1204,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task/create",{"_index":532,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["taskdetailcomponent",{"_index":284,"title":{"components/TaskDetailComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["taskflow",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["taskflow_current_user",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["taskflow_users",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["taskform",{"_index":559,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{}}}],["taskid",{"_index":1193,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["taskmanagementcomponent",{"_index":287,"title":{"components/TaskManagementComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["tasks",{"_index":711,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["tasks'},{'name",{"_index":290,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["tasks.component.html",{"_index":1216,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1217,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["tasks/create",{"_index":729,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["taskscomponent",{"_index":289,"title":{"components/TasksComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["taskservice",{"_index":704,"title":{"injectables/TaskService.html":{}},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskssubject",{"_index":1171,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tema",{"_index":937,"title":{},"body":{"components/ProfileComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["tener",{"_index":933,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{}}}],["tengo",{"_index":1117,"title":{},"body":{"components/RegisterComponent.html":{}}}],["term",{"_index":821,"title":{},"body":{"interfaces/MenuItem.html":{},"injectables/TaskService.html":{}}}],["term.tolowercase",{"_index":1203,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["termsaccepted",{"_index":1062,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":1468,"title":{},"body":{"index.html":{}}}],["test(password",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["test123",{"_index":1469,"title":{},"body":{"index.html":{}}}],["test@example.com",{"_index":1470,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1484,"title":{},"body":{"index.html":{}}}],["testusers",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["testusers.foreach(user",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["text",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["theme",{"_index":869,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.activeusers",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.authservice.hasrole(role",{"_index":746,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.authservice.isadmin",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"components/TaskManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.isclient",{"_index":604,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["this.authservice.login(username",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":917,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.authservice.register(username",{"_index":1080,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.validatepassword(password",{"_index":1069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.categorystats",{"_index":795,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.completedtasks",{"_index":791,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.currentcategory",{"_index":760,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.currentfilter",{"_index":813,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["this.currentsort",{"_index":771,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.currentstep",{"_index":1001,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.currenttab",{"_index":916,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.currentuser",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["this.currentusersubject.asobservable",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.currentusersubject.next(null",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.currentusersubject.next(updateduser",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.currentusersubject.next(userdata",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.currentusersubject.value",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.errormessage",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":597,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.filteredtasks",{"_index":764,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["this.filteredtasks.sort((a",{"_index":773,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.filtertasks(this.currentfilter",{"_index":1247,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["this.getcurrentuser",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.getoverduetasks().length",{"_index":1209,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.getusers",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.hasrole(userrole.admin",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.hasrole(userrole.client",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.initializetestusers",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.isloading",{"_index":606,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loadadminstats",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.loadtasks",{"_index":737,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["this.loaduserfromstorage",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.loadusers",{"_index":1340,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.loginform",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(fieldname",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(key",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.markformgrouptouched",{"_index":619,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.menuitems.filter(item",{"_index":744,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.newpasswordform",{"_index":991,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.newpasswordform.valid",{"_index":1006,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.overduetasks",{"_index":793,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.passwordform",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.passwordform.reset",{"_index":913,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.passwordform.valid",{"_index":911,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.passwordmatchvalidator",{"_index":891,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.passwordvalidation",{"_index":1068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.pendingtasks",{"_index":789,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.personalform",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.personalform.get('email')?.disable",{"_index":899,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.personalform.patchvalue",{"_index":894,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.personalform.valid",{"_index":904,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.preferencesform",{"_index":892,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.preferencesform.patchvalue(preferences",{"_index":901,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.preferencesform.valid",{"_index":914,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.recoveryform",{"_index":986,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.recoveryform.valid",{"_index":995,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.registerform",{"_index":1058,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.haserror('mismatch",{"_index":1076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.seterrors",{"_index":1075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.seterrors(null",{"_index":1077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.value",{"_index":1074,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.valuechanges.subscribe",{"_index":1071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.valuechanges.subscribe(password",{"_index":1067,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get(fieldname",{"_index":1086,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get(key",{"_index":1085,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.reset",{"_index":1094,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":1078,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":1079,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/admin/tasks",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.router.navigate(['/admin/users",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["this.router.navigate(['/login",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserPreferences.html":{}}}],["this.router.navigate(['/tasks",{"_index":616,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.router.navigate([route",{"_index":833,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.savetasks",{"_index":1189,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.saveusers(users",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.searchterm",{"_index":762,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.sorttasks",{"_index":765,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.successmessage",{"_index":610,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["this.taskform",{"_index":596,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.taskform.get(fieldname",{"_index":625,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get(key",{"_index":622,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.reset",{"_index":753,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskform.valid",{"_index":605,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.tasks",{"_index":748,"title":{},"body":{"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["this.tasks.filter(task",{"_index":1195,"title":{},"body":{"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["this.tasks.find(task",{"_index":1197,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.tasks.findindex(task",{"_index":1191,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.tasks.length",{"_index":1221,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["this.tasks.reduce((acc",{"_index":1211,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.tasks.unshift(newtask",{"_index":1188,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.tasks[index",{"_index":1194,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.taskservice.addtask(this.taskform.value",{"_index":752,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.deletetask(taskid",{"_index":809,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.gettasks",{"_index":749,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.gettasksbycategory(this.currentcategory",{"_index":761,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.gettasksbyfilter(this.currentfilter",{"_index":759,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.gettaskstats",{"_index":788,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.searchtasks(this.searchterm",{"_index":763,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.tasks$.subscribe",{"_index":740,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskservice.toggletaskcomplete(task.id",{"_index":800,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.taskssubject.asobservable",{"_index":1172,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.taskssubject.next(this.tasks",{"_index":1178,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.totaltasks",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.totalusers",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.updatefilteredtasks",{"_index":750,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.updatestats",{"_index":751,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["this.users",{"_index":1343,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.validatepassword(password",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["this.validatepasswordmatch",{"_index":1072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.verificationform",{"_index":987,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.verificationform.valid",{"_index":1003,"title":{},"body":{"components/RecoverComponent.html":{}}}],["tiempo",{"_index":1066,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tiene",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":243,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["tocado",{"_index":579,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tocados",{"_index":585,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["todas",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{}}}],["today",{"_index":1206,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["todos",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["toggletaskcomplete",{"_index":1274,"title":{},"body":{"injectables/TaskService.html":{}}}],["toggletaskcomplete(task",{"_index":799,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["toggletaskcomplete(taskid",{"_index":1196,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["toggletaskstatus",{"_index":1294,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggletaskstatus(task",{"_index":1246,"title":{},"body":{"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["top",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["total",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{}}}],["totaltasks",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["totalusers",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{}}}],["trabajo",{"_index":542,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["transform",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{}}}],["transition",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["translatey",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{}}}],["transparent",{"_index":231,"title":{},"body":{"components/AdminComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["tus",{"_index":1125,"title":{},"body":{"components/RegisterComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["términos",{"_index":1112,"title":{},"body":{"components/RegisterComponent.html":{}}}],["título",{"_index":536,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["un",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["underline",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["unitarios",{"_index":1485,"title":{},"body":{"index.html":{}}}],["updateduser",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata.email",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata.firstname",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata.lastname",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata.role",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updateduserdata.username",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updatefilteredtasks",{"_index":757,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["updateprofile",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(updates",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updates",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["updatestats",{"_index":786,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["updatetask",{"_index":1275,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(taskid",{"_index":1190,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["url_del_repositorio",{"_index":1454,"title":{},"body":{"index.html":{}}}],["usar",{"_index":1127,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["used",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":81,"title":{"interfaces/User.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["user.email",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["user.firstname",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["user.lastname",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["user.password",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["user.role",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["user.username",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["userdata",{"_index":424,"title":{"interfaces/UserData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userjson",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["usermanagementcomponent",{"_index":291,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["userpreferences",{"_index":868,"title":{"interfaces/UserPreferences.html":{}},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{},"coverage.html":{}}}],["userrole",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["userrole.client",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["users",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{}}}],["users[currentuser.username",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["users[user.username",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["users[username",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["users_key",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["usersjson",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["usuario",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["utilidad",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["v1.0.0",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["valid]=\"!haserror('password",{"_index":1102,"title":{},"body":{"components/RegisterComponent.html":{}}}],["valid]=\"!haserror(\\'password",{"_index":1166,"title":{},"body":{"components/RegisterComponent.html":{}}}],["valida",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["validaciones",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validación",{"_index":1065,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validador",{"_index":1050,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validar",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["validatepassword",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepassword(password",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["validatepasswordmatch",{"_index":1040,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validator",{"_index":890,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators",{"_index":595,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.email",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.maxlength(20",{"_index":1061,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(50",{"_index":1060,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":600,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(2",{"_index":1059,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":599,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.minlength(4",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.minlength(6",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(8",{"_index":888,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.pattern('[a",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.pattern('^[0",{"_index":989,"title":{},"body":{"components/RecoverComponent.html":{}}}],["validators.required",{"_index":598,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["validators.requiredtrue",{"_index":1063,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":260,"title":{},"body":{"components/AdminComponent.html":{},"components/App.html":{},"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/Dashboard.html":{},"components/Login.html":{},"components/LoginComponent.html":{},"components/Profile.html":{},"components/ProfileComponent.html":{},"components/Recover.html":{},"components/RecoverComponent.html":{},"components/Register.html":{},"components/RegisterComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vence",{"_index":1323,"title":{},"body":{"components/TasksComponent.html":{}}}],["vencer",{"_index":944,"title":{},"body":{"components/ProfileComponent.html":{}}}],["vencida",{"_index":822,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["vencimiento",{"_index":553,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["vendría",{"_index":1342,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["vendrían",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{}}}],["ver",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["veraz",{"_index":1121,"title":{},"body":{"components/RegisterComponent.html":{}}}],["verifica",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["verificación",{"_index":998,"title":{},"body":{"components/RecoverComponent.html":{}}}],["verificado",{"_index":1005,"title":{},"body":{"components/RecoverComponent.html":{}}}],["verificar",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PasswordValidationResult.html":{},"components/RecoverComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["verification",{"_index":980,"title":{},"body":{"components/RecoverComponent.html":{}}}],["verificationform",{"_index":970,"title":{},"body":{"components/RecoverComponent.html":{}}}],["version",{"_index":1513,"title":{},"body":{"properties.html":{}}}],["versión",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["violen",{"_index":1140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["void",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PasswordValidationResult.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task.html":{},"interfaces/Task-1.html":{},"components/TaskManagementComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserManagementComponent.html":{},"interfaces/UserPreferences.html":{}}}],["volver",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"components/RecoverComponent.html":{},"components/TaskDetailComponent.html":{},"components/TaskManagementComponent.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{}}}],["válido",{"_index":1016,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["warning",{"_index":220,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{}}}],["web",{"_index":1427,"title":{},"body":{"index.html":{}}}],["weight",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/RegisterComponent.html":{}}}],["white",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["width",{"_index":197,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["works",{"_index":644,"title":{},"body":{"components/Dashboard.html":{},"components/Login.html":{},"components/Profile.html":{},"components/Recover.html":{},"components/Register.html":{}}}],["y",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuItem.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Task-1.html":{},"components/TasksComponent.html":{},"components/UserManagementComponent.html":{},"index.html":{}}}],["ya",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/PasswordValidationResult.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["yes",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["z",{"_index":879,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UserPreferences.html":{}}}],["z0",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["za",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserPreferences.html":{}}}],["zone.js",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente del panel de administración\nMuestra estadísticas generales y acceso a funciones administrativas\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeUsers\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                now\n                            \n                            \n                                totalTasks\n                            \n                            \n                                totalUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAdminStats\n                            \n                            \n                                navigateToTasks\n                            \n                            \n                                navigateToUsers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadAdminStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadAdminStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Carga las estadísticas administrativas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToTasks\n                        \n                    \n                \n            \n            \n                \nnavigateToTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Navega a la gestión de tareas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToUsers\n                        \n                    \n                \n            \n            \n                \nnavigateToUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Navega a la gestión de usuarios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        now\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User, UserRole } from '../../services/auth.service';\n\n/**\n * Componente del panel de administración\n * Muestra estadísticas generales y acceso a funciones administrativas\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class AdminComponent implements OnInit {\n  public now = new Date();\n  currentUser: User | null = null;\n  totalUsers: number = 0;\n  totalTasks: number = 0;\n  activeUsers: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isAdmin()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.loadAdminStats();\n  }\n\n  /**\n   * Carga las estadísticas administrativas\n   */\n  private loadAdminStats(): void {\n    // En una aplicación real, estos datos vendrían de un servicio\n    this.totalUsers = 25;\n    this.totalTasks = 150;\n    this.activeUsers = 18;\n  }\n\n  /**\n   * Navega a la gestión de usuarios\n   */\n  navigateToUsers(): void {\n    this.router.navigate(['/admin/users']);\n  }\n\n  /**\n   * Navega a la gestión de tareas\n   */\n  navigateToTasks(): void {\n    this.router.navigate(['/admin/tasks']);\n  }\n} \n    \n\n    \n        \n  \n    Panel de Administración\n    Bienvenido, {{ currentUser?.firstName }} {{ currentUser?.lastName }}\n  \n\n  \n    \n    \n      \n        \n          \n        \n        \n          {{ totalUsers }}\n          Total de Usuarios\n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ activeUsers }}\n          Usuarios Activos\n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ totalTasks }}\n          Total de Tareas\n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ (activeUsers / totalUsers * 100) | number:'1.0-0' }}%\n          Tasa de Actividad\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Acciones Administrativas\n          \n            \n              \n                \n                  \n                \n                Gestión de Usuarios\n                Administrar usuarios del sistema\n              \n            \n            \n              \n                \n                  \n                \n                Gestión de Tareas\n                Ver y administrar todas las tareas\n              \n            \n            \n              \n                \n                  \n                \n                Configuración\n                Configurar parámetros del sistema\n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Información del Sistema\n        \n        \n          \n            \n              Versión de la Aplicación\n              TaskFlow v1.0.0\n              \n              Última Actualización\n              {{ now | date:'dd/MM/yyyy HH:mm' }}\n            \n            \n              Estado del Sistema\n              Operativo\n              \n              Base de Datos\n              Conectado\n            \n          \n        \n      \n    \n\n    \n      \n        \n          Acceso Rápido\n        \n        \n          \n            \n              Gestionar Usuarios\n            \n            \n              Gestionar Tareas\n            \n            \n              Volver al Dashboard\n            \n          \n        \n      \n    \n  \n \n    \n\n    \n                \n                    ./admin.component.scss\n                \n                .admin-container {\n  padding: 2rem;\n  background-color: #f8f9fa;\n  min-height: 100vh;\n}\n\n.admin-header {\n  margin-bottom: 2rem;\n  \n  h1 {\n    color: #333;\n    font-weight: 700;\n    margin-bottom: 0.5rem;\n  }\n}\n\n.admin-stat-card {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  display: flex;\n  align-items: center;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  .stat-icon {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 1rem;\n    font-size: 1.5rem;\n    color: white;\n  }\n\n  .stat-content {\n    h3 {\n      font-size: 2rem;\n      font-weight: bold;\n      margin: 0;\n      line-height: 1;\n    }\n\n    p {\n      margin: 0;\n      color: #6c757d;\n      font-size: 0.875rem;\n    }\n  }\n\n  &.admin-stat-primary {\n    .stat-icon {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    }\n    .stat-content h3 {\n      color: #667eea;\n    }\n  }\n\n  &.admin-stat-success {\n    .stat-icon {\n      background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);\n    }\n    .stat-content h3 {\n      color: #11998e;\n    }\n  }\n\n  &.admin-stat-warning {\n    .stat-icon {\n      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n    }\n    .stat-content h3 {\n      color: #f5576c;\n    }\n  }\n\n  &.admin-stat-info {\n    .stat-icon {\n      background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n    }\n    .stat-content h3 {\n      color: #4facfe;\n    }\n  }\n}\n\n.admin-action-card {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  text-align: center;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  border: 2px solid transparent;\n\n  &:hover {\n    transform: translateY(-5px);\n    border-color: #667eea;\n    box-shadow: 0 8px 15px rgba(0,0,0,0.2);\n  }\n\n  .action-icon {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto 1rem;\n    font-size: 1.5rem;\n    color: white;\n  }\n\n  h6 {\n    color: #333;\n    font-weight: 600;\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    margin: 0;\n    font-size: 0.875rem;\n  }\n}\n\n.card {\n  border: none;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  margin-bottom: 1.5rem;\n\n  .card-header {\n    background: white;\n    border-bottom: 1px solid #e9ecef;\n    border-radius: 12px 12px 0 0 !important;\n    padding: 1.25rem 1.5rem;\n\n    .card-title {\n      color: #333;\n      font-weight: 600;\n    }\n  }\n\n  .card-body {\n    padding: 1.5rem;\n  }\n}\n\n.btn {\n  border-radius: 8px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n  }\n}\n\n.badge {\n  border-radius: 6px;\n  font-weight: 500;\n  padding: 0.5rem 0.75rem;\n}\n\n// Responsive Design\n@media (max-width: 767.98px) {\n  .admin-container {\n    padding: 1rem;\n  }\n\n  .admin-stat-card {\n    margin-bottom: 1rem;\n    \n    .stat-icon {\n      width: 50px;\n      height: 50px;\n      font-size: 1.2rem;\n    }\n\n    .stat-content h3 {\n      font-size: 1.5rem;\n    }\n  }\n\n  .admin-action-card {\n    margin-bottom: 1rem;\n  }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Panel de Administración    Bienvenido, {{ currentUser?.firstName }} {{ currentUser?.lastName }}                                                              {{ totalUsers }}          Total de Usuarios                                                                        {{ activeUsers }}          Usuarios Activos                                                                        {{ totalTasks }}          Total de Tareas                                                                        {{ (activeUsers / totalUsers * 100) | number:\\'1.0-0\\' }}%          Tasa de Actividad                                                    Acciones Administrativas                                                                                                      Gestión de Usuarios                Administrar usuarios del sistema                                                                                                                      Gestión de Tareas                Ver y administrar todas las tareas                                                                                                                      Configuración                Configurar parámetros del sistema                                                                                        Información del Sistema                                                    Versión de la Aplicación              TaskFlow v1.0.0                            Última Actualización              {{ now | date:\\'dd/MM/yyyy HH:mm\\' }}                                      Estado del Sistema              Operativo                            Base de Datos              Conectado                                                                    Acceso Rápido                                                    Gestionar Usuarios                                      Gestionar Tareas                                      Volver al Dashboard                                           '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'taskflow-angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  title = 'taskflow-angular';\n}\n\n    \n\n    \n        Hello, {{ title }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hello, {{ title }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TaskFlow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule, FormsModule, ReactiveFormsModule],\n  template: ''\n})\nexport class AppComponent {\n  title = 'TaskFlow';\n} \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Auth.html":{"url":"injectables/Auth.html","title":"injectable - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Auth {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CURRENT_USER_KEY\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                USERS_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debugUsers\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                hasRole\n                            \n                            \n                                    Private\n                                initializeTestUsers\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isClient\n                            \n                            \n                                    Private\n                                loadUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                saveUsers\n                            \n                            \n                                updateProfile\n                            \n                            \n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debugUsers\n                        \n                    \n                \n            \n            \n                \ndebugUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:298\n                        \n                    \n\n\n            \n                \n                        Método de utilidad para ver los usuarios registrados (solo para desarrollo)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario actual\n\n\n                        \n                            Returns :         User | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios del almacenamiento local\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasRole\n                        \n                    \n                \n            \n            \n                \nhasRole(role: UserRole)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:235\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual tiene un rol específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            UserRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeTestUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeTestUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Inicializa usuarios de prueba para desarrollo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:243\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:221\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está autenticado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isClient\n                        \n                    \n                \n            \n            \n                \nisClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:250\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es cliente\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUserFromStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUserFromStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Carga el usuario actual desde el almacenamiento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string, rememberMe: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:183\n                        \n                    \n\n\n            \n                \n                        Inicia sesión de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rememberMe\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(username: string, email: string, password: string, firstName?: string, lastName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUsers(users: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Guarda los usuarios en el almacenamiento local\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(updates: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:257\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updates\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePassword\n                        \n                    \n                \n            \n            \n                \nvalidatePassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Valida la contraseña según las reglas de seguridad\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PasswordValidationResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CURRENT_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'taskflow_current_user'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        USERS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'taskflow_users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface User {\n  username: string;\n  email: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface UserData {\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  CLIENT = 'client'\n}\n\nexport interface PasswordValidationResult {\n  isValid: boolean;\n  errors: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n  private readonly USERS_KEY = 'taskflow_users';\n  private readonly CURRENT_USER_KEY = 'taskflow_current_user';\n\n  constructor(private router: Router) {\n    this.initializeTestUsers();\n    this.loadUserFromStorage();\n  }\n\n  /**\n   * Inicializa usuarios de prueba para desarrollo\n   */\n  private initializeTestUsers(): void {\n    const users = this.getUsers();\n    if (Object.keys(users).length === 0) {\n      const testUsers: UserData[] = [\n        {\n          username: 'admin',\n          email: 'admin@taskflow.com',\n          password: 'Admin123!',\n          role: UserRole.ADMIN,\n          firstName: 'Administrador',\n          lastName: 'Sistema'\n        },\n        {\n          username: 'client',\n          email: 'client@taskflow.com',\n          password: 'Client123!',\n          role: UserRole.CLIENT,\n          firstName: 'Cliente',\n          lastName: 'Demo'\n        }\n      ];\n\n      testUsers.forEach(user => {\n        users[user.username] = user;\n      });\n      \n      this.saveUsers(users);\n      console.log('Usuarios de prueba creados:', testUsers);\n    }\n  }\n\n  /**\n   * Obtiene todos los usuarios del almacenamiento local\n   */\n  private getUsers(): { [key: string]: UserData } {\n    const usersJson = localStorage.getItem(this.USERS_KEY);\n    return usersJson ? JSON.parse(usersJson) : {};\n  }\n\n  /**\n   * Guarda los usuarios en el almacenamiento local\n   */\n  private saveUsers(users: { [key: string]: UserData }): void {\n    localStorage.setItem(this.USERS_KEY, JSON.stringify(users));\n  }\n\n  /**\n   * Carga el usuario actual desde el almacenamiento\n   */\n  private loadUserFromStorage(): void {\n    const userJson = localStorage.getItem(this.CURRENT_USER_KEY);\n    if (userJson) {\n      const userData: User = JSON.parse(userJson);\n      this.currentUserSubject.next(userData);\n    }\n  }\n\n  /**\n   * Valida la contraseña según las reglas de seguridad\n   */\n  validatePassword(password: string): PasswordValidationResult {\n    const errors: string[] = [];\n    \n    if (password.length ]/.test(password)) {\n      errors.push('La contraseña debe contener al menos un carácter especial');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Registra un nuevo usuario\n   */\n  register(username: string, email: string, password: string, firstName?: string, lastName?: string): { success: boolean; message: string } {\n    console.log('Intentando registrar usuario:', { username, email });\n    const users = this.getUsers();\n\n    // Verificar si el usuario ya existe\n    if (users[username]) {\n      return { success: false, message: 'El nombre de usuario ya existe' };\n    }\n\n    // Verificar si el email ya existe\n    const existingUser = Object.values(users).find(user => user.email === email);\n    if (existingUser) {\n      return { success: false, message: 'El email ya está registrado' };\n    }\n\n    // Validar contraseña\n    const passwordValidation = this.validatePassword(password);\n    if (!passwordValidation.isValid) {\n      return { success: false, message: passwordValidation.errors.join(', ') };\n    }\n\n    // Crear nuevo usuario con rol por defecto\n    const newUser: UserData = {\n      username,\n      email,\n      password,\n      role: UserRole.CLIENT, // Por defecto es cliente\n      firstName,\n      lastName\n    };\n\n    // Guardar el nuevo usuario\n    users[username] = newUser;\n    this.saveUsers(users);\n    console.log('Usuario registrado exitosamente');\n\n    return { success: true, message: 'Usuario registrado exitosamente' };\n  }\n\n  /**\n   * Inicia sesión de un usuario\n   */\n  login(username: string, password: string, rememberMe: boolean): { success: boolean; message: string } {\n    console.log('Intentando iniciar sesión:', username);\n    const users = this.getUsers();\n    const user = users[username];\n\n    if (user && user.password === password) {\n      const userData: User = {\n        username: user.username,\n        email: user.email,\n        role: user.role,\n        firstName: user.firstName,\n        lastName: user.lastName\n      };\n\n      // Guardar usuario actual\n      localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(userData));\n      this.currentUserSubject.next(userData);\n      console.log('Inicio de sesión exitoso');\n      return { success: true, message: 'Inicio de sesión exitoso' };\n    }\n\n    console.log('Inicio de sesión fallido');\n    return { success: false, message: 'Usuario o contraseña incorrectos' };\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    localStorage.removeItem(this.CURRENT_USER_KEY);\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n    console.log('Sesión cerrada');\n  }\n\n  /**\n   * Verifica si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtiene el usuario actual\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Verifica si el usuario actual tiene un rol específico\n   */\n  hasRole(role: UserRole): boolean {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.role === role;\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   */\n  isAdmin(): boolean {\n    return this.hasRole(UserRole.ADMIN);\n  }\n\n  /**\n   * Verifica si el usuario actual es cliente\n   */\n  isClient(): boolean {\n    return this.hasRole(UserRole.CLIENT);\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   */\n  updateProfile(updates: Partial): { success: boolean; message: string } {\n    const currentUser = this.getCurrentUser();\n    if (!currentUser) {\n      return { success: false, message: 'No hay usuario autenticado' };\n    }\n\n    const users = this.getUsers();\n    const userData = users[currentUser.username];\n    \n    if (!userData) {\n      return { success: false, message: 'Usuario no encontrado' };\n    }\n\n    // Actualizar datos del usuario\n    const updatedUserData: UserData = {\n      ...userData,\n      ...updates\n    };\n\n    // Actualizar en almacenamiento\n    users[currentUser.username] = updatedUserData;\n    this.saveUsers(users);\n\n    // Actualizar usuario actual\n    const updatedUser: User = {\n      username: updatedUserData.username,\n      email: updatedUserData.email,\n      role: updatedUserData.role,\n      firstName: updatedUserData.firstName,\n      lastName: updatedUserData.lastName\n    };\n\n    localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(updatedUser));\n    this.currentUserSubject.next(updatedUser);\n\n    return { success: true, message: 'Perfil actualizado exitosamente' };\n  }\n\n  /**\n   * Método de utilidad para ver los usuarios registrados (solo para desarrollo)\n   */\n  debugUsers(): void {\n    console.log('Usuarios registrados:', this.getUsers());\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tasks/create-task/create-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n          Crear Nueva Tarea\n        \n        \n          \n            \n              Título de la Tarea\n              \n              \n                {{ getErrorMessage('title') }}\n              \n            \n\n            \n              Descripción\n              \n              \n                {{ getErrorMessage('description') }}\n              \n            \n\n            \n              \n                Categoría\n                \n                  Seleccionar categoría\n                  Trabajo\n                  Personal\n                  Estudio\n                  Salud\n                  Otros\n                \n                \n                  {{ getErrorMessage('category') }}\n                \n              \n\n              \n                Prioridad\n                \n                  Seleccionar prioridad\n                  Alta\n                  Media\n                  Baja\n                \n                \n                  {{ getErrorMessage('priority') }}\n                \n              \n            \n\n            \n              Fecha de Vencimiento\n              \n              \n                {{ getErrorMessage('dueDate') }}\n              \n            \n\n            \n              \n              {{ successMessage }}\n            \n\n            \n              \n                \n                \n                {{ isLoading ? 'Creando...' : 'Crear Tarea' }}\n              \n              \n                Cancelar\n              \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isLoading\n                            \n                            \n                                successMessage\n                            \n                            \n                                taskForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                hasError\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tasks/create-task/create-task.component.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/create-task/create-task.component.ts:204\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/create-task/create-task.component.ts:196\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo tiene errores y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/create-task/create-task.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Marca todos los campos del formulario como tocados para mostrar errores\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/create-task/create-task.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/create-task/create-task.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/create-task/create-task.component.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/create-task/create-task.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/create-task/create-task.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/create-task/create-task.component.ts:133\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-create-task',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule],\n  template: `\n    \n      \n        \n          \n            \n              Crear Nueva Tarea\n            \n            \n              \n                \n                  Título de la Tarea\n                  \n                  \n                    {{ getErrorMessage('title') }}\n                  \n                \n\n                \n                  Descripción\n                  \n                  \n                    {{ getErrorMessage('description') }}\n                  \n                \n\n                \n                  \n                    Categoría\n                    \n                      Seleccionar categoría\n                      Trabajo\n                      Personal\n                      Estudio\n                      Salud\n                      Otros\n                    \n                    \n                      {{ getErrorMessage('category') }}\n                    \n                  \n\n                  \n                    Prioridad\n                    \n                      Seleccionar prioridad\n                      Alta\n                      Media\n                      Baja\n                    \n                    \n                      {{ getErrorMessage('priority') }}\n                    \n                  \n                \n\n                \n                  Fecha de Vencimiento\n                  \n                  \n                    {{ getErrorMessage('dueDate') }}\n                  \n                \n\n                \n                  \n                  {{ successMessage }}\n                \n\n                \n                  \n                    \n                    \n                    {{ isLoading ? 'Creando...' : 'Crear Tarea' }}\n                  \n                  \n                    Cancelar\n                  \n                \n              \n            \n          \n        \n      \n    \n  `\n})\nexport class CreateTaskComponent implements OnInit {\n  taskForm: FormGroup;\n  currentUser: User | null = null;\n  isLoading: boolean = false;\n  successMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', [Validators.required, Validators.minLength(10)]],\n      category: ['', [Validators.required]],\n      priority: ['', [Validators.required]],\n      dueDate: ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isClient()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario\n   */\n  onSubmit(): void {\n    if (this.taskForm.valid) {\n      this.isLoading = true;\n      \n      // Simular creación de tarea\n      setTimeout(() => {\n        this.successMessage = 'Tarea creada exitosamente';\n        this.isLoading = false;\n        \n        // Redirigir después de 2 segundos\n        setTimeout(() => {\n          this.router.navigate(['/tasks']);\n        }, 2000);\n      }, 1000);\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  /**\n   * Marca todos los campos del formulario como tocados para mostrar errores\n   */\n  private markFormGroupTouched(): void {\n    Object.keys(this.taskForm.controls).forEach(key => {\n      const control = this.taskForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene errores y ha sido tocado\n   */\n  hasError(fieldName: string): boolean {\n    const field = this.taskForm.get(fieldName);\n    return !!(field?.invalid && field?.touched);\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo específico\n   */\n  getErrorMessage(fieldName: string): string {\n    const field = this.taskForm.get(fieldName);\n    \n    if (field?.hasError('required')) {\n      return 'Este campo es requerido';\n    }\n    \n    if (field?.hasError('minlength')) {\n      const requiredLength = field.getError('minlength').requiredLength;\n      return `Mínimo ${requiredLength} caracteres`;\n    }\n    \n    return '';\n  }\n} \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Crear Nueva Tarea                                                    Título de la Tarea                                            {{ getErrorMessage(\\'title\\') }}                                                    Descripción                                            {{ getErrorMessage(\\'description\\') }}                                                                    Categoría                                  Seleccionar categoría                  Trabajo                  Personal                  Estudio                  Salud                  Otros                                                  {{ getErrorMessage(\\'category\\') }}                                                            Prioridad                                  Seleccionar prioridad                  Alta                  Media                  Baja                                                  {{ getErrorMessage(\\'priority\\') }}                                                                    Fecha de Vencimiento                                            {{ getErrorMessage(\\'dueDate\\') }}                                                                  {{ successMessage }}                                                                                      {{ isLoading ? \\'Creando...\\' : \\'Crear Tarea\\' }}                                            Cancelar                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Dashboard.html":{"url":"components/Dashboard.html","title":"component - Dashboard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Dashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  imports: [],\n  templateUrl: './dashboard.html',\n  styleUrl: './dashboard.scss'\n})\nexport class Dashboard {\n\n}\n\n    \n\n    \n        dashboard works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Dashboard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Login.html":{"url":"components/Login.html","title":"component - Login","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n            \n                styleUrl\n                ./login.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  imports: [],\n  templateUrl: './login.html',\n  styleUrl: './login.scss'\n})\nexport class Login {\n\n}\n\n    \n\n    \n        login works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'login works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Login'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de inicio de sesión\nManeja la autenticación de usuarios con validaciones\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                hasError\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo tiene errores y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Marca todos los campos del formulario como tocados para mostrar errores\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * Componente de inicio de sesión\n * Maneja la autenticación de usuarios con validaciones\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule]\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errorMessage: string = '';\n  isLoading: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      rememberMe: [false]\n    });\n  }\n\n  ngOnInit(): void {\n    // Si ya está autenticado, redirigir al dashboard\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de login\n   */\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      \n      const { username, password, rememberMe } = this.loginForm.value;\n      \n      const result = this.authService.login(username, password, rememberMe);\n      \n      if (result.success) {\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.errorMessage = result.message;\n      }\n      \n      this.isLoading = false;\n    } else {\n      this.markFormGroupTouched();\n    }\n  }\n\n  /**\n   * Marca todos los campos del formulario como tocados para mostrar errores\n   */\n  private markFormGroupTouched(): void {\n    Object.keys(this.loginForm.controls).forEach(key => {\n      const control = this.loginForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene errores y ha sido tocado\n   */\n  hasError(fieldName: string): boolean {\n    const field = this.loginForm.get(fieldName);\n    return !!(field?.invalid && field?.touched);\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo específico\n   */\n  getErrorMessage(fieldName: string): string {\n    const field = this.loginForm.get(fieldName);\n    \n    if (field?.hasError('required')) {\n      return 'Este campo es requerido';\n    }\n    \n    if (field?.hasError('minlength')) {\n      const requiredLength = field.getError('minlength').requiredLength;\n      return `Mínimo ${requiredLength} caracteres`;\n    }\n    \n    return '';\n  }\n} \n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              TaskFlow\n              Inicia sesión en tu cuenta\n            \n            \n            \n              \n                Usuario\n                \n                \n                  {{ getErrorMessage('username') }}\n                \n              \n              \n              \n                Contraseña\n                \n                \n                  {{ getErrorMessage('password') }}\n                \n              \n\n              \n                \n                  \n                  Recordarme\n                \n                ¿Olvidaste tu contraseña?\n              \n\n              \n                \n                  \n                  \n                  {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\n                \n                \n                  Crear Cuenta\n                \n              \n            \n            \n            \n              \n              {{ errorMessage }}\n            \n            \n            \n            \n              Usuarios de prueba:\n              \n                \n                  Admin:\n                  Usuario: admin\n                  Contraseña: Admin123!\n                \n                \n                  Cliente:\n                  Usuario: client\n                  Contraseña: Client123!\n                \n              \n            \n          \n        \n      \n    \n  \n \n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-container {\n  max-width: 400px;\n  margin: 2rem auto;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  background-color: white;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n\n  .form-group {\n    margin-bottom: 1rem;\n  }\n\n  .btn-primary {\n    width: 100%;\n    margin-top: 1rem;\n  }\n\n  .links {\n    margin-top: 1rem;\n    text-align: center;\n\n    a {\n      color: #007bff;\n      text-decoration: none;\n      margin: 0 0.5rem;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        TaskFlow              Inicia sesión en tu cuenta                                                                  Usuario                                                  {{ getErrorMessage(\\'username\\') }}                                                                          Contraseña                                                  {{ getErrorMessage(\\'password\\') }}                                                                                                Recordarme                                ¿Olvidaste tu contraseña?                                                                                                  {{ isLoading ? \\'Iniciando sesión...\\' : \\'Iniciar Sesión\\' }}                                                  Crear Cuenta                                                                                              {{ errorMessage }}                                                              Usuarios de prueba:                                                Admin:                  Usuario: admin                  Contraseña: Admin123!                                                  Cliente:                  Usuario: client                  Contraseña: Client123!                                                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dashboard/dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { AuthService, User, UserRole } from '../../services/auth.service';\nimport { TaskService, Task } from '../../services/task.service';\n\ninterface MenuItem {\n  label: string;\n  icon: string;\n  route: string;\n  roles: UserRole[];\n}\n\n/**\n * Componente principal del dashboard\n * Muestra el menú dinámico según el rol del usuario y las estadísticas\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule, DatePipe]\n})\nexport class DashboardComponent implements OnInit {\n  taskForm: FormGroup;\n  tasks: Task[] = [];\n  filteredTasks: Task[] = [];\n  currentFilter: string = 'all';\n  currentCategory: string = 'all';\n  currentSort: string = 'date';\n  searchTerm: string = '';\n  currentUser: User | null = null;\n  isMenuCollapsed: boolean = false;\n\n  // Estadísticas\n  pendingTasks: number = 0;\n  completedTasks: number = 0;\n  overdueTasks: number = 0;\n  categoryStats: { [key: string]: number } = {};\n\n  // Menú dinámico según rol\n  menuItems: MenuItem[] = [\n    {\n      label: 'Dashboard',\n      icon: 'bi bi-speedometer2',\n      route: '/dashboard',\n      roles: [UserRole.ADMIN, UserRole.CLIENT]\n    },\n    {\n      label: 'Mis Tareas',\n      icon: 'bi bi-list-task',\n      route: '/tasks',\n      roles: [UserRole.CLIENT]\n    },\n    {\n      label: 'Crear Tarea',\n      icon: 'bi bi-plus-circle',\n      route: '/tasks/create',\n      roles: [UserRole.CLIENT]\n    },\n    {\n      label: 'Panel Admin',\n      icon: 'bi bi-gear',\n      route: '/admin',\n      roles: [UserRole.ADMIN]\n    },\n    {\n      label: 'Gestión Usuarios',\n      icon: 'bi bi-people',\n      route: '/admin/users',\n      roles: [UserRole.ADMIN]\n    },\n    {\n      label: 'Gestión Tareas',\n      icon: 'bi bi-kanban',\n      route: '/admin/tasks',\n      roles: [UserRole.ADMIN]\n    },\n    {\n      label: 'Mi Perfil',\n      icon: 'bi bi-person',\n      route: '/profile',\n      roles: [UserRole.ADMIN, UserRole.CLIENT]\n    }\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private taskService: TaskService\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      priority: ['', [Validators.required]],\n      dueDate: ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    if (!this.currentUser) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    this.loadTasks();\n\n    // Suscribirse a los cambios en las tareas\n    this.taskService.tasks$.subscribe(() => {\n      this.loadTasks();\n    });\n  }\n\n  /**\n   * Obtiene los elementos del menú filtrados por el rol del usuario actual\n   */\n  getMenuItems(): MenuItem[] {\n    return this.menuItems.filter(item => \n      item.roles.includes(this.currentUser?.role || UserRole.CLIENT)\n    );\n  }\n\n  /**\n   * Verifica si el usuario actual tiene un rol específico\n   */\n  hasRole(role: UserRole): boolean {\n    return this.authService.hasRole(role);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   */\n  isAdmin(): boolean {\n    return this.authService.isAdmin();\n  }\n\n  /**\n   * Verifica si el usuario actual es cliente\n   */\n  isClient(): boolean {\n    return this.authService.isClient();\n  }\n\n  /**\n   * Carga las tareas del usuario\n   */\n  loadTasks(): void {\n    this.tasks = this.taskService.getTasks();\n    this.updateFilteredTasks();\n    this.updateStats();\n  }\n\n  /**\n   * Maneja el envío del formulario de nueva tarea\n   */\n  onSubmit(): void {\n    if (this.taskForm.valid) {\n      this.taskService.addTask(this.taskForm.value);\n      this.taskForm.reset();\n    }\n  }\n\n  /**\n   * Actualiza las tareas filtradas según los criterios actuales\n   */\n  updateFilteredTasks(): void {\n    let filtered = this.taskService.getTasksByFilter(this.currentFilter);\n    \n    if (this.currentCategory !== 'all') {\n      filtered = this.taskService.getTasksByCategory(this.currentCategory);\n    }\n    \n    if (this.searchTerm) {\n      filtered = this.taskService.searchTasks(this.searchTerm);\n    }\n\n    this.filteredTasks = filtered;\n    this.sortTasks();\n  }\n\n  /**\n   * Ordena las tareas según el criterio seleccionado\n   */\n  sortTasks(): void {\n    switch (this.currentSort) {\n      case 'date':\n        this.filteredTasks.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n        break;\n      case 'priority':\n        const priorityOrder = { high: 3, medium: 2, low: 1 };\n        this.filteredTasks.sort((a, b) => priorityOrder[b.priority] - priorityOrder[a.priority]);\n        break;\n      case 'category':\n        this.filteredTasks.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n    }\n  }\n\n  /**\n   * Actualiza las estadísticas de las tareas\n   */\n  updateStats(): void {\n    const stats = this.taskService.getTaskStats();\n    this.pendingTasks = stats.pending;\n    this.completedTasks = stats.completed;\n    this.overdueTasks = stats.overdue;\n    this.categoryStats = stats.categories;\n  }\n\n  /**\n   * Cambia el estado de completado de una tarea\n   */\n  toggleTaskComplete(task: Task): void {\n    this.taskService.toggleTaskComplete(task.id);\n  }\n\n  /**\n   * Elimina una tarea\n   */\n  deleteTask(taskId: number): void {\n    if (confirm('¿Estás seguro de que quieres eliminar esta tarea?')) {\n      this.taskService.deleteTask(taskId);\n    }\n  }\n\n  /**\n   * Establece el filtro de tareas\n   */\n  setFilter(filter: string): void {\n    this.currentFilter = filter;\n    this.updateFilteredTasks();\n  }\n\n  /**\n   * Establece la categoría de filtro\n   */\n  setCategory(category: string): void {\n    this.currentCategory = category;\n    this.updateFilteredTasks();\n  }\n\n  /**\n   * Establece el orden de las tareas\n   */\n  setSort(sort: string): void {\n    this.currentSort = sort;\n    this.sortTasks();\n  }\n\n  /**\n   * Maneja la búsqueda de tareas\n   */\n  onSearch(term: string): void {\n    this.searchTerm = term;\n    this.updateFilteredTasks();\n  }\n\n  /**\n   * Verifica si una tarea está vencida\n   */\n  isOverdue(task: Task): boolean {\n    return !task.completed && new Date(task.dueDate)  {\n    return Object.entries(this.categoryStats).map(([name, count]) => ({\n      name: name.charAt(0).toUpperCase() + name.slice(1),\n      count\n    }));\n  }\n\n  /**\n   * Navega a una ruta específica\n   */\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordValidationResult.html":{"url":"interfaces/PasswordValidationResult.html","title":"interface - PasswordValidationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordValidationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            isValid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isValid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isValid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface User {\n  username: string;\n  email: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface UserData {\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  CLIENT = 'client'\n}\n\nexport interface PasswordValidationResult {\n  isValid: boolean;\n  errors: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n  private readonly USERS_KEY = 'taskflow_users';\n  private readonly CURRENT_USER_KEY = 'taskflow_current_user';\n\n  constructor(private router: Router) {\n    this.initializeTestUsers();\n    this.loadUserFromStorage();\n  }\n\n  /**\n   * Inicializa usuarios de prueba para desarrollo\n   */\n  private initializeTestUsers(): void {\n    const users = this.getUsers();\n    if (Object.keys(users).length === 0) {\n      const testUsers: UserData[] = [\n        {\n          username: 'admin',\n          email: 'admin@taskflow.com',\n          password: 'Admin123!',\n          role: UserRole.ADMIN,\n          firstName: 'Administrador',\n          lastName: 'Sistema'\n        },\n        {\n          username: 'client',\n          email: 'client@taskflow.com',\n          password: 'Client123!',\n          role: UserRole.CLIENT,\n          firstName: 'Cliente',\n          lastName: 'Demo'\n        }\n      ];\n\n      testUsers.forEach(user => {\n        users[user.username] = user;\n      });\n      \n      this.saveUsers(users);\n      console.log('Usuarios de prueba creados:', testUsers);\n    }\n  }\n\n  /**\n   * Obtiene todos los usuarios del almacenamiento local\n   */\n  private getUsers(): { [key: string]: UserData } {\n    const usersJson = localStorage.getItem(this.USERS_KEY);\n    return usersJson ? JSON.parse(usersJson) : {};\n  }\n\n  /**\n   * Guarda los usuarios en el almacenamiento local\n   */\n  private saveUsers(users: { [key: string]: UserData }): void {\n    localStorage.setItem(this.USERS_KEY, JSON.stringify(users));\n  }\n\n  /**\n   * Carga el usuario actual desde el almacenamiento\n   */\n  private loadUserFromStorage(): void {\n    const userJson = localStorage.getItem(this.CURRENT_USER_KEY);\n    if (userJson) {\n      const userData: User = JSON.parse(userJson);\n      this.currentUserSubject.next(userData);\n    }\n  }\n\n  /**\n   * Valida la contraseña según las reglas de seguridad\n   */\n  validatePassword(password: string): PasswordValidationResult {\n    const errors: string[] = [];\n    \n    if (password.length ]/.test(password)) {\n      errors.push('La contraseña debe contener al menos un carácter especial');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Registra un nuevo usuario\n   */\n  register(username: string, email: string, password: string, firstName?: string, lastName?: string): { success: boolean; message: string } {\n    console.log('Intentando registrar usuario:', { username, email });\n    const users = this.getUsers();\n\n    // Verificar si el usuario ya existe\n    if (users[username]) {\n      return { success: false, message: 'El nombre de usuario ya existe' };\n    }\n\n    // Verificar si el email ya existe\n    const existingUser = Object.values(users).find(user => user.email === email);\n    if (existingUser) {\n      return { success: false, message: 'El email ya está registrado' };\n    }\n\n    // Validar contraseña\n    const passwordValidation = this.validatePassword(password);\n    if (!passwordValidation.isValid) {\n      return { success: false, message: passwordValidation.errors.join(', ') };\n    }\n\n    // Crear nuevo usuario con rol por defecto\n    const newUser: UserData = {\n      username,\n      email,\n      password,\n      role: UserRole.CLIENT, // Por defecto es cliente\n      firstName,\n      lastName\n    };\n\n    // Guardar el nuevo usuario\n    users[username] = newUser;\n    this.saveUsers(users);\n    console.log('Usuario registrado exitosamente');\n\n    return { success: true, message: 'Usuario registrado exitosamente' };\n  }\n\n  /**\n   * Inicia sesión de un usuario\n   */\n  login(username: string, password: string, rememberMe: boolean): { success: boolean; message: string } {\n    console.log('Intentando iniciar sesión:', username);\n    const users = this.getUsers();\n    const user = users[username];\n\n    if (user && user.password === password) {\n      const userData: User = {\n        username: user.username,\n        email: user.email,\n        role: user.role,\n        firstName: user.firstName,\n        lastName: user.lastName\n      };\n\n      // Guardar usuario actual\n      localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(userData));\n      this.currentUserSubject.next(userData);\n      console.log('Inicio de sesión exitoso');\n      return { success: true, message: 'Inicio de sesión exitoso' };\n    }\n\n    console.log('Inicio de sesión fallido');\n    return { success: false, message: 'Usuario o contraseña incorrectos' };\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    localStorage.removeItem(this.CURRENT_USER_KEY);\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n    console.log('Sesión cerrada');\n  }\n\n  /**\n   * Verifica si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtiene el usuario actual\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Verifica si el usuario actual tiene un rol específico\n   */\n  hasRole(role: UserRole): boolean {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.role === role;\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   */\n  isAdmin(): boolean {\n    return this.hasRole(UserRole.ADMIN);\n  }\n\n  /**\n   * Verifica si el usuario actual es cliente\n   */\n  isClient(): boolean {\n    return this.hasRole(UserRole.CLIENT);\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   */\n  updateProfile(updates: Partial): { success: boolean; message: string } {\n    const currentUser = this.getCurrentUser();\n    if (!currentUser) {\n      return { success: false, message: 'No hay usuario autenticado' };\n    }\n\n    const users = this.getUsers();\n    const userData = users[currentUser.username];\n    \n    if (!userData) {\n      return { success: false, message: 'Usuario no encontrado' };\n    }\n\n    // Actualizar datos del usuario\n    const updatedUserData: UserData = {\n      ...userData,\n      ...updates\n    };\n\n    // Actualizar en almacenamiento\n    users[currentUser.username] = updatedUserData;\n    this.saveUsers(users);\n\n    // Actualizar usuario actual\n    const updatedUser: User = {\n      username: updatedUserData.username,\n      email: updatedUserData.email,\n      role: updatedUserData.role,\n      firstName: updatedUserData.firstName,\n      lastName: updatedUserData.lastName\n    };\n\n    localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(updatedUser));\n    this.currentUserSubject.next(updatedUser);\n\n    return { success: true, message: 'Perfil actualizado exitosamente' };\n  }\n\n  /**\n   * Método de utilidad para ver los usuarios registrados (solo para desarrollo)\n   */\n  debugUsers(): void {\n    console.log('Usuarios registrados:', this.getUsers());\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Profile.html":{"url":"components/Profile.html","title":"component - Profile","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./profile.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  imports: [],\n  templateUrl: './profile.html',\n  styleUrl: './profile.scss'\n})\nexport class Profile {\n\n}\n\n    \n\n    \n        profile works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'profile works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Profile'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTab\n                            \n                            \n                                errorMessage\n                            \n                            \n                                passwordForm\n                            \n                            \n                                personalForm\n                            \n                            \n                                preferencesForm\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPasswordSubmit\n                            \n                            \n                                onPersonalSubmit\n                            \n                            \n                                onPreferencesSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                setTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPasswordSubmit\n                        \n                    \n                \n            \n            \n                \nonPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPersonalSubmit\n                        \n                    \n                \n            \n            \n                \nonPersonalSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferencesSubmit\n                        \n                    \n                \n            \n            \n                \nonPreferencesSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTab\n                        \n                    \n                \n            \n            \n                \nsetTab(tab: \"personal\" | \"password\" | \"preferences\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tab\n                                            \n                                                        \"personal\" | \"password\" | \"preferences\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"personal\" | \"password\" | \"preferences\"\n\n                    \n                \n                \n                    \n                        Default value : 'personal'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personalForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preferencesForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\n\ninterface UserPreferences {\n  theme: 'light' | 'dark';\n  notifyTasks: boolean;\n  notifyDue: boolean;\n  language: 'es' | 'en';\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule]\n})\nexport class ProfileComponent implements OnInit {\n  personalForm: FormGroup;\n  passwordForm: FormGroup;\n  preferencesForm: FormGroup;\n  currentTab: 'personal' | 'password' | 'preferences' = 'personal';\n  successMessage: string = '';\n  errorMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.personalForm = this.fb.group({\n      fullName: ['', [Validators.required, Validators.minLength(3), Validators.pattern('[A-Za-zÀ-ÿ\\\\s]+')]],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required, Validators.minLength(4), Validators.pattern('[a-zA-Z0-9_]+')]]\n    });\n\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\n      confirmNewPassword: ['', [Validators.required]]\n    }, { validator: this.passwordMatchValidator });\n\n    this.preferencesForm = this.fb.group({\n      theme: ['light'],\n      notifyTasks: [true],\n      notifyDue: [true],\n      language: ['es']\n    });\n  }\n\n  ngOnInit(): void {\n    const user = this.authService.getCurrentUser();\n    if (!user) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    // Cargar datos del usuario\n    this.personalForm.patchValue({\n      username: user.username,\n      email: user.username + '@example.com', // Simulado\n      fullName: 'Usuario de Ejemplo' // Simulado\n    });\n\n    // Deshabilitar el campo de email\n    this.personalForm.get('email')?.disable();\n\n    // Cargar preferencias (simulado)\n    const preferences: UserPreferences = {\n      theme: 'light',\n      notifyTasks: true,\n      notifyDue: true,\n      language: 'es'\n    };\n    this.preferencesForm.patchValue(preferences);\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('newPassword')?.value === g.get('confirmNewPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  onPersonalSubmit(): void {\n    if (this.personalForm.valid) {\n      // Aquí iría la lógica para actualizar la información personal\n      this.successMessage = 'Información personal actualizada correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n    }\n  }\n\n  onPasswordSubmit(): void {\n    if (this.passwordForm.valid) {\n      // Aquí iría la lógica para cambiar la contraseña\n      this.successMessage = 'Contraseña actualizada correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n      this.passwordForm.reset();\n    }\n  }\n\n  onPreferencesSubmit(): void {\n    if (this.preferencesForm.valid) {\n      // Aquí iría la lógica para guardar las preferencias\n      this.successMessage = 'Preferencias guardadas correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n    }\n  }\n\n  setTab(tab: 'personal' | 'password' | 'preferences'): void {\n    this.currentTab = tab;\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n} \n    \n\n    \n        \n\n  \n    TaskFlow\n    \n      \n    \n    \n      \n        \n          Dashboard\n        \n        \n          Mi Perfil\n        \n      \n      \n        \n           Cerrar Sesión\n        \n      \n    \n  \n\n\n\n  \n    \n    \n      \n        \n           Información Personal\n        \n        \n           Cambiar Contraseña\n        \n        \n           Preferencias\n        \n      \n    \n\n    \n    \n      \n      {{ successMessage }}\n      {{ errorMessage }}\n\n      \n      \n        \n          Información Personal\n        \n        \n          \n            \n              Nombre Completo\n              \n              \n                El nombre es requerido\n              \n              \n                Solo se permiten letras y espacios\n              \n            \n            \n            \n              Correo Electrónico\n              \n              El correo electrónico no se puede modificar\n            \n\n            \n              Usuario\n              \n              \n                El usuario es requerido\n              \n              \n                Solo se permiten letras, números y guiones bajos\n              \n            \n\n            \n               Guardar Cambios\n            \n          \n        \n      \n\n      \n      \n        \n          Cambiar Contraseña\n        \n        \n          \n            \n              Contraseña Actual\n              \n              \n                La contraseña actual es requerida\n              \n            \n\n            \n              Nueva Contraseña\n              \n              Mínimo 8 caracteres\n              \n                La nueva contraseña es requerida\n              \n              \n                La contraseña debe tener al menos 8 caracteres\n              \n            \n\n            \n              Confirmar Nueva Contraseña\n              \n              \n                Las contraseñas no coinciden\n              \n            \n\n            \n               Cambiar Contraseña\n            \n          \n        \n      \n\n      \n      \n        \n          Preferencias de la Aplicación\n        \n        \n          \n            \n              Tema de la Aplicación\n              \n                \n                \n                   Claro\n                \n              \n              \n                \n                \n                   Oscuro\n                \n              \n            \n\n            \n              Notificaciones\n              \n                \n                \n                  Notificar tareas pendientes\n                \n              \n              \n                \n                \n                  Notificar tareas próximas a vencer\n                \n              \n            \n\n            \n              Idioma\n              \n                Español\n                English\n              \n            \n\n            \n               Guardar Preferencias\n            \n          \n        \n      \n    \n  \n \n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .list-group-item {\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #f8f9fa;\n  }\n\n  &.active {\n    background-color: #0d6efd;\n    border-color: #0d6efd;\n  }\n}\n\n.form-check-input:checked {\n  background-color: #0d6efd;\n  border-color: #0d6efd;\n}\n\n.form-switch .form-check-input {\n  width: 2.5em;\n}\n\n.card {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n  border-radius: 0.5rem;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.btn-primary {\n  &:disabled {\n    cursor: not-allowed;\n  }\n}\n\n.alert {\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      TaskFlow                                          Dashboard                          Mi Perfil                                       Cerrar Sesión                                                       Información Personal                           Cambiar Contraseña                           Preferencias                                      {{ successMessage }}      {{ errorMessage }}                              Información Personal                                                    Nombre Completo                                            El nombre es requerido                                            Solo se permiten letras y espacios                                                                Correo Electrónico                            El correo electrónico no se puede modificar                                      Usuario                                            El usuario es requerido                                            Solo se permiten letras, números y guiones bajos                                                     Guardar Cambios                                                                  Cambiar Contraseña                                                    Contraseña Actual                                            La contraseña actual es requerida                                                    Nueva Contraseña                            Mínimo 8 caracteres                              La nueva contraseña es requerida                                            La contraseña debe tener al menos 8 caracteres                                                    Confirmar Nueva Contraseña                                            Las contraseñas no coinciden                                                     Cambiar Contraseña                                                                  Preferencias de la Aplicación                                                    Tema de la Aplicación                                                                 Claro                                                                                               Oscuro                                                                    Notificaciones                                                                Notificar tareas pendientes                                                                                              Notificar tareas próximas a vencer                                                                    Idioma                              Español                English                                                     Guardar Preferencias                                           '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Recover.html":{"url":"components/Recover.html","title":"component - Recover","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Recover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recover/recover.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./recover.html\n            \n\n\n\n            \n                styleUrl\n                ./recover.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-recover',\n  imports: [],\n  templateUrl: './recover.html',\n  styleUrl: './recover.scss'\n})\nexport class Recover {\n\n}\n\n    \n\n    \n        recover works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'recover works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Recover'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverComponent.html":{"url":"components/RecoverComponent.html","title":"component - RecoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recover/recover.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./recover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentStep\n                            \n                            \n                                errorMessage\n                            \n                            \n                                newPasswordForm\n                            \n                            \n                                recoveryForm\n                            \n                            \n                                successMessage\n                            \n                            \n                                verificationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEmailSubmit\n                            \n                            \n                                onPasswordSubmit\n                            \n                            \n                                onVerificationSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                resendCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recover/recover.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onEmailSubmit\n                        \n                    \n                \n            \n            \n                \nonEmailSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPasswordSubmit\n                        \n                    \n                \n            \n            \n                \nonPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVerificationSubmit\n                        \n                    \n                \n            \n            \n                \nonVerificationSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendCode\n                        \n                    \n                \n            \n            \n                \nresendCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"email\" | \"verification\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'email'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-recover',\n  templateUrl: './recover.component.html',\n  styleUrls: ['./recover.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule]\n})\nexport class RecoverComponent {\n  recoveryForm: FormGroup;\n  verificationForm: FormGroup;\n  newPasswordForm: FormGroup;\n  currentStep: 'email' | 'verification' | 'password' = 'email';\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router\n  ) {\n    this.recoveryForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.verificationForm = this.fb.group({\n      code: ['', [Validators.required, Validators.pattern('^[0-9]{6}$')]]\n    });\n\n    this.newPasswordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password')?.value === g.get('confirmPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  onEmailSubmit(): void {\n    if (this.recoveryForm.valid) {\n      // Aquí iría la lógica para enviar el código de verificación\n      // Por ahora, simulamos el envío exitoso\n      this.currentStep = 'verification';\n      this.successMessage = 'Se ha enviado un código de verificación a tu correo electrónico';\n      this.errorMessage = '';\n    }\n  }\n\n  onVerificationSubmit(): void {\n    if (this.verificationForm.valid) {\n      // Aquí iría la lógica para verificar el código\n      // Por ahora, simulamos la verificación exitosa\n      this.currentStep = 'password';\n      this.successMessage = 'Código verificado correctamente';\n      this.errorMessage = '';\n    }\n  }\n\n  onPasswordSubmit(): void {\n    if (this.newPasswordForm.valid) {\n      // Aquí iría la lógica para cambiar la contraseña\n      // Por ahora, simulamos el cambio exitoso\n      this.successMessage = 'Contraseña cambiada exitosamente';\n      setTimeout(() => {\n        this.router.navigate(['/login']);\n      }, 2000);\n    }\n  }\n\n  resendCode(): void {\n    // Aquí iría la lógica para reenviar el código\n    this.successMessage = 'Se ha reenviado el código de verificación';\n    this.errorMessage = '';\n  }\n} \n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n              Recuperar Contraseña\n              Ingresa tu correo electrónico para recibir instrucciones\n            \n\n            \n            \n              \n                Correo Electrónico\n                \n                  \n                    \n                  \n                  \n                \n                Ingresa el correo electrónico asociado a tu cuenta\n                \n                  El correo electrónico es requerido\n                \n                \n                  Ingresa un correo electrónico válido\n                \n              \n\n              \n                \n                  Enviar Instrucciones\n                \n                \n                  Volver al Login\n                \n              \n            \n\n            \n            \n              \n                Código de Verificación\n                \n                  \n                    \n                  \n                  \n                \n                Ingresa el código que enviamos a tu correo\n                \n                  El código es requerido\n                \n                \n                  El código debe ser de 6 dígitos\n                \n              \n\n              \n                \n                  Verificar Código\n                \n                \n                  Reenviar Código\n                \n              \n            \n\n            \n            \n              \n                Nueva Contraseña\n                \n                  \n                    \n                  \n                  \n                \n                Mínimo 8 caracteres\n                \n                  La contraseña es requerida\n                \n                \n                  La contraseña debe tener al menos 8 caracteres\n                \n              \n\n              \n                Confirmar Nueva Contraseña\n                \n                  \n                    \n                  \n                  \n                \n                Repite tu nueva contraseña\n                \n                  Las contraseñas no coinciden\n                \n              \n\n              \n                \n                  Cambiar Contraseña\n                \n              \n            \n\n            \n            {{ errorMessage }}\n            {{ successMessage }}\n          \n        \n      \n    \n  \n \n    \n\n    \n                \n                    ./recover.component.scss\n                \n                .recover-container {\n  max-width: 400px;\n  margin: 2rem auto;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  background-color: white;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n\n  .form-group {\n    margin-bottom: 1rem;\n  }\n\n  .btn-primary {\n    width: 100%;\n    margin-top: 1rem;\n  }\n\n  .step-indicator {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 2rem;\n\n    .step {\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      background-color: #e9ecef;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0 0.5rem;\n\n      &.active {\n        background-color: #007bff;\n        color: white;\n      }\n\n      &.completed {\n        background-color: #28a745;\n        color: white;\n      }\n    }\n  }\n\n  .login-link {\n    display: block;\n    text-align: center;\n    margin-top: 1rem;\n    color: #007bff;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Recuperar Contraseña              Ingresa tu correo electrónico para recibir instrucciones                                                                  Correo Electrónico                                                                                                                          Ingresa el correo electrónico asociado a tu cuenta                                  El correo electrónico es requerido                                                  Ingresa un correo electrónico válido                                                                              Enviar Instrucciones                                                  Volver al Login                                                                                                Código de Verificación                                                                                                                          Ingresa el código que enviamos a tu correo                                  El código es requerido                                                  El código debe ser de 6 dígitos                                                                              Verificar Código                                                  Reenviar Código                                                                                                Nueva Contraseña                                                                                                                          Mínimo 8 caracteres                                  La contraseña es requerida                                                  La contraseña debe tener al menos 8 caracteres                                                            Confirmar Nueva Contraseña                                                                                                                          Repite tu nueva contraseña                                  Las contraseñas no coinciden                                                                              Cambiar Contraseña                                                                  {{ errorMessage }}            {{ successMessage }}                               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Register.html":{"url":"components/Register.html","title":"component - Register","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./register.html\n            \n\n\n\n            \n                styleUrl\n                ./register.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  imports: [],\n  templateUrl: './register.html',\n  styleUrl: './register.scss'\n})\nexport class Register {\n\n}\n\n    \n\n    \n        register works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'register works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Register'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de registro de usuarios\nManeja el registro de nuevos usuarios con validaciones robustas\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                passwordValidation\n                            \n                            \n                                registerForm\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                hasError\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                    Private\n                                validatePasswordMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo tiene errores y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Marca todos los campos del formulario como tocados para mostrar errores\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Resetea el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Validador para confirmar que las contraseñas coinciden\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePasswordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePasswordMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Valida que las contraseñas coincidan\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * Componente de registro de usuarios\n * Maneja el registro de nuevos usuarios con validaciones robustas\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule]\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n  isLoading: boolean = false;\n  passwordValidation: any = {};\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.registerForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      username: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(20),\n        Validators.pattern('[a-zA-Z0-9_]+')\n      ]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      confirmPassword: ['', Validators.required],\n      termsAccepted: [false, Validators.requiredTrue]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n\n    // Escuchar cambios en la contraseña para validación en tiempo real\n    this.registerForm.get('password')?.valueChanges.subscribe(password => {\n      if (password) {\n        this.passwordValidation = this.authService.validatePassword(password);\n      }\n    });\n\n    // Validar coincidencia de contraseñas en tiempo real\n    this.registerForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.validatePasswordMatch();\n    });\n  }\n\n  ngOnInit(): void {\n    // Si ya está autenticado, redirigir al dashboard\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  /**\n   * Valida que las contraseñas coincidan\n   */\n  private validatePasswordMatch(): void {\n    const password = this.registerForm.get('password')?.value;\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value;\n    \n    if (password && confirmPassword && password !== confirmPassword) {\n      this.registerForm.get('confirmPassword')?.setErrors({ mismatch: true });\n    } else if (this.registerForm.get('confirmPassword')?.hasError('mismatch')) {\n      this.registerForm.get('confirmPassword')?.setErrors(null);\n    }\n  }\n\n  /**\n   * Validador para confirmar que las contraseñas coinciden\n   */\n  passwordMatchValidator(g: FormGroup) {\n    const password = g.get('password')?.value;\n    const confirmPassword = g.get('confirmPassword')?.value;\n    \n    if (password && confirmPassword && password !== confirmPassword) {\n      return { mismatch: true };\n    }\n    return null;\n  }\n\n  /**\n   * Maneja el envío del formulario de registro\n   */\n  onSubmit(): void {\n    this.errorMessage = '';\n    this.successMessage = '';\n    \n    if (this.registerForm.valid) {\n      this.isLoading = true;\n      \n      const { firstName, lastName, username, email, password } = this.registerForm.value;\n      \n      const result = this.authService.register(username, email, password, firstName, lastName);\n      \n      if (result.success) {\n        this.successMessage = 'Registro exitoso. Redirigiendo al login...';\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 2000);\n      } else {\n        this.errorMessage = result.message;\n      }\n      \n      this.isLoading = false;\n    } else {\n      this.markFormGroupTouched();\n      this.errorMessage = 'Por favor, complete todos los campos correctamente';\n    }\n  }\n\n  /**\n   * Marca todos los campos del formulario como tocados para mostrar errores\n   */\n  private markFormGroupTouched(): void {\n    Object.keys(this.registerForm.controls).forEach(key => {\n      const control = this.registerForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene errores y ha sido tocado\n   */\n  hasError(fieldName: string): boolean {\n    const field = this.registerForm.get(fieldName);\n    return !!(field?.invalid && field?.touched);\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo específico\n   */\n  getErrorMessage(fieldName: string): string {\n    const field = this.registerForm.get(fieldName);\n    \n    if (field?.hasError('required')) {\n      return 'Este campo es requerido';\n    }\n    \n    if (field?.hasError('email')) {\n      return 'Ingrese un email válido';\n    }\n    \n    if (field?.hasError('minlength')) {\n      const requiredLength = field.getError('minlength').requiredLength;\n      return `Mínimo ${requiredLength} caracteres`;\n    }\n    \n    if (field?.hasError('maxlength')) {\n      const requiredLength = field.getError('maxlength').requiredLength;\n      return `Máximo ${requiredLength} caracteres`;\n    }\n    \n    if (field?.hasError('pattern')) {\n      return 'Solo se permiten letras, números y guiones bajos';\n    }\n    \n    if (field?.hasError('mismatch')) {\n      return 'Las contraseñas no coinciden';\n    }\n    \n    return '';\n  }\n\n  /**\n   * Resetea el formulario\n   */\n  onReset(): void {\n    this.registerForm.reset();\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.passwordValidation = {};\n  }\n} \n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              TaskFlow\n              Crea tu cuenta\n            \n            \n            \n              \n                \n                  Nombre\n                  \n                  \n                    {{ getErrorMessage('firstName') }}\n                  \n                \n                \n                \n                  Apellido\n                  \n                  \n                    {{ getErrorMessage('lastName') }}\n                  \n                \n              \n\n              \n                Nombre de Usuario\n                \n                3-20 caracteres, solo letras, números y guiones bajos\n                \n                  {{ getErrorMessage('username') }}\n                \n              \n\n              \n                Correo Electrónico\n                \n                \n                  {{ getErrorMessage('email') }}\n                \n              \n\n              \n                Contraseña\n                 0)\"\n                  [class.is-valid]=\"!hasError('password') && passwordValidation.isValid\"\n                  id=\"password\" \n                  formControlName=\"password\"\n                  autocomplete=\"new-password\"\n                  placeholder=\"Tu contraseña\"\n                  required\n                />\n                \n                \n                 0\" class=\"mt-2\">\n                  La contraseña debe cumplir:\n                  \n                    \n                      {{ error }}\n                    \n                  \n                \n                \n                \n                  {{ getErrorMessage('password') }}\n                \n              \n\n              \n                Confirmar Contraseña\n                \n                \n                  {{ getErrorMessage('confirmPassword') }}\n                \n              \n\n              \n                \n                \n                  Acepto los términos y condiciones\n                \n                \n                  Debes aceptar los términos y condiciones\n                \n              \n\n              \n                \n                {{ errorMessage }}\n              \n\n              \n                \n                {{ successMessage }}\n              \n\n              \n                \n                  \n                  \n                  {{ isLoading ? 'Creando cuenta...' : 'Crear Cuenta' }}\n                \n                \n                \n                  \n                  Limpiar Formulario\n                \n                \n                \n                  \n                  Ya tengo cuenta\n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Términos y Condiciones\n          \n        \n        \n          Al registrarte en TaskFlow, aceptas:\n          \n            Proporcionar información veraz y actualizada\n            Mantener la confidencialidad de tu cuenta\n            No compartir tus credenciales de acceso\n            Usar la plataforma de acuerdo a las políticas establecidas\n            Respetar los derechos de otros usuarios\n            No usar la plataforma para actividades ilegales\n          \n          \n            TaskFlow se reserva el derecho de suspender o cancelar cuentas que violen estos términos.\n          \n        \n        \n          Entendido\n        \n      \n    \n  \n \n    \n\n    \n                \n                    ./register.component.scss\n                \n                .register-container {\n  max-width: 600px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  h2 {\n    text-align: center;\n    margin-bottom: 2rem;\n    color: #333;\n  }\n\n  .form-group {\n    margin-bottom: 1.5rem;\n\n    label {\n      display: block;\n      margin-bottom: 0.5rem;\n      color: #555;\n      font-weight: 500;\n    }\n\n    .form-control {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      transition: border-color 0.2s ease-in-out;\n\n      &:focus {\n        outline: none;\n        border-color: #007bff;\n        box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n      }\n\n      &.is-invalid {\n        border-color: #dc3545;\n      }\n    }\n\n    .invalid-feedback {\n      display: block;\n      color: #dc3545;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n  }\n\n  .form-buttons {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n    margin-top: 2rem;\n\n    button {\n      padding: 0.75rem 1.5rem;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-weight: 500;\n      transition: background-color 0.2s ease-in-out;\n\n      &.btn-primary {\n        background-color: #007bff;\n        color: white;\n\n        &:hover {\n          background-color: #0056b3;\n        }\n\n        &:disabled {\n          background-color: #ccc;\n          cursor: not-allowed;\n        }\n      }\n\n      &.btn-secondary {\n        background-color: #6c757d;\n        color: white;\n\n        &:hover {\n          background-color: #545b62;\n        }\n      }\n    }\n  }\n\n  .login-link {\n    display: block;\n    text-align: center;\n    margin-top: 1rem;\n    color: #007bff;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        TaskFlow              Crea tu cuenta                                                                                    Nombre                                                        {{ getErrorMessage(\\'firstName\\') }}                                                                                    Apellido                                                        {{ getErrorMessage(\\'lastName\\') }}                                                                              Nombre de Usuario                                3-20 caracteres, solo letras, números y guiones bajos                                  {{ getErrorMessage(\\'username\\') }}                                                            Correo Electrónico                                                  {{ getErrorMessage(\\'email\\') }}                                                            Contraseña                 0)\"                  [class.is-valid]=\"!hasError(\\'password\\') && passwordValidation.isValid\"                  id=\"password\"                   formControlName=\"password\"                  autocomplete=\"new-password\"                  placeholder=\"Tu contraseña\"                  required                />                                                 0\" class=\"mt-2\">                  La contraseña debe cumplir:                                                            {{ error }}                                                                                                        {{ getErrorMessage(\\'password\\') }}                                                            Confirmar Contraseña                                                  {{ getErrorMessage(\\'confirmPassword\\') }}                                                                                              Acepto los términos y condiciones                                                  Debes aceptar los términos y condiciones                                                                            {{ errorMessage }}                                                            {{ successMessage }}                                                                                                  {{ isLoading ? \\'Creando cuenta...\\' : \\'Crear Cuenta\\' }}                                                                                    Limpiar Formulario                                                                                    Ya tengo cuenta                                                                                                        Términos y Condiciones                                    Al registrarte en TaskFlow, aceptas:                      Proporcionar información veraz y actualizada            Mantener la confidencialidad de tu cuenta            No compartir tus credenciales de acceso            Usar la plataforma de acuerdo a las políticas establecidas            Respetar los derechos de otros usuarios            No usar la plataforma para actividades ilegales                                TaskFlow se reserva el derecho de suspender o cancelar cuentas que violen estos términos.                                    Entendido                     '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"high\" | \"medium\" | \"low\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"high\" | \"medium\" | \"low\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface Task {\n  id: number;\n  title: string;\n  category: string;\n  priority: 'high' | 'medium' | 'low';\n  dueDate: string;\n  completed: boolean;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private tasks: Task[] = [];\n  private tasksSubject = new BehaviorSubject([]);\n  tasks$ = this.tasksSubject.asObservable();\n\n  constructor() {\n    this.loadTasks();\n  }\n\n  private loadTasks(): void {\n    // Aquí cargaríamos las tareas desde el almacenamiento local o una API\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      this.tasks = JSON.parse(storedTasks);\n      this.tasksSubject.next(this.tasks);\n    }\n  }\n\n  private saveTasks(): void {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    this.tasksSubject.next(this.tasks);\n  }\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  addTask(task: Omit): void {\n    const newTask: Task = {\n      id: Date.now(),\n      ...task,\n      completed: false,\n      createdAt: new Date().toISOString().split('T')[0]\n    };\n    this.tasks.unshift(newTask);\n    this.saveTasks();\n  }\n\n  updateTask(taskId: number, updates: Partial): void {\n    const index = this.tasks.findIndex(task => task.id === taskId);\n    if (index !== -1) {\n      this.tasks[index] = { ...this.tasks[index], ...updates };\n      this.saveTasks();\n    }\n  }\n\n  deleteTask(taskId: number): void {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n    this.saveTasks();\n  }\n\n  toggleTaskComplete(taskId: number): void {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n      this.saveTasks();\n    }\n  }\n\n  getTasksByFilter(filter: string): Task[] {\n    switch (filter) {\n      case 'pending':\n        return this.tasks.filter(task => !task.completed);\n      case 'completed':\n        return this.tasks.filter(task => task.completed);\n      default:\n        return this.tasks;\n    }\n  }\n\n  getTasksByCategory(category: string): Task[] {\n    return category === 'all' \n      ? this.tasks \n      : this.tasks.filter(task => task.category === category);\n  }\n\n  searchTasks(term: string): Task[] {\n    const searchTerm = term.toLowerCase();\n    return this.tasks.filter(task => \n      task.title.toLowerCase().includes(searchTerm)\n    );\n  }\n\n  getOverdueTasks(): Task[] {\n    const today = new Date();\n    return this.tasks.filter(task => {\n      const dueDate = new Date(task.dueDate);\n      return !task.completed && dueDate  !task.completed).length,\n      completed: this.tasks.filter(task => task.completed).length,\n      overdue: this.getOverdueTasks().length,\n      categories: this.tasks.reduce((acc, task) => {\n        acc[task.category] = (acc[task.category] || 0) + 1;\n        return acc;\n      }, {} as { [key: string]: number })\n    };\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task-1.html":{"url":"interfaces/Task-1.html","title":"interface - Task-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tasks/tasks.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"high\" | \"medium\" | \"low\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"high\" | \"medium\" | \"low\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"pending\" | \"completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"pending\" | \"completed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User } from '../../services/auth.service';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  priority: 'high' | 'medium' | 'low';\n  status: 'pending' | 'completed';\n  dueDate: string;\n  createdAt: string;\n}\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class TasksComponent implements OnInit {\n  currentUser: User | null = null;\n  tasks: Task[] = [];\n  filteredTasks: Task[] = [];\n  currentFilter: string = 'all';\n\n  // Propiedades computadas para los contadores\n  get totalTasks(): number {\n    return this.tasks.length;\n  }\n\n  get pendingTasks(): number {\n    return this.tasks.filter(task => task.status === 'pending').length;\n  }\n\n  get completedTasks(): number {\n    return this.tasks.filter(task => task.status === 'completed').length;\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isClient()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.loadTasks();\n  }\n\n  /**\n   * Carga las tareas de ejemplo\n   */\n  private loadTasks(): void {\n    this.tasks = [\n      {\n        id: 1,\n        title: 'Completar proyecto Angular',\n        description: 'Finalizar el desarrollo del proyecto TaskFlow',\n        category: 'Trabajo',\n        priority: 'high',\n        status: 'pending',\n        dueDate: '2024-01-15',\n        createdAt: '2024-01-10'\n      },\n      {\n        id: 2,\n        title: 'Revisar documentación',\n        description: 'Revisar y actualizar la documentación del proyecto',\n        category: 'Trabajo',\n        priority: 'medium',\n        status: 'completed',\n        dueDate: '2024-01-12',\n        createdAt: '2024-01-08'\n      },\n      {\n        id: 3,\n        title: 'Ejercicio físico',\n        description: 'Realizar rutina de ejercicios diaria',\n        category: 'Personal',\n        priority: 'low',\n        status: 'pending',\n        dueDate: '2024-01-14',\n        createdAt: '2024-01-11'\n      }\n    ];\n    this.filteredTasks = [...this.tasks];\n  }\n\n  /**\n   * Filtra las tareas según el estado\n   */\n  filterTasks(filter: string): void {\n    this.currentFilter = filter;\n    if (filter === 'all') {\n      this.filteredTasks = [...this.tasks];\n    } else {\n      this.filteredTasks = this.tasks.filter(task => task.status === filter);\n    }\n  }\n\n  /**\n   * Cambia el estado de una tarea\n   */\n  toggleTaskStatus(task: Task): void {\n    task.status = task.status === 'pending' ? 'completed' : 'pending';\n  }\n\n  /**\n   * Elimina una tarea\n   */\n  deleteTask(taskId: number): void {\n    if (confirm('¿Estás seguro de que quieres eliminar esta tarea?')) {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n      this.filterTasks(this.currentFilter);\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS para el badge de prioridad\n   */\n  getPriorityBadgeClass(priority: string): string {\n    switch (priority) {\n      case 'high': return 'bg-danger';\n      case 'medium': return 'bg-warning';\n      case 'low': return 'bg-success';\n      default: return 'bg-secondary';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS para el badge de estado\n   */\n  getStatusBadgeClass(status: string): string {\n    return status === 'completed' ? 'bg-success' : 'bg-primary';\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailComponent.html":{"url":"components/TaskDetailComponent.html","title":"component - TaskDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tasks/task-detail/task-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n            \n                template\n                \n  Detalle de Tarea\n  Funcionalidad en desarrollo...\n  \n    Volver a Mis Tareas\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-task-detail',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    \n      Detalle de Tarea\n      Funcionalidad en desarrollo...\n      \n        Volver a Mis Tareas\n      \n    \n  `\n})\nexport class TaskDetailComponent {} \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Detalle de Tarea  Funcionalidad en desarrollo...      Volver a Mis Tareas  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskManagementComponent.html":{"url":"components/TaskManagementComponent.html","title":"component - TaskManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/task-management/task-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./task-management.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/task-management/task-management.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/task-management/task-management.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/task-management/task-management.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-task-management',\n  templateUrl: './task-management.component.html',\n  styleUrls: ['./task-management.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class TaskManagementComponent implements OnInit {\n  currentUser: User | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isAdmin()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n  }\n} \n    \n\n    \n        \n  \n    Gestión de Tareas\n    Administra todas las tareas del sistema\n  \n\n  \n    \n      Todas las Tareas\n    \n    \n      Funcionalidad en desarrollo...\n    \n  \n\n  \n    \n      Volver al Panel de Administración\n    \n  \n \n    \n\n    \n                \n                    ./task-management.component.scss\n                \n                 \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gestión de Tareas    Administra todas las tareas del sistema              Todas las Tareas              Funcionalidad en desarrollo...                  Volver al Panel de Administración       '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasks\n                            \n                            \n                                tasks$\n                            \n                            \n                                    Private\n                                tasksSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getOverdueTasks\n                            \n                            \n                                getTasks\n                            \n                            \n                                getTasksByCategory\n                            \n                            \n                                getTasksByFilter\n                            \n                            \n                                getTaskStats\n                            \n                            \n                                    Private\n                                loadTasks\n                            \n                            \n                                    Private\n                                saveTasks\n                            \n                            \n                                searchTasks\n                            \n                            \n                                toggleTaskComplete\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOverdueTasks\n                        \n                    \n                \n            \n            \n                \ngetOverdueTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Task[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Task[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksByCategory\n                        \n                    \n                \n            \n            \n                \ngetTasksByCategory(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Task[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksByFilter\n                        \n                    \n                \n            \n            \n                \ngetTasksByFilter(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Task[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskStats\n                        \n                    \n                \n            \n            \n                \ngetTaskStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { pending: any; completed: any; overdue: any; categories: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTasks\n                        \n                    \n                \n            \n            \n                \nsearchTasks(term: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                term\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Task[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTaskComplete\n                        \n                    \n                \n            \n            \n                \ntoggleTaskComplete(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(taskId: number, updates: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updates\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.tasksSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface Task {\n  id: number;\n  title: string;\n  category: string;\n  priority: 'high' | 'medium' | 'low';\n  dueDate: string;\n  completed: boolean;\n  createdAt: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private tasks: Task[] = [];\n  private tasksSubject = new BehaviorSubject([]);\n  tasks$ = this.tasksSubject.asObservable();\n\n  constructor() {\n    this.loadTasks();\n  }\n\n  private loadTasks(): void {\n    // Aquí cargaríamos las tareas desde el almacenamiento local o una API\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      this.tasks = JSON.parse(storedTasks);\n      this.tasksSubject.next(this.tasks);\n    }\n  }\n\n  private saveTasks(): void {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    this.tasksSubject.next(this.tasks);\n  }\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  addTask(task: Omit): void {\n    const newTask: Task = {\n      id: Date.now(),\n      ...task,\n      completed: false,\n      createdAt: new Date().toISOString().split('T')[0]\n    };\n    this.tasks.unshift(newTask);\n    this.saveTasks();\n  }\n\n  updateTask(taskId: number, updates: Partial): void {\n    const index = this.tasks.findIndex(task => task.id === taskId);\n    if (index !== -1) {\n      this.tasks[index] = { ...this.tasks[index], ...updates };\n      this.saveTasks();\n    }\n  }\n\n  deleteTask(taskId: number): void {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n    this.saveTasks();\n  }\n\n  toggleTaskComplete(taskId: number): void {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n      this.saveTasks();\n    }\n  }\n\n  getTasksByFilter(filter: string): Task[] {\n    switch (filter) {\n      case 'pending':\n        return this.tasks.filter(task => !task.completed);\n      case 'completed':\n        return this.tasks.filter(task => task.completed);\n      default:\n        return this.tasks;\n    }\n  }\n\n  getTasksByCategory(category: string): Task[] {\n    return category === 'all' \n      ? this.tasks \n      : this.tasks.filter(task => task.category === category);\n  }\n\n  searchTasks(term: string): Task[] {\n    const searchTerm = term.toLowerCase();\n    return this.tasks.filter(task => \n      task.title.toLowerCase().includes(searchTerm)\n    );\n  }\n\n  getOverdueTasks(): Task[] {\n    const today = new Date();\n    return this.tasks.filter(task => {\n      const dueDate = new Date(task.dueDate);\n      return !task.completed && dueDate  !task.completed).length,\n      completed: this.tasks.filter(task => task.completed).length,\n      overdue: this.getOverdueTasks().length,\n      categories: this.tasks.reduce((acc, task) => {\n        acc[task.category] = (acc[task.category] || 0) + 1;\n        return acc;\n      }, {} as { [key: string]: number })\n    };\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tasks/tasks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFilter\n                            \n                            \n                                currentUser\n                            \n                            \n                                filteredTasks\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                filterTasks\n                            \n                            \n                                getPriorityBadgeClass\n                            \n                            \n                                getStatusBadgeClass\n                            \n                            \n                                    Private\n                                loadTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalTasks\n                                \n                                \n                                    pendingTasks\n                                \n                                \n                                    completedTasks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tasks/tasks.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Elimina una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterTasks\n                        \n                    \n                \n            \n            \n                \nfilterTasks(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Filtra las tareas según el estado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityBadgeClass\n                        \n                    \n                \n            \n            \n                \ngetPriorityBadgeClass(priority: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Obtiene la clase CSS para el badge de prioridad\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                priority\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusBadgeClass\n                        \n                    \n                \n            \n            \n                \ngetStatusBadgeClass(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Obtiene la clase CSS para el badge de estado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Carga las tareas de ejemplo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTaskStatus\n                        \n                    \n                \n            \n            \n                \ntoggleTaskStatus(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tasks/tasks.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Cambia el estado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/tasks.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/tasks.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/tasks.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/tasks.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalTasks\n                    \n                \n\n                \n                    \n                        gettotalTasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tasks/tasks.component.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pendingTasks\n                    \n                \n\n                \n                    \n                        getpendingTasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tasks/tasks.component.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        completedTasks\n                    \n                \n\n                \n                    \n                        getcompletedTasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tasks/tasks.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User } from '../../services/auth.service';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  priority: 'high' | 'medium' | 'low';\n  status: 'pending' | 'completed';\n  dueDate: string;\n  createdAt: string;\n}\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class TasksComponent implements OnInit {\n  currentUser: User | null = null;\n  tasks: Task[] = [];\n  filteredTasks: Task[] = [];\n  currentFilter: string = 'all';\n\n  // Propiedades computadas para los contadores\n  get totalTasks(): number {\n    return this.tasks.length;\n  }\n\n  get pendingTasks(): number {\n    return this.tasks.filter(task => task.status === 'pending').length;\n  }\n\n  get completedTasks(): number {\n    return this.tasks.filter(task => task.status === 'completed').length;\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isClient()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.loadTasks();\n  }\n\n  /**\n   * Carga las tareas de ejemplo\n   */\n  private loadTasks(): void {\n    this.tasks = [\n      {\n        id: 1,\n        title: 'Completar proyecto Angular',\n        description: 'Finalizar el desarrollo del proyecto TaskFlow',\n        category: 'Trabajo',\n        priority: 'high',\n        status: 'pending',\n        dueDate: '2024-01-15',\n        createdAt: '2024-01-10'\n      },\n      {\n        id: 2,\n        title: 'Revisar documentación',\n        description: 'Revisar y actualizar la documentación del proyecto',\n        category: 'Trabajo',\n        priority: 'medium',\n        status: 'completed',\n        dueDate: '2024-01-12',\n        createdAt: '2024-01-08'\n      },\n      {\n        id: 3,\n        title: 'Ejercicio físico',\n        description: 'Realizar rutina de ejercicios diaria',\n        category: 'Personal',\n        priority: 'low',\n        status: 'pending',\n        dueDate: '2024-01-14',\n        createdAt: '2024-01-11'\n      }\n    ];\n    this.filteredTasks = [...this.tasks];\n  }\n\n  /**\n   * Filtra las tareas según el estado\n   */\n  filterTasks(filter: string): void {\n    this.currentFilter = filter;\n    if (filter === 'all') {\n      this.filteredTasks = [...this.tasks];\n    } else {\n      this.filteredTasks = this.tasks.filter(task => task.status === filter);\n    }\n  }\n\n  /**\n   * Cambia el estado de una tarea\n   */\n  toggleTaskStatus(task: Task): void {\n    task.status = task.status === 'pending' ? 'completed' : 'pending';\n  }\n\n  /**\n   * Elimina una tarea\n   */\n  deleteTask(taskId: number): void {\n    if (confirm('¿Estás seguro de que quieres eliminar esta tarea?')) {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n      this.filterTasks(this.currentFilter);\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS para el badge de prioridad\n   */\n  getPriorityBadgeClass(priority: string): string {\n    switch (priority) {\n      case 'high': return 'bg-danger';\n      case 'medium': return 'bg-warning';\n      case 'low': return 'bg-success';\n      default: return 'bg-secondary';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS para el badge de estado\n   */\n  getStatusBadgeClass(status: string): string {\n    return status === 'completed' ? 'bg-success' : 'bg-primary';\n  }\n} \n    \n\n    \n        \n  \n    Mis Tareas\n    Gestiona tus tareas personales\n  \n\n  \n    \n      Lista de Tareas\n      \n        Nueva Tarea\n      \n    \n    \n      \n      \n        \n          \n            Todas ({{ totalTasks }})\n          \n          \n            Pendientes ({{ pendingTasks }})\n          \n          \n            Completadas ({{ completedTasks }})\n          \n        \n      \n\n      \n      \n        \n          \n            \n              \n                \n              \n              \n                \n                  {{ task.title }}\n                \n                {{ task.description }}\n                \n                  \n                    {{ task.priority === 'high' ? 'Alta' : task.priority === 'medium' ? 'Media' : 'Baja' }}\n                  \n                  \n                    {{ task.status === 'completed' ? 'Completada' : 'Pendiente' }}\n                  \n                  {{ task.category }}\n                  Vence: {{ task.dueDate | date:'dd/MM/yyyy' }}\n                \n              \n            \n          \n          \n            \n              \n            \n          \n        \n      \n\n      \n      \n        \n        \n          {{ currentFilter === 'all' ? 'No hay tareas creadas' : \n             currentFilter === 'pending' ? 'No hay tareas pendientes' : 'No hay tareas completadas' }}\n        \n      \n    \n  \n\n  \n    \n      Volver al Dashboard\n    \n  \n \n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                 \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Mis Tareas    Gestiona tus tareas personales              Lista de Tareas              Nueva Tarea                                                        Todas ({{ totalTasks }})                                Pendientes ({{ pendingTasks }})                                Completadas ({{ completedTasks }})                                                                                                                                                              {{ task.title }}                                {{ task.description }}                                                      {{ task.priority === \\'high\\' ? \\'Alta\\' : task.priority === \\'medium\\' ? \\'Media\\' : \\'Baja\\' }}                                                        {{ task.status === \\'completed\\' ? \\'Completada\\' : \\'Pendiente\\' }}                                    {{ task.category }}                  Vence: {{ task.dueDate | date:\\'dd/MM/yyyy\\' }}                                                                                                                                                                  {{ currentFilter === \\'all\\' ? \\'No hay tareas creadas\\' :              currentFilter === \\'pending\\' ? \\'No hay tareas pendientes\\' : \\'No hay tareas completadas\\' }}                                Volver al Dashboard       '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface User {\n  username: string;\n  email: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface UserData {\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  CLIENT = 'client'\n}\n\nexport interface PasswordValidationResult {\n  isValid: boolean;\n  errors: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n  private readonly USERS_KEY = 'taskflow_users';\n  private readonly CURRENT_USER_KEY = 'taskflow_current_user';\n\n  constructor(private router: Router) {\n    this.initializeTestUsers();\n    this.loadUserFromStorage();\n  }\n\n  /**\n   * Inicializa usuarios de prueba para desarrollo\n   */\n  private initializeTestUsers(): void {\n    const users = this.getUsers();\n    if (Object.keys(users).length === 0) {\n      const testUsers: UserData[] = [\n        {\n          username: 'admin',\n          email: 'admin@taskflow.com',\n          password: 'Admin123!',\n          role: UserRole.ADMIN,\n          firstName: 'Administrador',\n          lastName: 'Sistema'\n        },\n        {\n          username: 'client',\n          email: 'client@taskflow.com',\n          password: 'Client123!',\n          role: UserRole.CLIENT,\n          firstName: 'Cliente',\n          lastName: 'Demo'\n        }\n      ];\n\n      testUsers.forEach(user => {\n        users[user.username] = user;\n      });\n      \n      this.saveUsers(users);\n      console.log('Usuarios de prueba creados:', testUsers);\n    }\n  }\n\n  /**\n   * Obtiene todos los usuarios del almacenamiento local\n   */\n  private getUsers(): { [key: string]: UserData } {\n    const usersJson = localStorage.getItem(this.USERS_KEY);\n    return usersJson ? JSON.parse(usersJson) : {};\n  }\n\n  /**\n   * Guarda los usuarios en el almacenamiento local\n   */\n  private saveUsers(users: { [key: string]: UserData }): void {\n    localStorage.setItem(this.USERS_KEY, JSON.stringify(users));\n  }\n\n  /**\n   * Carga el usuario actual desde el almacenamiento\n   */\n  private loadUserFromStorage(): void {\n    const userJson = localStorage.getItem(this.CURRENT_USER_KEY);\n    if (userJson) {\n      const userData: User = JSON.parse(userJson);\n      this.currentUserSubject.next(userData);\n    }\n  }\n\n  /**\n   * Valida la contraseña según las reglas de seguridad\n   */\n  validatePassword(password: string): PasswordValidationResult {\n    const errors: string[] = [];\n    \n    if (password.length ]/.test(password)) {\n      errors.push('La contraseña debe contener al menos un carácter especial');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Registra un nuevo usuario\n   */\n  register(username: string, email: string, password: string, firstName?: string, lastName?: string): { success: boolean; message: string } {\n    console.log('Intentando registrar usuario:', { username, email });\n    const users = this.getUsers();\n\n    // Verificar si el usuario ya existe\n    if (users[username]) {\n      return { success: false, message: 'El nombre de usuario ya existe' };\n    }\n\n    // Verificar si el email ya existe\n    const existingUser = Object.values(users).find(user => user.email === email);\n    if (existingUser) {\n      return { success: false, message: 'El email ya está registrado' };\n    }\n\n    // Validar contraseña\n    const passwordValidation = this.validatePassword(password);\n    if (!passwordValidation.isValid) {\n      return { success: false, message: passwordValidation.errors.join(', ') };\n    }\n\n    // Crear nuevo usuario con rol por defecto\n    const newUser: UserData = {\n      username,\n      email,\n      password,\n      role: UserRole.CLIENT, // Por defecto es cliente\n      firstName,\n      lastName\n    };\n\n    // Guardar el nuevo usuario\n    users[username] = newUser;\n    this.saveUsers(users);\n    console.log('Usuario registrado exitosamente');\n\n    return { success: true, message: 'Usuario registrado exitosamente' };\n  }\n\n  /**\n   * Inicia sesión de un usuario\n   */\n  login(username: string, password: string, rememberMe: boolean): { success: boolean; message: string } {\n    console.log('Intentando iniciar sesión:', username);\n    const users = this.getUsers();\n    const user = users[username];\n\n    if (user && user.password === password) {\n      const userData: User = {\n        username: user.username,\n        email: user.email,\n        role: user.role,\n        firstName: user.firstName,\n        lastName: user.lastName\n      };\n\n      // Guardar usuario actual\n      localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(userData));\n      this.currentUserSubject.next(userData);\n      console.log('Inicio de sesión exitoso');\n      return { success: true, message: 'Inicio de sesión exitoso' };\n    }\n\n    console.log('Inicio de sesión fallido');\n    return { success: false, message: 'Usuario o contraseña incorrectos' };\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    localStorage.removeItem(this.CURRENT_USER_KEY);\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n    console.log('Sesión cerrada');\n  }\n\n  /**\n   * Verifica si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtiene el usuario actual\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Verifica si el usuario actual tiene un rol específico\n   */\n  hasRole(role: UserRole): boolean {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.role === role;\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   */\n  isAdmin(): boolean {\n    return this.hasRole(UserRole.ADMIN);\n  }\n\n  /**\n   * Verifica si el usuario actual es cliente\n   */\n  isClient(): boolean {\n    return this.hasRole(UserRole.CLIENT);\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   */\n  updateProfile(updates: Partial): { success: boolean; message: string } {\n    const currentUser = this.getCurrentUser();\n    if (!currentUser) {\n      return { success: false, message: 'No hay usuario autenticado' };\n    }\n\n    const users = this.getUsers();\n    const userData = users[currentUser.username];\n    \n    if (!userData) {\n      return { success: false, message: 'Usuario no encontrado' };\n    }\n\n    // Actualizar datos del usuario\n    const updatedUserData: UserData = {\n      ...userData,\n      ...updates\n    };\n\n    // Actualizar en almacenamiento\n    users[currentUser.username] = updatedUserData;\n    this.saveUsers(users);\n\n    // Actualizar usuario actual\n    const updatedUser: User = {\n      username: updatedUserData.username,\n      email: updatedUserData.email,\n      role: updatedUserData.role,\n      firstName: updatedUserData.firstName,\n      lastName: updatedUserData.lastName\n    };\n\n    localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(updatedUser));\n    this.currentUserSubject.next(updatedUser);\n\n    return { success: true, message: 'Perfil actualizado exitosamente' };\n  }\n\n  /**\n   * Método de utilidad para ver los usuarios registrados (solo para desarrollo)\n   */\n  debugUsers(): void {\n    console.log('Usuarios registrados:', this.getUsers());\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface User {\n  username: string;\n  email: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface UserData {\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  CLIENT = 'client'\n}\n\nexport interface PasswordValidationResult {\n  isValid: boolean;\n  errors: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n  private readonly USERS_KEY = 'taskflow_users';\n  private readonly CURRENT_USER_KEY = 'taskflow_current_user';\n\n  constructor(private router: Router) {\n    this.initializeTestUsers();\n    this.loadUserFromStorage();\n  }\n\n  /**\n   * Inicializa usuarios de prueba para desarrollo\n   */\n  private initializeTestUsers(): void {\n    const users = this.getUsers();\n    if (Object.keys(users).length === 0) {\n      const testUsers: UserData[] = [\n        {\n          username: 'admin',\n          email: 'admin@taskflow.com',\n          password: 'Admin123!',\n          role: UserRole.ADMIN,\n          firstName: 'Administrador',\n          lastName: 'Sistema'\n        },\n        {\n          username: 'client',\n          email: 'client@taskflow.com',\n          password: 'Client123!',\n          role: UserRole.CLIENT,\n          firstName: 'Cliente',\n          lastName: 'Demo'\n        }\n      ];\n\n      testUsers.forEach(user => {\n        users[user.username] = user;\n      });\n      \n      this.saveUsers(users);\n      console.log('Usuarios de prueba creados:', testUsers);\n    }\n  }\n\n  /**\n   * Obtiene todos los usuarios del almacenamiento local\n   */\n  private getUsers(): { [key: string]: UserData } {\n    const usersJson = localStorage.getItem(this.USERS_KEY);\n    return usersJson ? JSON.parse(usersJson) : {};\n  }\n\n  /**\n   * Guarda los usuarios en el almacenamiento local\n   */\n  private saveUsers(users: { [key: string]: UserData }): void {\n    localStorage.setItem(this.USERS_KEY, JSON.stringify(users));\n  }\n\n  /**\n   * Carga el usuario actual desde el almacenamiento\n   */\n  private loadUserFromStorage(): void {\n    const userJson = localStorage.getItem(this.CURRENT_USER_KEY);\n    if (userJson) {\n      const userData: User = JSON.parse(userJson);\n      this.currentUserSubject.next(userData);\n    }\n  }\n\n  /**\n   * Valida la contraseña según las reglas de seguridad\n   */\n  validatePassword(password: string): PasswordValidationResult {\n    const errors: string[] = [];\n    \n    if (password.length ]/.test(password)) {\n      errors.push('La contraseña debe contener al menos un carácter especial');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * Registra un nuevo usuario\n   */\n  register(username: string, email: string, password: string, firstName?: string, lastName?: string): { success: boolean; message: string } {\n    console.log('Intentando registrar usuario:', { username, email });\n    const users = this.getUsers();\n\n    // Verificar si el usuario ya existe\n    if (users[username]) {\n      return { success: false, message: 'El nombre de usuario ya existe' };\n    }\n\n    // Verificar si el email ya existe\n    const existingUser = Object.values(users).find(user => user.email === email);\n    if (existingUser) {\n      return { success: false, message: 'El email ya está registrado' };\n    }\n\n    // Validar contraseña\n    const passwordValidation = this.validatePassword(password);\n    if (!passwordValidation.isValid) {\n      return { success: false, message: passwordValidation.errors.join(', ') };\n    }\n\n    // Crear nuevo usuario con rol por defecto\n    const newUser: UserData = {\n      username,\n      email,\n      password,\n      role: UserRole.CLIENT, // Por defecto es cliente\n      firstName,\n      lastName\n    };\n\n    // Guardar el nuevo usuario\n    users[username] = newUser;\n    this.saveUsers(users);\n    console.log('Usuario registrado exitosamente');\n\n    return { success: true, message: 'Usuario registrado exitosamente' };\n  }\n\n  /**\n   * Inicia sesión de un usuario\n   */\n  login(username: string, password: string, rememberMe: boolean): { success: boolean; message: string } {\n    console.log('Intentando iniciar sesión:', username);\n    const users = this.getUsers();\n    const user = users[username];\n\n    if (user && user.password === password) {\n      const userData: User = {\n        username: user.username,\n        email: user.email,\n        role: user.role,\n        firstName: user.firstName,\n        lastName: user.lastName\n      };\n\n      // Guardar usuario actual\n      localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(userData));\n      this.currentUserSubject.next(userData);\n      console.log('Inicio de sesión exitoso');\n      return { success: true, message: 'Inicio de sesión exitoso' };\n    }\n\n    console.log('Inicio de sesión fallido');\n    return { success: false, message: 'Usuario o contraseña incorrectos' };\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    localStorage.removeItem(this.CURRENT_USER_KEY);\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n    console.log('Sesión cerrada');\n  }\n\n  /**\n   * Verifica si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtiene el usuario actual\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Verifica si el usuario actual tiene un rol específico\n   */\n  hasRole(role: UserRole): boolean {\n    const currentUser = this.getCurrentUser();\n    return currentUser?.role === role;\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   */\n  isAdmin(): boolean {\n    return this.hasRole(UserRole.ADMIN);\n  }\n\n  /**\n   * Verifica si el usuario actual es cliente\n   */\n  isClient(): boolean {\n    return this.hasRole(UserRole.CLIENT);\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   */\n  updateProfile(updates: Partial): { success: boolean; message: string } {\n    const currentUser = this.getCurrentUser();\n    if (!currentUser) {\n      return { success: false, message: 'No hay usuario autenticado' };\n    }\n\n    const users = this.getUsers();\n    const userData = users[currentUser.username];\n    \n    if (!userData) {\n      return { success: false, message: 'Usuario no encontrado' };\n    }\n\n    // Actualizar datos del usuario\n    const updatedUserData: UserData = {\n      ...userData,\n      ...updates\n    };\n\n    // Actualizar en almacenamiento\n    users[currentUser.username] = updatedUserData;\n    this.saveUsers(users);\n\n    // Actualizar usuario actual\n    const updatedUser: User = {\n      username: updatedUserData.username,\n      email: updatedUserData.email,\n      role: updatedUserData.role,\n      firstName: updatedUserData.firstName,\n      lastName: updatedUserData.lastName\n    };\n\n    localStorage.setItem(this.CURRENT_USER_KEY, JSON.stringify(updatedUser));\n    this.currentUserSubject.next(updatedUser);\n\n    return { success: true, message: 'Perfil actualizado exitosamente' };\n  }\n\n  /**\n   * Método de utilidad para ver los usuarios registrados (solo para desarrollo)\n   */\n  debugUsers(): void {\n    console.log('Usuarios registrados:', this.getUsers());\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de gestión de usuarios\nPermite al administrador ver y gestionar todos los usuarios del sistema\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./user-management.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoleBadgeClass\n                            \n                            \n                                getRoleName\n                            \n                            \n                                    Private\n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/user-management/user-management.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoleBadgeClass\n                        \n                    \n                \n            \n            \n                \ngetRoleBadgeClass(role: UserRole)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/user-management/user-management.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Obtiene la clase CSS para el badge del rol\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            UserRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoleName\n                        \n                    \n                \n            \n            \n                \ngetRoleName(role: UserRole)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/user-management/user-management.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre del rol en español\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            UserRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/user-management/user-management.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Carga la lista de usuarios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/user-management/user-management.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/user-management/user-management.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/user-management/user-management.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService, User, UserRole } from '../../../services/auth.service';\n\n/**\n * Componente de gestión de usuarios\n * Permite al administrador ver y gestionar todos los usuarios del sistema\n */\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class UserManagementComponent implements OnInit {\n  users: User[] = [];\n  currentUser: User | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    \n    if (!this.currentUser || !this.authService.isAdmin()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.loadUsers();\n  }\n\n  /**\n   * Carga la lista de usuarios\n   */\n  private loadUsers(): void {\n    // En una aplicación real, esto vendría de un servicio\n    this.users = [\n      {\n        username: 'admin',\n        email: 'admin@taskflow.com',\n        role: UserRole.ADMIN,\n        firstName: 'Administrador',\n        lastName: 'Sistema'\n      },\n      {\n        username: 'client',\n        email: 'client@taskflow.com',\n        role: UserRole.CLIENT,\n        firstName: 'Cliente',\n        lastName: 'Demo'\n      }\n    ];\n  }\n\n  /**\n   * Obtiene el nombre del rol en español\n   */\n  getRoleName(role: UserRole): string {\n    return role === UserRole.ADMIN ? 'Administrador' : 'Cliente';\n  }\n\n  /**\n   * Obtiene la clase CSS para el badge del rol\n   */\n  getRoleBadgeClass(role: UserRole): string {\n    return role === UserRole.ADMIN ? 'bg-danger' : 'bg-primary';\n  }\n} \n    \n\n    \n        \n  \n    Gestión de Usuarios\n    Administra los usuarios del sistema\n  \n\n  \n    \n      Lista de Usuarios\n      \n        Agregar Usuario\n      \n    \n    \n      \n        \n          \n            \n              Usuario\n              Nombre Completo\n              Email\n              Rol\n              Estado\n              Acciones\n            \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  {{ user.username }}\n                \n              \n              {{ user.firstName }} {{ user.lastName }}\n              {{ user.email }}\n              \n                \n                  {{ getRoleName(user.role) }}\n                \n              \n              \n                Activo\n              \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      Volver al Panel de Administración\n    \n  \n \n    \n\n    \n                \n                    ./user-management.component.scss\n                \n                 \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gestión de Usuarios    Administra los usuarios del sistema              Lista de Usuarios              Agregar Usuario                                                                Usuario              Nombre Completo              Email              Rol              Estado              Acciones                                                                                                                                                    {{ user.username }}                                            {{ user.firstName }} {{ user.lastName }}              {{ user.email }}                                                {{ getRoleName(user.role) }}                                                            Activo                                                                                                                                                                                                                                                Volver al Panel de Administración       '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'App', 'selector': 'app-root'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'Dashboard', 'selector': 'app-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Login', 'selector': 'app-login'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Profile', 'selector': 'app-profile'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'Recover', 'selector': 'app-recover'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'Register', 'selector': 'app-register'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskDetailComponent', 'selector': 'app-task-detail'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPreferences.html":{"url":"interfaces/UserPreferences.html","title":"interface - UserPreferences","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPreferences\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/profile/profile.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            notifyDue\n                                        \n                                \n                                \n                                        \n                                            notifyTasks\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:     \"es\" | \"en\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"es\" | \"en\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifyDue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifyDue:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifyTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifyTasks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:     \"light\" | \"dark\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"light\" | \"dark\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\n\ninterface UserPreferences {\n  theme: 'light' | 'dark';\n  notifyTasks: boolean;\n  notifyDue: boolean;\n  language: 'es' | 'en';\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule]\n})\nexport class ProfileComponent implements OnInit {\n  personalForm: FormGroup;\n  passwordForm: FormGroup;\n  preferencesForm: FormGroup;\n  currentTab: 'personal' | 'password' | 'preferences' = 'personal';\n  successMessage: string = '';\n  errorMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.personalForm = this.fb.group({\n      fullName: ['', [Validators.required, Validators.minLength(3), Validators.pattern('[A-Za-zÀ-ÿ\\\\s]+')]],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required, Validators.minLength(4), Validators.pattern('[a-zA-Z0-9_]+')]]\n    });\n\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\n      confirmNewPassword: ['', [Validators.required]]\n    }, { validator: this.passwordMatchValidator });\n\n    this.preferencesForm = this.fb.group({\n      theme: ['light'],\n      notifyTasks: [true],\n      notifyDue: [true],\n      language: ['es']\n    });\n  }\n\n  ngOnInit(): void {\n    const user = this.authService.getCurrentUser();\n    if (!user) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    // Cargar datos del usuario\n    this.personalForm.patchValue({\n      username: user.username,\n      email: user.username + '@example.com', // Simulado\n      fullName: 'Usuario de Ejemplo' // Simulado\n    });\n\n    // Deshabilitar el campo de email\n    this.personalForm.get('email')?.disable();\n\n    // Cargar preferencias (simulado)\n    const preferences: UserPreferences = {\n      theme: 'light',\n      notifyTasks: true,\n      notifyDue: true,\n      language: 'es'\n    };\n    this.preferencesForm.patchValue(preferences);\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('newPassword')?.value === g.get('confirmNewPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  onPersonalSubmit(): void {\n    if (this.personalForm.valid) {\n      // Aquí iría la lógica para actualizar la información personal\n      this.successMessage = 'Información personal actualizada correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n    }\n  }\n\n  onPasswordSubmit(): void {\n    if (this.passwordForm.valid) {\n      // Aquí iría la lógica para cambiar la contraseña\n      this.successMessage = 'Contraseña actualizada correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n      this.passwordForm.reset();\n    }\n  }\n\n  onPreferencesSubmit(): void {\n    if (this.preferencesForm.valid) {\n      // Aquí iría la lógica para guardar las preferencias\n      this.successMessage = 'Preferencias guardadas correctamente';\n      setTimeout(() => this.successMessage = '', 3000);\n    }\n  }\n\n  setTab(tab: 'personal' | 'password' | 'preferences'): void {\n    this.currentTab = tab;\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/components/admin/task-management/task-management.component.ts\n            \n            component\n            TaskManagementComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                56 %\n                (21/37)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            interface\n            MenuItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.ts\n            \n            component\n            Dashboard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.ts\n            \n            component\n            Login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            interface\n            UserPreferences\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.ts\n            \n            component\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/recover/recover.component.ts\n            \n            component\n            RecoverComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/recover/recover.ts\n            \n            component\n            Recover\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/app/components/register/register.ts\n            \n            component\n            Register\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/components/tasks/task-detail/task-detail.component.ts\n            \n            component\n            TaskDetailComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/components/tasks/tasks.component.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/guards/role.guard.ts\n            \n            variable\n            adminGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/guards/role.guard.ts\n            \n            variable\n            clientGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/guards/role.guard.ts\n            \n            variable\n            roleGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                71 %\n                (15/21)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            PasswordValidationResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth.ts\n            \n            injectable\n            Auth\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.2\n        \n            @popperjs/core : ^2.11.8\n        \n            bootstrap : ^5.3.6\n        \n            express : ^5.1.0\n        \n            node-fetch : ^3.3.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ^0.15.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth.service.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : client\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTaskFlow\nTaskFlow es una aplicación web de gestión de tareas desarrollada con Angular 17. Permite a los usuarios gestionar sus tareas diarias de manera eficiente y organizada.\nCaracterísticas\n\nAutenticación de usuarios (registro, inicio de sesión, recuperación de contraseña)\nGestión de tareas (crear, editar, eliminar, marcar como completadas)\nFiltrado y búsqueda de tareas\nInterfaz responsive con Bootstrap\nAlmacenamiento local de datos\n\nRequisitos previos\n\nNode.js (versión 18 o superior)\nnpm (versión 9 o superior)\nAngular CLI (versión 17)\n\nInstalación\n\nClonar el repositorio:\n\nExample :git clone [URL_DEL_REPOSITORIO]\nInstalar dependencias:\n\nExample :cd taskflow-angular\nnpm install\nIniciar el servidor de desarrollo:\n\nExample :ng serve\nAbrir el navegador en http://localhost:4200\n\nUsuario de prueba\nPara probar la aplicación, puedes usar las siguientes credenciales:\n\nUsuario: test\nContraseña: test123\nEmail: test@example.com\n\nEstructura del proyecto\nExample :taskflow-angular/\n├── src/\n│   ├── app/\n│   │   ├── components/\n│   │   │   ├── dashboard/\n│   │   │   ├── login/\n│   │   │   ├── profile/\n│   │   │   ├── recover/\n│   │   │   └── register/\n│   │   ├── services/\n│   │   │   ├── auth.service.ts\n│   │   │   └── task.service.ts\n│   │   ├── app.component.ts\n│   │   └── app.routes.ts\n│   ├── assets/\n│   └── styles/\n└── package.jsonScripts disponibles\n\nng serve: Inicia el servidor de desarrollo\nng build: Compila el proyecto\nng test: Ejecuta los tests unitarios\nng e2e: Ejecuta los tests end-to-end\n\nContribuir\n\nHacer fork del repositorio\nCrear una rama para tu feature (git checkout -b feature/AmazingFeature)\nHacer commit de tus cambios (git commit -m 'Add some AmazingFeature')\nPush a la rama (git push origin feature/AmazingFeature)\nAbrir un Pull Request\n\nLicencia\nEste proyecto está bajo la Licencia MIT. Ver el archivo LICENSE para más detalles.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminGuard   (src/.../role.guard.ts)\n                        \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            clientGuard   (src/.../role.guard.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            roleGuard   (src/.../role.guard.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : roleGuard(UserRole.ADMIN)\n                    \n                \n\n            \n                \n                    Guard específico para administradores\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : roleGuard(UserRole.CLIENT)\n                    \n                \n\n            \n                \n                    Guard específico para clientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (requiredRole: UserRole): CanActivateFn => {\n  return (route, state) => {\n    const authService = inject(AuthService);\n    const router = inject(Router);\n\n    if (authService.isAuthenticated() && authService.hasRole(requiredRole)) {\n      return true;\n    }\n\n    // Redirigir al dashboard si está autenticado pero no tiene el rol requerido\n    if (authService.isAuthenticated()) {\n      router.navigate(['/dashboard']);\n    } else {\n      router.navigate(['/login']);\n    }\n    \n    return false;\n  };\n}\n                    \n                \n\n            \n                \n                    Guard que verifica si el usuario tiene un rol específico\n\n                \n            \n\n        \n    \n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimations(),\n    provideHttpClient(),\n    FormsModule,\n    ReactiveFormsModule\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return true;\n  }\n\n  router.navigate(['/login']);\n  return false;\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
